Terminaux inutilisés dans la grammaire

    "_cast"
    "class"
    "extends"
    "import"
    "method"
    "new"


État 2 conflits: 1 réduction/réduction
État 105 conflits: 1 décalage/réduction


Grammaire

    0 $accept: program "end of file"

    1 program: exp
    2        | chunks

    3 exps: ε
    4     | exp
    5     | exp ";" exps

    6 exp: "integer"
    7    | "nil"
    8    | "string"
    9    | typeid "[" exp "]" "of" exp
   10    | typeid "{" "}"
   11    | typeid "{" "identifier" "=" exp "}"
   12    | typeid "{" "identifier" "=" exp array_r "}"
   13    | lvalue
   14    | "identifier" "(" ")"
   15    | "identifier" "(" exp ")"
   16    | "identifier" "(" exp function_r ")"
   17    | "-" exp
   18    | exp "+" exp
   19    | exp "<=" exp
   20    | exp ">=" exp
   21    | exp "<>" exp
   22    | exp "-" exp
   23    | exp "*" exp
   24    | exp "/" exp
   25    | exp "=" exp
   26    | exp "<" exp
   27    | exp ">" exp
   28    | exp "&" exp
   29    | exp "|" exp
   30    | "(" exps ")"
   31    | lvalue ":=" exp
   32    | "if" exp "then" exp
   33    | "if" exp "then" exp "else" exp
   34    | "while" exp "do" exp
   35    | "for" "identifier" ":=" exp "to" exp "do" exp
   36    | "break"
   37    | "let" chunks "in" exp "end"

   38 array_r: "," "identifier" "=" exp
   39        | "," "identifier" "=" exp array_r

   40 function_r: "," exp
   41           | "," exp function_r

   42 lvalue: "identifier"
   43       | lvalue "." "identifier"
   44       | lvalue "[" exp "]"

   45 chunks: ε
   46       | tychunk chunks
   47       | funchunk chunks
   48       | varchunk chunks

   49 varchunk: vardec
   50         | vardec tychunk

   51 funchunk: fundec
   52         | fundec tychunk

   53 vardec: "var" "identifier" ":=" exp
   54       | "var" "identifier" ":" typeid ":=" exp

   55 fundec: "function" "identifier" "(" tyfields ")" "=" exp
   56       | "function" "identifier" "(" tyfields ")" ":" typeid "=" exp
   57       | "primitive" "identifier" "(" tyfields ")"
   58       | "primitive" "identifier" "(" tyfields ")" ":" typeid

   59 tychunk: tydec
   60        | tydec tychunk

   61 tydec: "type" "identifier" "=" ty

   62 ty: typeid
   63   | "{" tyfields "}"
   64   | "array" "of" typeid

   65 tyfields: ε
   66         | tyfields.1

   67 tyfields.1: tyfields.1 "," tyfield
   68           | tyfield

   69 tyfield: "identifier" ":" typeid

   70 typeid: "identifier"
   71       | "_namety" "(" "integer" ")"


Terminaux, suivis des règles où ils apparaissent

    "end of file" (0) 0
    error (256)
    "string" <std::string> (258) 8
    "identifier" <misc::symbol> (259) 11 12 14 15 16 35 38 39 42 43 53 54 55 56 57 58 61 69 70
    "integer" <int> (260) 6 71
    "&" (261) 28
    "array" (262) 64
    ":=" (263) 31 35 53 54
    "break" (264) 36
    "_cast" (265)
    "class" (266)
    ":" (267) 54 56 58 69
    "," (268) 38 39 40 41 67
    "/" (269) 24
    "do" (270) 34 35
    "." (271) 43
    "else" (272) 33
    "end" (273) 37
    "=" (274) 11 12 25 38 39 55 56 61
    "extends" (275)
    "for" (276) 35
    "function" (277) 55 56
    ">=" (278) 20
    ">" (279) 27
    "if" (280) 32 33
    "import" (281)
    "in" (282) 37
    "{" (283) 10 11 12 63
    "[" (284) 9 44
    "<=" (285) 19
    "let" (286) 37
    "(" (287) 14 15 16 30 55 56 57 58 71
    "<" (288) 26
    "-" (289) 17 22
    "method" (290)
    "<>" (291) 21
    "new" (292)
    "nil" (293) 7
    "of" (294) 9 64
    "|" (295) 29
    "+" (296) 18
    "primitive" (297) 57 58
    "}" (298) 10 11 12 63
    "]" (299) 9 44
    ")" (300) 14 15 16 30 55 56 57 58 71
    ";" (301) 5
    "then" (302) 32 33
    "*" (303) 23
    "to" (304) 35
    "type" (305) 61
    "var" (306) 53 54
    "while" (307) 34
    "_chunks" (308)
    "_namety" (309) 71


Non-terminaux, suivis des règles où ils apparaissent

    $accept (55)
        à gauche: 0
    program (56)
        à gauche: 1 2
        à droite: 0
    exps (57)
        à gauche: 3 4 5
        à droite: 5 30
    exp <ast::Exp*> (58)
        à gauche: 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37
        à droite: 1 4 5 9 11 12 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 31 32 33 34 35 37 38 39 40 41 44 53 54 55 56
    array_r (59)
        à gauche: 38 39
        à droite: 12 39
    function_r (60)
        à gauche: 40 41
        à droite: 16 41
    lvalue (61)
        à gauche: 42 43 44
        à droite: 13 31 43 44
    chunks <ast::ChunkList*> (62)
        à gauche: 45 46 47 48
        à droite: 2 37 46 47 48
    varchunk (63)
        à gauche: 49 50
        à droite: 48
    funchunk (64)
        à gauche: 51 52
        à droite: 47
    vardec (65)
        à gauche: 53 54
        à droite: 49 50
    fundec (66)
        à gauche: 55 56 57 58
        à droite: 51 52
    tychunk <ast::TypeChunk*> (67)
        à gauche: 59 60
        à droite: 46 50 52 60
    tydec <ast::TypeDec*> (68)
        à gauche: 61
        à droite: 59 60
    ty <ast::Ty*> (69)
        à gauche: 62 63 64
        à droite: 61
    tyfields <ast::fields_type*> (70)
        à gauche: 65 66
        à droite: 55 56 57 58 63
    tyfields.1 <ast::fields_type*> (71)
        à gauche: 67 68
        à droite: 66 67
    tyfield <ast::Field*> (72)
        à gauche: 69
        à droite: 67 68
    typeid <ast::NameTy*> (73)
        à gauche: 70 71
        à droite: 9 10 11 12 54 56 58 62 64 69


État 0

    0 $accept: • program "end of file"
    1 program: • exp
    2        | • chunks
    6 exp: • "integer"
    7    | • "nil"
    8    | • "string"
    9    | • typeid "[" exp "]" "of" exp
   10    | • typeid "{" "}"
   11    | • typeid "{" "identifier" "=" exp "}"
   12    | • typeid "{" "identifier" "=" exp array_r "}"
   13    | • lvalue
   14    | • "identifier" "(" ")"
   15    | • "identifier" "(" exp ")"
   16    | • "identifier" "(" exp function_r ")"
   17    | • "-" exp
   18    | • exp "+" exp
   19    | • exp "<=" exp
   20    | • exp ">=" exp
   21    | • exp "<>" exp
   22    | • exp "-" exp
   23    | • exp "*" exp
   24    | • exp "/" exp
   25    | • exp "=" exp
   26    | • exp "<" exp
   27    | • exp ">" exp
   28    | • exp "&" exp
   29    | • exp "|" exp
   30    | • "(" exps ")"
   31    | • lvalue ":=" exp
   32    | • "if" exp "then" exp
   33    | • "if" exp "then" exp "else" exp
   34    | • "while" exp "do" exp
   35    | • "for" "identifier" ":=" exp "to" exp "do" exp
   36    | • "break"
   37    | • "let" chunks "in" exp "end"
   42 lvalue: • "identifier"
   43       | • lvalue "." "identifier"
   44       | • lvalue "[" exp "]"
   45 chunks: ε •  ["end of file"]
   46       | • tychunk chunks
   47       | • funchunk chunks
   48       | • varchunk chunks
   49 varchunk: • vardec
   50         | • vardec tychunk
   51 funchunk: • fundec
   52         | • fundec tychunk
   53 vardec: • "var" "identifier" ":=" exp
   54       | • "var" "identifier" ":" typeid ":=" exp
   55 fundec: • "function" "identifier" "(" tyfields ")" "=" exp
   56       | • "function" "identifier" "(" tyfields ")" ":" typeid "=" exp
   57       | • "primitive" "identifier" "(" tyfields ")"
   58       | • "primitive" "identifier" "(" tyfields ")" ":" typeid
   59 tychunk: • tydec
   60        | • tydec tychunk
   61 tydec: • "type" "identifier" "=" ty
   70 typeid: • "identifier"
   71       | • "_namety" "(" "integer" ")"

    "string"      décalage et aller à l'état 1
    "identifier"  décalage et aller à l'état 2
    "integer"     décalage et aller à l'état 3
    "break"       décalage et aller à l'état 4
    "for"         décalage et aller à l'état 5
    "function"    décalage et aller à l'état 6
    "if"          décalage et aller à l'état 7
    "let"         décalage et aller à l'état 8
    "("           décalage et aller à l'état 9
    "-"           décalage et aller à l'état 10
    "nil"         décalage et aller à l'état 11
    "primitive"   décalage et aller à l'état 12
    "type"        décalage et aller à l'état 13
    "var"         décalage et aller à l'état 14
    "while"       décalage et aller à l'état 15
    "_namety"     décalage et aller à l'état 16

    $défaut  réduction par utilisation de la règle 45 (chunks)

    program   aller à l'état 17
    exp       aller à l'état 18
    lvalue    aller à l'état 19
    chunks    aller à l'état 20
    varchunk  aller à l'état 21
    funchunk  aller à l'état 22
    vardec    aller à l'état 23
    fundec    aller à l'état 24
    tychunk   aller à l'état 25
    tydec     aller à l'état 26
    typeid    aller à l'état 27


État 1

    8 exp: "string" •

    $défaut  réduction par utilisation de la règle 8 (exp)


État 2

   14 exp: "identifier" • "(" ")"
   15    | "identifier" • "(" exp ")"
   16    | "identifier" • "(" exp function_r ")"
   42 lvalue: "identifier" •  ["end of file", "&", ":=", ",", "/", "do", ".", "else", "end", "=", "function", ">=", ">", "in", "[", "<=", "<", "-", "<>", "|", "+", "primitive", "}", "]", ")", ";", "then", "*", "to", "type", "var"]
   70 typeid: "identifier" •  ["{", "["]

    "("  décalage et aller à l'état 28

    "{"      réduction par utilisation de la règle 70 (typeid)
    "["      réduction par utilisation de la règle 42 (lvalue)
    "["      [réduction par utilisation de la règle 70 (typeid)]
    $défaut  réduction par utilisation de la règle 42 (lvalue)

    conflit par réduction/réduction sur le jeton "[" :
       42 lvalue: "identifier" •
       70 typeid: "identifier" •
      Premier exemple: "identifier" • "[" exp "]" "end of file"
      Première dérivation par réduction
        $accept
        ↳ 0: program                                           "end of file"
             ↳ 1: exp
                  ↳ 13: lvalue
                        ↳ 44: lvalue               "[" exp "]"
                              ↳ 42: "identifier" •
      Deuxième exemple: "identifier" • "[" exp "]" "of" exp "end of file"
      Seconde dérivation par réduction
        $accept
        ↳ 0: program                                             "end of file"
             ↳ 1: exp
                  ↳ 9: typeid               "[" exp "]" "of" exp
                       ↳ 70: "identifier" •



État 3

    6 exp: "integer" •

    $défaut  réduction par utilisation de la règle 6 (exp)


État 4

   36 exp: "break" •

    $défaut  réduction par utilisation de la règle 36 (exp)


État 5

   35 exp: "for" • "identifier" ":=" exp "to" exp "do" exp

    "identifier"  décalage et aller à l'état 29


État 6

   55 fundec: "function" • "identifier" "(" tyfields ")" "=" exp
   56       | "function" • "identifier" "(" tyfields ")" ":" typeid "=" exp

    "identifier"  décalage et aller à l'état 30


État 7

    6 exp: • "integer"
    7    | • "nil"
    8    | • "string"
    9    | • typeid "[" exp "]" "of" exp
   10    | • typeid "{" "}"
   11    | • typeid "{" "identifier" "=" exp "}"
   12    | • typeid "{" "identifier" "=" exp array_r "}"
   13    | • lvalue
   14    | • "identifier" "(" ")"
   15    | • "identifier" "(" exp ")"
   16    | • "identifier" "(" exp function_r ")"
   17    | • "-" exp
   18    | • exp "+" exp
   19    | • exp "<=" exp
   20    | • exp ">=" exp
   21    | • exp "<>" exp
   22    | • exp "-" exp
   23    | • exp "*" exp
   24    | • exp "/" exp
   25    | • exp "=" exp
   26    | • exp "<" exp
   27    | • exp ">" exp
   28    | • exp "&" exp
   29    | • exp "|" exp
   30    | • "(" exps ")"
   31    | • lvalue ":=" exp
   32    | • "if" exp "then" exp
   32    | "if" • exp "then" exp
   33    | • "if" exp "then" exp "else" exp
   33    | "if" • exp "then" exp "else" exp
   34    | • "while" exp "do" exp
   35    | • "for" "identifier" ":=" exp "to" exp "do" exp
   36    | • "break"
   37    | • "let" chunks "in" exp "end"
   42 lvalue: • "identifier"
   43       | • lvalue "." "identifier"
   44       | • lvalue "[" exp "]"
   70 typeid: • "identifier"
   71       | • "_namety" "(" "integer" ")"

    "string"      décalage et aller à l'état 1
    "identifier"  décalage et aller à l'état 2
    "integer"     décalage et aller à l'état 3
    "break"       décalage et aller à l'état 4
    "for"         décalage et aller à l'état 5
    "if"          décalage et aller à l'état 7
    "let"         décalage et aller à l'état 8
    "("           décalage et aller à l'état 9
    "-"           décalage et aller à l'état 10
    "nil"         décalage et aller à l'état 11
    "while"       décalage et aller à l'état 15
    "_namety"     décalage et aller à l'état 16

    exp     aller à l'état 31
    lvalue  aller à l'état 19
    typeid  aller à l'état 27


État 8

   37 exp: "let" • chunks "in" exp "end"
   45 chunks: ε •  ["in"]
   46       | • tychunk chunks
   47       | • funchunk chunks
   48       | • varchunk chunks
   49 varchunk: • vardec
   50         | • vardec tychunk
   51 funchunk: • fundec
   52         | • fundec tychunk
   53 vardec: • "var" "identifier" ":=" exp
   54       | • "var" "identifier" ":" typeid ":=" exp
   55 fundec: • "function" "identifier" "(" tyfields ")" "=" exp
   56       | • "function" "identifier" "(" tyfields ")" ":" typeid "=" exp
   57       | • "primitive" "identifier" "(" tyfields ")"
   58       | • "primitive" "identifier" "(" tyfields ")" ":" typeid
   59 tychunk: • tydec
   60        | • tydec tychunk
   61 tydec: • "type" "identifier" "=" ty

    "function"   décalage et aller à l'état 6
    "primitive"  décalage et aller à l'état 12
    "type"       décalage et aller à l'état 13
    "var"        décalage et aller à l'état 14

    $défaut  réduction par utilisation de la règle 45 (chunks)

    chunks    aller à l'état 32
    varchunk  aller à l'état 21
    funchunk  aller à l'état 22
    vardec    aller à l'état 23
    fundec    aller à l'état 24
    tychunk   aller à l'état 25
    tydec     aller à l'état 26


État 9

    3 exps: ε •  [")"]
    4     | • exp
    5     | • exp ";" exps
    6 exp: • "integer"
    7    | • "nil"
    8    | • "string"
    9    | • typeid "[" exp "]" "of" exp
   10    | • typeid "{" "}"
   11    | • typeid "{" "identifier" "=" exp "}"
   12    | • typeid "{" "identifier" "=" exp array_r "}"
   13    | • lvalue
   14    | • "identifier" "(" ")"
   15    | • "identifier" "(" exp ")"
   16    | • "identifier" "(" exp function_r ")"
   17    | • "-" exp
   18    | • exp "+" exp
   19    | • exp "<=" exp
   20    | • exp ">=" exp
   21    | • exp "<>" exp
   22    | • exp "-" exp
   23    | • exp "*" exp
   24    | • exp "/" exp
   25    | • exp "=" exp
   26    | • exp "<" exp
   27    | • exp ">" exp
   28    | • exp "&" exp
   29    | • exp "|" exp
   30    | • "(" exps ")"
   30    | "(" • exps ")"
   31    | • lvalue ":=" exp
   32    | • "if" exp "then" exp
   33    | • "if" exp "then" exp "else" exp
   34    | • "while" exp "do" exp
   35    | • "for" "identifier" ":=" exp "to" exp "do" exp
   36    | • "break"
   37    | • "let" chunks "in" exp "end"
   42 lvalue: • "identifier"
   43       | • lvalue "." "identifier"
   44       | • lvalue "[" exp "]"
   70 typeid: • "identifier"
   71       | • "_namety" "(" "integer" ")"

    "string"      décalage et aller à l'état 1
    "identifier"  décalage et aller à l'état 2
    "integer"     décalage et aller à l'état 3
    "break"       décalage et aller à l'état 4
    "for"         décalage et aller à l'état 5
    "if"          décalage et aller à l'état 7
    "let"         décalage et aller à l'état 8
    "("           décalage et aller à l'état 9
    "-"           décalage et aller à l'état 10
    "nil"         décalage et aller à l'état 11
    "while"       décalage et aller à l'état 15
    "_namety"     décalage et aller à l'état 16

    $défaut  réduction par utilisation de la règle 3 (exps)

    exps    aller à l'état 33
    exp     aller à l'état 34
    lvalue  aller à l'état 19
    typeid  aller à l'état 27


État 10

    6 exp: • "integer"
    7    | • "nil"
    8    | • "string"
    9    | • typeid "[" exp "]" "of" exp
   10    | • typeid "{" "}"
   11    | • typeid "{" "identifier" "=" exp "}"
   12    | • typeid "{" "identifier" "=" exp array_r "}"
   13    | • lvalue
   14    | • "identifier" "(" ")"
   15    | • "identifier" "(" exp ")"
   16    | • "identifier" "(" exp function_r ")"
   17    | • "-" exp
   17    | "-" • exp
   18    | • exp "+" exp
   19    | • exp "<=" exp
   20    | • exp ">=" exp
   21    | • exp "<>" exp
   22    | • exp "-" exp
   23    | • exp "*" exp
   24    | • exp "/" exp
   25    | • exp "=" exp
   26    | • exp "<" exp
   27    | • exp ">" exp
   28    | • exp "&" exp
   29    | • exp "|" exp
   30    | • "(" exps ")"
   31    | • lvalue ":=" exp
   32    | • "if" exp "then" exp
   33    | • "if" exp "then" exp "else" exp
   34    | • "while" exp "do" exp
   35    | • "for" "identifier" ":=" exp "to" exp "do" exp
   36    | • "break"
   37    | • "let" chunks "in" exp "end"
   42 lvalue: • "identifier"
   43       | • lvalue "." "identifier"
   44       | • lvalue "[" exp "]"
   70 typeid: • "identifier"
   71       | • "_namety" "(" "integer" ")"

    "string"      décalage et aller à l'état 1
    "identifier"  décalage et aller à l'état 2
    "integer"     décalage et aller à l'état 3
    "break"       décalage et aller à l'état 4
    "for"         décalage et aller à l'état 5
    "if"          décalage et aller à l'état 7
    "let"         décalage et aller à l'état 8
    "("           décalage et aller à l'état 9
    "-"           décalage et aller à l'état 10
    "nil"         décalage et aller à l'état 11
    "while"       décalage et aller à l'état 15
    "_namety"     décalage et aller à l'état 16

    exp     aller à l'état 35
    lvalue  aller à l'état 19
    typeid  aller à l'état 27


État 11

    7 exp: "nil" •

    $défaut  réduction par utilisation de la règle 7 (exp)


État 12

   57 fundec: "primitive" • "identifier" "(" tyfields ")"
   58       | "primitive" • "identifier" "(" tyfields ")" ":" typeid

    "identifier"  décalage et aller à l'état 36


État 13

   61 tydec: "type" • "identifier" "=" ty

    "identifier"  décalage et aller à l'état 37


État 14

   53 vardec: "var" • "identifier" ":=" exp
   54       | "var" • "identifier" ":" typeid ":=" exp

    "identifier"  décalage et aller à l'état 38


État 15

    6 exp: • "integer"
    7    | • "nil"
    8    | • "string"
    9    | • typeid "[" exp "]" "of" exp
   10    | • typeid "{" "}"
   11    | • typeid "{" "identifier" "=" exp "}"
   12    | • typeid "{" "identifier" "=" exp array_r "}"
   13    | • lvalue
   14    | • "identifier" "(" ")"
   15    | • "identifier" "(" exp ")"
   16    | • "identifier" "(" exp function_r ")"
   17    | • "-" exp
   18    | • exp "+" exp
   19    | • exp "<=" exp
   20    | • exp ">=" exp
   21    | • exp "<>" exp
   22    | • exp "-" exp
   23    | • exp "*" exp
   24    | • exp "/" exp
   25    | • exp "=" exp
   26    | • exp "<" exp
   27    | • exp ">" exp
   28    | • exp "&" exp
   29    | • exp "|" exp
   30    | • "(" exps ")"
   31    | • lvalue ":=" exp
   32    | • "if" exp "then" exp
   33    | • "if" exp "then" exp "else" exp
   34    | • "while" exp "do" exp
   34    | "while" • exp "do" exp
   35    | • "for" "identifier" ":=" exp "to" exp "do" exp
   36    | • "break"
   37    | • "let" chunks "in" exp "end"
   42 lvalue: • "identifier"
   43       | • lvalue "." "identifier"
   44       | • lvalue "[" exp "]"
   70 typeid: • "identifier"
   71       | • "_namety" "(" "integer" ")"

    "string"      décalage et aller à l'état 1
    "identifier"  décalage et aller à l'état 2
    "integer"     décalage et aller à l'état 3
    "break"       décalage et aller à l'état 4
    "for"         décalage et aller à l'état 5
    "if"          décalage et aller à l'état 7
    "let"         décalage et aller à l'état 8
    "("           décalage et aller à l'état 9
    "-"           décalage et aller à l'état 10
    "nil"         décalage et aller à l'état 11
    "while"       décalage et aller à l'état 15
    "_namety"     décalage et aller à l'état 16

    exp     aller à l'état 39
    lvalue  aller à l'état 19
    typeid  aller à l'état 27


État 16

   71 typeid: "_namety" • "(" "integer" ")"

    "("  décalage et aller à l'état 40


État 17

    0 $accept: program • "end of file"

    "end of file"  décalage et aller à l'état 41


État 18

    1 program: exp •  ["end of file"]
   18 exp: exp • "+" exp
   19    | exp • "<=" exp
   20    | exp • ">=" exp
   21    | exp • "<>" exp
   22    | exp • "-" exp
   23    | exp • "*" exp
   24    | exp • "/" exp
   25    | exp • "=" exp
   26    | exp • "<" exp
   27    | exp • ">" exp
   28    | exp • "&" exp
   29    | exp • "|" exp

    "&"   décalage et aller à l'état 42
    "/"   décalage et aller à l'état 43
    "="   décalage et aller à l'état 44
    ">="  décalage et aller à l'état 45
    ">"   décalage et aller à l'état 46
    "<="  décalage et aller à l'état 47
    "<"   décalage et aller à l'état 48
    "-"   décalage et aller à l'état 49
    "<>"  décalage et aller à l'état 50
    "|"   décalage et aller à l'état 51
    "+"   décalage et aller à l'état 52
    "*"   décalage et aller à l'état 53

    $défaut  réduction par utilisation de la règle 1 (program)


État 19

   13 exp: lvalue •  ["end of file", "&", ",", "/", "do", "else", "end", "=", "function", ">=", ">", "in", "<=", "<", "-", "<>", "|", "+", "primitive", "}", "]", ")", ";", "then", "*", "to", "type", "var"]
   31    | lvalue • ":=" exp
   43 lvalue: lvalue • "." "identifier"
   44       | lvalue • "[" exp "]"

    ":="  décalage et aller à l'état 54
    "."   décalage et aller à l'état 55
    "["   décalage et aller à l'état 56

    $défaut  réduction par utilisation de la règle 13 (exp)


État 20

    2 program: chunks •

    $défaut  réduction par utilisation de la règle 2 (program)


État 21

   45 chunks: ε •  ["end of file", "in"]
   46       | • tychunk chunks
   47       | • funchunk chunks
   48       | • varchunk chunks
   48       | varchunk • chunks
   49 varchunk: • vardec
   50         | • vardec tychunk
   51 funchunk: • fundec
   52         | • fundec tychunk
   53 vardec: • "var" "identifier" ":=" exp
   54       | • "var" "identifier" ":" typeid ":=" exp
   55 fundec: • "function" "identifier" "(" tyfields ")" "=" exp
   56       | • "function" "identifier" "(" tyfields ")" ":" typeid "=" exp
   57       | • "primitive" "identifier" "(" tyfields ")"
   58       | • "primitive" "identifier" "(" tyfields ")" ":" typeid
   59 tychunk: • tydec
   60        | • tydec tychunk
   61 tydec: • "type" "identifier" "=" ty

    "function"   décalage et aller à l'état 6
    "primitive"  décalage et aller à l'état 12
    "type"       décalage et aller à l'état 13
    "var"        décalage et aller à l'état 14

    $défaut  réduction par utilisation de la règle 45 (chunks)

    chunks    aller à l'état 57
    varchunk  aller à l'état 21
    funchunk  aller à l'état 22
    vardec    aller à l'état 23
    fundec    aller à l'état 24
    tychunk   aller à l'état 25
    tydec     aller à l'état 26


État 22

   45 chunks: ε •  ["end of file", "in"]
   46       | • tychunk chunks
   47       | • funchunk chunks
   47       | funchunk • chunks
   48       | • varchunk chunks
   49 varchunk: • vardec
   50         | • vardec tychunk
   51 funchunk: • fundec
   52         | • fundec tychunk
   53 vardec: • "var" "identifier" ":=" exp
   54       | • "var" "identifier" ":" typeid ":=" exp
   55 fundec: • "function" "identifier" "(" tyfields ")" "=" exp
   56       | • "function" "identifier" "(" tyfields ")" ":" typeid "=" exp
   57       | • "primitive" "identifier" "(" tyfields ")"
   58       | • "primitive" "identifier" "(" tyfields ")" ":" typeid
   59 tychunk: • tydec
   60        | • tydec tychunk
   61 tydec: • "type" "identifier" "=" ty

    "function"   décalage et aller à l'état 6
    "primitive"  décalage et aller à l'état 12
    "type"       décalage et aller à l'état 13
    "var"        décalage et aller à l'état 14

    $défaut  réduction par utilisation de la règle 45 (chunks)

    chunks    aller à l'état 58
    varchunk  aller à l'état 21
    funchunk  aller à l'état 22
    vardec    aller à l'état 23
    fundec    aller à l'état 24
    tychunk   aller à l'état 25
    tydec     aller à l'état 26


État 23

   49 varchunk: vardec •  ["end of file", "function", "in", "primitive", "var"]
   50         | vardec • tychunk
   59 tychunk: • tydec
   60        | • tydec tychunk
   61 tydec: • "type" "identifier" "=" ty

    "type"  décalage et aller à l'état 13

    $défaut  réduction par utilisation de la règle 49 (varchunk)

    tychunk  aller à l'état 59
    tydec    aller à l'état 26

    Conflit entre la règle 49 et le jeton "type" résolu par décalage ("_chunks" < "type").


État 24

   51 funchunk: fundec •  ["end of file", "function", "in", "primitive", "var"]
   52         | fundec • tychunk
   59 tychunk: • tydec
   60        | • tydec tychunk
   61 tydec: • "type" "identifier" "=" ty

    "type"  décalage et aller à l'état 13

    $défaut  réduction par utilisation de la règle 51 (funchunk)

    tychunk  aller à l'état 60
    tydec    aller à l'état 26

    Conflit entre la règle 51 et le jeton "type" résolu par décalage ("_chunks" < "type").


État 25

   45 chunks: ε •  ["end of file", "in"]
   46       | • tychunk chunks
   46       | tychunk • chunks
   47       | • funchunk chunks
   48       | • varchunk chunks
   49 varchunk: • vardec
   50         | • vardec tychunk
   51 funchunk: • fundec
   52         | • fundec tychunk
   53 vardec: • "var" "identifier" ":=" exp
   54       | • "var" "identifier" ":" typeid ":=" exp
   55 fundec: • "function" "identifier" "(" tyfields ")" "=" exp
   56       | • "function" "identifier" "(" tyfields ")" ":" typeid "=" exp
   57       | • "primitive" "identifier" "(" tyfields ")"
   58       | • "primitive" "identifier" "(" tyfields ")" ":" typeid
   59 tychunk: • tydec
   60        | • tydec tychunk
   61 tydec: • "type" "identifier" "=" ty

    "function"   décalage et aller à l'état 6
    "primitive"  décalage et aller à l'état 12
    "type"       décalage et aller à l'état 13
    "var"        décalage et aller à l'état 14

    $défaut  réduction par utilisation de la règle 45 (chunks)

    chunks    aller à l'état 61
    varchunk  aller à l'état 21
    funchunk  aller à l'état 22
    vardec    aller à l'état 23
    fundec    aller à l'état 24
    tychunk   aller à l'état 25
    tydec     aller à l'état 26


État 26

   59 tychunk: • tydec
   59        | tydec •  ["end of file", "function", "in", "primitive", "var"]
   60        | • tydec tychunk
   60        | tydec • tychunk
   61 tydec: • "type" "identifier" "=" ty

    "type"  décalage et aller à l'état 13

    $défaut  réduction par utilisation de la règle 59 (tychunk)

    tychunk  aller à l'état 62
    tydec    aller à l'état 26

    Conflit entre la règle 59 et le jeton "type" résolu par décalage ("_chunks" < "type").


État 27

    9 exp: typeid • "[" exp "]" "of" exp
   10    | typeid • "{" "}"
   11    | typeid • "{" "identifier" "=" exp "}"
   12    | typeid • "{" "identifier" "=" exp array_r "}"

    "{"  décalage et aller à l'état 63
    "["  décalage et aller à l'état 64


État 28

    6 exp: • "integer"
    7    | • "nil"
    8    | • "string"
    9    | • typeid "[" exp "]" "of" exp
   10    | • typeid "{" "}"
   11    | • typeid "{" "identifier" "=" exp "}"
   12    | • typeid "{" "identifier" "=" exp array_r "}"
   13    | • lvalue
   14    | • "identifier" "(" ")"
   14    | "identifier" "(" • ")"
   15    | • "identifier" "(" exp ")"
   15    | "identifier" "(" • exp ")"
   16    | • "identifier" "(" exp function_r ")"
   16    | "identifier" "(" • exp function_r ")"
   17    | • "-" exp
   18    | • exp "+" exp
   19    | • exp "<=" exp
   20    | • exp ">=" exp
   21    | • exp "<>" exp
   22    | • exp "-" exp
   23    | • exp "*" exp
   24    | • exp "/" exp
   25    | • exp "=" exp
   26    | • exp "<" exp
   27    | • exp ">" exp
   28    | • exp "&" exp
   29    | • exp "|" exp
   30    | • "(" exps ")"
   31    | • lvalue ":=" exp
   32    | • "if" exp "then" exp
   33    | • "if" exp "then" exp "else" exp
   34    | • "while" exp "do" exp
   35    | • "for" "identifier" ":=" exp "to" exp "do" exp
   36    | • "break"
   37    | • "let" chunks "in" exp "end"
   42 lvalue: • "identifier"
   43       | • lvalue "." "identifier"
   44       | • lvalue "[" exp "]"
   70 typeid: • "identifier"
   71       | • "_namety" "(" "integer" ")"

    "string"      décalage et aller à l'état 1
    "identifier"  décalage et aller à l'état 2
    "integer"     décalage et aller à l'état 3
    "break"       décalage et aller à l'état 4
    "for"         décalage et aller à l'état 5
    "if"          décalage et aller à l'état 7
    "let"         décalage et aller à l'état 8
    "("           décalage et aller à l'état 9
    "-"           décalage et aller à l'état 10
    "nil"         décalage et aller à l'état 11
    ")"           décalage et aller à l'état 65
    "while"       décalage et aller à l'état 15
    "_namety"     décalage et aller à l'état 16

    exp     aller à l'état 66
    lvalue  aller à l'état 19
    typeid  aller à l'état 27


État 29

   35 exp: "for" "identifier" • ":=" exp "to" exp "do" exp

    ":="  décalage et aller à l'état 67


État 30

   55 fundec: "function" "identifier" • "(" tyfields ")" "=" exp
   56       | "function" "identifier" • "(" tyfields ")" ":" typeid "=" exp

    "("  décalage et aller à l'état 68


État 31

   18 exp: exp • "+" exp
   19    | exp • "<=" exp
   20    | exp • ">=" exp
   21    | exp • "<>" exp
   22    | exp • "-" exp
   23    | exp • "*" exp
   24    | exp • "/" exp
   25    | exp • "=" exp
   26    | exp • "<" exp
   27    | exp • ">" exp
   28    | exp • "&" exp
   29    | exp • "|" exp
   32    | "if" exp • "then" exp
   33    | "if" exp • "then" exp "else" exp

    "&"     décalage et aller à l'état 42
    "/"     décalage et aller à l'état 43
    "="     décalage et aller à l'état 44
    ">="    décalage et aller à l'état 45
    ">"     décalage et aller à l'état 46
    "<="    décalage et aller à l'état 47
    "<"     décalage et aller à l'état 48
    "-"     décalage et aller à l'état 49
    "<>"    décalage et aller à l'état 50
    "|"     décalage et aller à l'état 51
    "+"     décalage et aller à l'état 52
    "then"  décalage et aller à l'état 69
    "*"     décalage et aller à l'état 53


État 32

   37 exp: "let" chunks • "in" exp "end"

    "in"  décalage et aller à l'état 70


État 33

   30 exp: "(" exps • ")"

    ")"  décalage et aller à l'état 71


État 34

    4 exps: exp •  [")"]
    5     | exp • ";" exps
   18 exp: exp • "+" exp
   19    | exp • "<=" exp
   20    | exp • ">=" exp
   21    | exp • "<>" exp
   22    | exp • "-" exp
   23    | exp • "*" exp
   24    | exp • "/" exp
   25    | exp • "=" exp
   26    | exp • "<" exp
   27    | exp • ">" exp
   28    | exp • "&" exp
   29    | exp • "|" exp

    "&"   décalage et aller à l'état 42
    "/"   décalage et aller à l'état 43
    "="   décalage et aller à l'état 44
    ">="  décalage et aller à l'état 45
    ">"   décalage et aller à l'état 46
    "<="  décalage et aller à l'état 47
    "<"   décalage et aller à l'état 48
    "-"   décalage et aller à l'état 49
    "<>"  décalage et aller à l'état 50
    "|"   décalage et aller à l'état 51
    "+"   décalage et aller à l'état 52
    ";"   décalage et aller à l'état 72
    "*"   décalage et aller à l'état 53

    $défaut  réduction par utilisation de la règle 4 (exps)


État 35

   17 exp: "-" exp •  ["end of file", "&", ",", "do", "else", "end", "=", "function", ">=", ">", "in", "<=", "<", "-", "<>", "|", "+", "primitive", "}", "]", ")", ";", "then", "to", "type", "var"]
   18    | exp • "+" exp
   19    | exp • "<=" exp
   20    | exp • ">=" exp
   21    | exp • "<>" exp
   22    | exp • "-" exp
   23    | exp • "*" exp
   24    | exp • "/" exp
   25    | exp • "=" exp
   26    | exp • "<" exp
   27    | exp • ">" exp
   28    | exp • "&" exp
   29    | exp • "|" exp

    "/"  décalage et aller à l'état 43
    "*"  décalage et aller à l'état 53

    $défaut  réduction par utilisation de la règle 17 (exp)

    Conflit entre la règle 17 et le jeton "&" résolu par réduction ("&" < "-").
    Conflit entre la règle 17 et le jeton "/" résolu par décalage ("-" < "/").
    Conflit entre la règle 17 et le jeton "=" résolu par réduction ("=" < "-").
    Conflit entre la règle 17 et le jeton ">=" résolu par réduction (">=" < "-").
    Conflit entre la règle 17 et le jeton ">" résolu par réduction (">" < "-").
    Conflit entre la règle 17 et le jeton "<=" résolu par réduction ("<=" < "-").
    Conflit entre la règle 17 et le jeton "<" résolu par réduction ("<" < "-").
    Conflit entre la règle 17 et le jeton "-" résolu par réduction (%left "-").
    Conflit entre la règle 17 et le jeton "<>" résolu par réduction ("<>" < "-").
    Conflit entre la règle 17 et le jeton "|" résolu par réduction ("|" < "-").
    Conflit entre la règle 17 et le jeton "+" résolu par réduction (%left "+").
    Conflit entre la règle 17 et le jeton "*" résolu par décalage ("-" < "*").


État 36

   57 fundec: "primitive" "identifier" • "(" tyfields ")"
   58       | "primitive" "identifier" • "(" tyfields ")" ":" typeid

    "("  décalage et aller à l'état 73


État 37

   61 tydec: "type" "identifier" • "=" ty

    "="  décalage et aller à l'état 74


État 38

   53 vardec: "var" "identifier" • ":=" exp
   54       | "var" "identifier" • ":" typeid ":=" exp

    ":="  décalage et aller à l'état 75
    ":"   décalage et aller à l'état 76


État 39

   18 exp: exp • "+" exp
   19    | exp • "<=" exp
   20    | exp • ">=" exp
   21    | exp • "<>" exp
   22    | exp • "-" exp
   23    | exp • "*" exp
   24    | exp • "/" exp
   25    | exp • "=" exp
   26    | exp • "<" exp
   27    | exp • ">" exp
   28    | exp • "&" exp
   29    | exp • "|" exp
   34    | "while" exp • "do" exp

    "&"   décalage et aller à l'état 42
    "/"   décalage et aller à l'état 43
    "do"  décalage et aller à l'état 77
    "="   décalage et aller à l'état 44
    ">="  décalage et aller à l'état 45
    ">"   décalage et aller à l'état 46
    "<="  décalage et aller à l'état 47
    "<"   décalage et aller à l'état 48
    "-"   décalage et aller à l'état 49
    "<>"  décalage et aller à l'état 50
    "|"   décalage et aller à l'état 51
    "+"   décalage et aller à l'état 52
    "*"   décalage et aller à l'état 53


État 40

   71 typeid: "_namety" "(" • "integer" ")"

    "integer"  décalage et aller à l'état 78


État 41

    0 $accept: program "end of file" •

    $défaut  accepter


État 42

    6 exp: • "integer"
    7    | • "nil"
    8    | • "string"
    9    | • typeid "[" exp "]" "of" exp
   10    | • typeid "{" "}"
   11    | • typeid "{" "identifier" "=" exp "}"
   12    | • typeid "{" "identifier" "=" exp array_r "}"
   13    | • lvalue
   14    | • "identifier" "(" ")"
   15    | • "identifier" "(" exp ")"
   16    | • "identifier" "(" exp function_r ")"
   17    | • "-" exp
   18    | • exp "+" exp
   19    | • exp "<=" exp
   20    | • exp ">=" exp
   21    | • exp "<>" exp
   22    | • exp "-" exp
   23    | • exp "*" exp
   24    | • exp "/" exp
   25    | • exp "=" exp
   26    | • exp "<" exp
   27    | • exp ">" exp
   28    | • exp "&" exp
   28    | exp "&" • exp
   29    | • exp "|" exp
   30    | • "(" exps ")"
   31    | • lvalue ":=" exp
   32    | • "if" exp "then" exp
   33    | • "if" exp "then" exp "else" exp
   34    | • "while" exp "do" exp
   35    | • "for" "identifier" ":=" exp "to" exp "do" exp
   36    | • "break"
   37    | • "let" chunks "in" exp "end"
   42 lvalue: • "identifier"
   43       | • lvalue "." "identifier"
   44       | • lvalue "[" exp "]"
   70 typeid: • "identifier"
   71       | • "_namety" "(" "integer" ")"

    "string"      décalage et aller à l'état 1
    "identifier"  décalage et aller à l'état 2
    "integer"     décalage et aller à l'état 3
    "break"       décalage et aller à l'état 4
    "for"         décalage et aller à l'état 5
    "if"          décalage et aller à l'état 7
    "let"         décalage et aller à l'état 8
    "("           décalage et aller à l'état 9
    "-"           décalage et aller à l'état 10
    "nil"         décalage et aller à l'état 11
    "while"       décalage et aller à l'état 15
    "_namety"     décalage et aller à l'état 16

    exp     aller à l'état 79
    lvalue  aller à l'état 19
    typeid  aller à l'état 27


État 43

    6 exp: • "integer"
    7    | • "nil"
    8    | • "string"
    9    | • typeid "[" exp "]" "of" exp
   10    | • typeid "{" "}"
   11    | • typeid "{" "identifier" "=" exp "}"
   12    | • typeid "{" "identifier" "=" exp array_r "}"
   13    | • lvalue
   14    | • "identifier" "(" ")"
   15    | • "identifier" "(" exp ")"
   16    | • "identifier" "(" exp function_r ")"
   17    | • "-" exp
   18    | • exp "+" exp
   19    | • exp "<=" exp
   20    | • exp ">=" exp
   21    | • exp "<>" exp
   22    | • exp "-" exp
   23    | • exp "*" exp
   24    | • exp "/" exp
   24    | exp "/" • exp
   25    | • exp "=" exp
   26    | • exp "<" exp
   27    | • exp ">" exp
   28    | • exp "&" exp
   29    | • exp "|" exp
   30    | • "(" exps ")"
   31    | • lvalue ":=" exp
   32    | • "if" exp "then" exp
   33    | • "if" exp "then" exp "else" exp
   34    | • "while" exp "do" exp
   35    | • "for" "identifier" ":=" exp "to" exp "do" exp
   36    | • "break"
   37    | • "let" chunks "in" exp "end"
   42 lvalue: • "identifier"
   43       | • lvalue "." "identifier"
   44       | • lvalue "[" exp "]"
   70 typeid: • "identifier"
   71       | • "_namety" "(" "integer" ")"

    "string"      décalage et aller à l'état 1
    "identifier"  décalage et aller à l'état 2
    "integer"     décalage et aller à l'état 3
    "break"       décalage et aller à l'état 4
    "for"         décalage et aller à l'état 5
    "if"          décalage et aller à l'état 7
    "let"         décalage et aller à l'état 8
    "("           décalage et aller à l'état 9
    "-"           décalage et aller à l'état 10
    "nil"         décalage et aller à l'état 11
    "while"       décalage et aller à l'état 15
    "_namety"     décalage et aller à l'état 16

    exp     aller à l'état 80
    lvalue  aller à l'état 19
    typeid  aller à l'état 27


État 44

    6 exp: • "integer"
    7    | • "nil"
    8    | • "string"
    9    | • typeid "[" exp "]" "of" exp
   10    | • typeid "{" "}"
   11    | • typeid "{" "identifier" "=" exp "}"
   12    | • typeid "{" "identifier" "=" exp array_r "}"
   13    | • lvalue
   14    | • "identifier" "(" ")"
   15    | • "identifier" "(" exp ")"
   16    | • "identifier" "(" exp function_r ")"
   17    | • "-" exp
   18    | • exp "+" exp
   19    | • exp "<=" exp
   20    | • exp ">=" exp
   21    | • exp "<>" exp
   22    | • exp "-" exp
   23    | • exp "*" exp
   24    | • exp "/" exp
   25    | • exp "=" exp
   25    | exp "=" • exp
   26    | • exp "<" exp
   27    | • exp ">" exp
   28    | • exp "&" exp
   29    | • exp "|" exp
   30    | • "(" exps ")"
   31    | • lvalue ":=" exp
   32    | • "if" exp "then" exp
   33    | • "if" exp "then" exp "else" exp
   34    | • "while" exp "do" exp
   35    | • "for" "identifier" ":=" exp "to" exp "do" exp
   36    | • "break"
   37    | • "let" chunks "in" exp "end"
   42 lvalue: • "identifier"
   43       | • lvalue "." "identifier"
   44       | • lvalue "[" exp "]"
   70 typeid: • "identifier"
   71       | • "_namety" "(" "integer" ")"

    "string"      décalage et aller à l'état 1
    "identifier"  décalage et aller à l'état 2
    "integer"     décalage et aller à l'état 3
    "break"       décalage et aller à l'état 4
    "for"         décalage et aller à l'état 5
    "if"          décalage et aller à l'état 7
    "let"         décalage et aller à l'état 8
    "("           décalage et aller à l'état 9
    "-"           décalage et aller à l'état 10
    "nil"         décalage et aller à l'état 11
    "while"       décalage et aller à l'état 15
    "_namety"     décalage et aller à l'état 16

    exp     aller à l'état 81
    lvalue  aller à l'état 19
    typeid  aller à l'état 27


État 45

    6 exp: • "integer"
    7    | • "nil"
    8    | • "string"
    9    | • typeid "[" exp "]" "of" exp
   10    | • typeid "{" "}"
   11    | • typeid "{" "identifier" "=" exp "}"
   12    | • typeid "{" "identifier" "=" exp array_r "}"
   13    | • lvalue
   14    | • "identifier" "(" ")"
   15    | • "identifier" "(" exp ")"
   16    | • "identifier" "(" exp function_r ")"
   17    | • "-" exp
   18    | • exp "+" exp
   19    | • exp "<=" exp
   20    | • exp ">=" exp
   20    | exp ">=" • exp
   21    | • exp "<>" exp
   22    | • exp "-" exp
   23    | • exp "*" exp
   24    | • exp "/" exp
   25    | • exp "=" exp
   26    | • exp "<" exp
   27    | • exp ">" exp
   28    | • exp "&" exp
   29    | • exp "|" exp
   30    | • "(" exps ")"
   31    | • lvalue ":=" exp
   32    | • "if" exp "then" exp
   33    | • "if" exp "then" exp "else" exp
   34    | • "while" exp "do" exp
   35    | • "for" "identifier" ":=" exp "to" exp "do" exp
   36    | • "break"
   37    | • "let" chunks "in" exp "end"
   42 lvalue: • "identifier"
   43       | • lvalue "." "identifier"
   44       | • lvalue "[" exp "]"
   70 typeid: • "identifier"
   71       | • "_namety" "(" "integer" ")"

    "string"      décalage et aller à l'état 1
    "identifier"  décalage et aller à l'état 2
    "integer"     décalage et aller à l'état 3
    "break"       décalage et aller à l'état 4
    "for"         décalage et aller à l'état 5
    "if"          décalage et aller à l'état 7
    "let"         décalage et aller à l'état 8
    "("           décalage et aller à l'état 9
    "-"           décalage et aller à l'état 10
    "nil"         décalage et aller à l'état 11
    "while"       décalage et aller à l'état 15
    "_namety"     décalage et aller à l'état 16

    exp     aller à l'état 82
    lvalue  aller à l'état 19
    typeid  aller à l'état 27


État 46

    6 exp: • "integer"
    7    | • "nil"
    8    | • "string"
    9    | • typeid "[" exp "]" "of" exp
   10    | • typeid "{" "}"
   11    | • typeid "{" "identifier" "=" exp "}"
   12    | • typeid "{" "identifier" "=" exp array_r "}"
   13    | • lvalue
   14    | • "identifier" "(" ")"
   15    | • "identifier" "(" exp ")"
   16    | • "identifier" "(" exp function_r ")"
   17    | • "-" exp
   18    | • exp "+" exp
   19    | • exp "<=" exp
   20    | • exp ">=" exp
   21    | • exp "<>" exp
   22    | • exp "-" exp
   23    | • exp "*" exp
   24    | • exp "/" exp
   25    | • exp "=" exp
   26    | • exp "<" exp
   27    | • exp ">" exp
   27    | exp ">" • exp
   28    | • exp "&" exp
   29    | • exp "|" exp
   30    | • "(" exps ")"
   31    | • lvalue ":=" exp
   32    | • "if" exp "then" exp
   33    | • "if" exp "then" exp "else" exp
   34    | • "while" exp "do" exp
   35    | • "for" "identifier" ":=" exp "to" exp "do" exp
   36    | • "break"
   37    | • "let" chunks "in" exp "end"
   42 lvalue: • "identifier"
   43       | • lvalue "." "identifier"
   44       | • lvalue "[" exp "]"
   70 typeid: • "identifier"
   71       | • "_namety" "(" "integer" ")"

    "string"      décalage et aller à l'état 1
    "identifier"  décalage et aller à l'état 2
    "integer"     décalage et aller à l'état 3
    "break"       décalage et aller à l'état 4
    "for"         décalage et aller à l'état 5
    "if"          décalage et aller à l'état 7
    "let"         décalage et aller à l'état 8
    "("           décalage et aller à l'état 9
    "-"           décalage et aller à l'état 10
    "nil"         décalage et aller à l'état 11
    "while"       décalage et aller à l'état 15
    "_namety"     décalage et aller à l'état 16

    exp     aller à l'état 83
    lvalue  aller à l'état 19
    typeid  aller à l'état 27


État 47

    6 exp: • "integer"
    7    | • "nil"
    8    | • "string"
    9    | • typeid "[" exp "]" "of" exp
   10    | • typeid "{" "}"
   11    | • typeid "{" "identifier" "=" exp "}"
   12    | • typeid "{" "identifier" "=" exp array_r "}"
   13    | • lvalue
   14    | • "identifier" "(" ")"
   15    | • "identifier" "(" exp ")"
   16    | • "identifier" "(" exp function_r ")"
   17    | • "-" exp
   18    | • exp "+" exp
   19    | • exp "<=" exp
   19    | exp "<=" • exp
   20    | • exp ">=" exp
   21    | • exp "<>" exp
   22    | • exp "-" exp
   23    | • exp "*" exp
   24    | • exp "/" exp
   25    | • exp "=" exp
   26    | • exp "<" exp
   27    | • exp ">" exp
   28    | • exp "&" exp
   29    | • exp "|" exp
   30    | • "(" exps ")"
   31    | • lvalue ":=" exp
   32    | • "if" exp "then" exp
   33    | • "if" exp "then" exp "else" exp
   34    | • "while" exp "do" exp
   35    | • "for" "identifier" ":=" exp "to" exp "do" exp
   36    | • "break"
   37    | • "let" chunks "in" exp "end"
   42 lvalue: • "identifier"
   43       | • lvalue "." "identifier"
   44       | • lvalue "[" exp "]"
   70 typeid: • "identifier"
   71       | • "_namety" "(" "integer" ")"

    "string"      décalage et aller à l'état 1
    "identifier"  décalage et aller à l'état 2
    "integer"     décalage et aller à l'état 3
    "break"       décalage et aller à l'état 4
    "for"         décalage et aller à l'état 5
    "if"          décalage et aller à l'état 7
    "let"         décalage et aller à l'état 8
    "("           décalage et aller à l'état 9
    "-"           décalage et aller à l'état 10
    "nil"         décalage et aller à l'état 11
    "while"       décalage et aller à l'état 15
    "_namety"     décalage et aller à l'état 16

    exp     aller à l'état 84
    lvalue  aller à l'état 19
    typeid  aller à l'état 27


État 48

    6 exp: • "integer"
    7    | • "nil"
    8    | • "string"
    9    | • typeid "[" exp "]" "of" exp
   10    | • typeid "{" "}"
   11    | • typeid "{" "identifier" "=" exp "}"
   12    | • typeid "{" "identifier" "=" exp array_r "}"
   13    | • lvalue
   14    | • "identifier" "(" ")"
   15    | • "identifier" "(" exp ")"
   16    | • "identifier" "(" exp function_r ")"
   17    | • "-" exp
   18    | • exp "+" exp
   19    | • exp "<=" exp
   20    | • exp ">=" exp
   21    | • exp "<>" exp
   22    | • exp "-" exp
   23    | • exp "*" exp
   24    | • exp "/" exp
   25    | • exp "=" exp
   26    | • exp "<" exp
   26    | exp "<" • exp
   27    | • exp ">" exp
   28    | • exp "&" exp
   29    | • exp "|" exp
   30    | • "(" exps ")"
   31    | • lvalue ":=" exp
   32    | • "if" exp "then" exp
   33    | • "if" exp "then" exp "else" exp
   34    | • "while" exp "do" exp
   35    | • "for" "identifier" ":=" exp "to" exp "do" exp
   36    | • "break"
   37    | • "let" chunks "in" exp "end"
   42 lvalue: • "identifier"
   43       | • lvalue "." "identifier"
   44       | • lvalue "[" exp "]"
   70 typeid: • "identifier"
   71       | • "_namety" "(" "integer" ")"

    "string"      décalage et aller à l'état 1
    "identifier"  décalage et aller à l'état 2
    "integer"     décalage et aller à l'état 3
    "break"       décalage et aller à l'état 4
    "for"         décalage et aller à l'état 5
    "if"          décalage et aller à l'état 7
    "let"         décalage et aller à l'état 8
    "("           décalage et aller à l'état 9
    "-"           décalage et aller à l'état 10
    "nil"         décalage et aller à l'état 11
    "while"       décalage et aller à l'état 15
    "_namety"     décalage et aller à l'état 16

    exp     aller à l'état 85
    lvalue  aller à l'état 19
    typeid  aller à l'état 27


État 49

    6 exp: • "integer"
    7    | • "nil"
    8    | • "string"
    9    | • typeid "[" exp "]" "of" exp
   10    | • typeid "{" "}"
   11    | • typeid "{" "identifier" "=" exp "}"
   12    | • typeid "{" "identifier" "=" exp array_r "}"
   13    | • lvalue
   14    | • "identifier" "(" ")"
   15    | • "identifier" "(" exp ")"
   16    | • "identifier" "(" exp function_r ")"
   17    | • "-" exp
   18    | • exp "+" exp
   19    | • exp "<=" exp
   20    | • exp ">=" exp
   21    | • exp "<>" exp
   22    | • exp "-" exp
   22    | exp "-" • exp
   23    | • exp "*" exp
   24    | • exp "/" exp
   25    | • exp "=" exp
   26    | • exp "<" exp
   27    | • exp ">" exp
   28    | • exp "&" exp
   29    | • exp "|" exp
   30    | • "(" exps ")"
   31    | • lvalue ":=" exp
   32    | • "if" exp "then" exp
   33    | • "if" exp "then" exp "else" exp
   34    | • "while" exp "do" exp
   35    | • "for" "identifier" ":=" exp "to" exp "do" exp
   36    | • "break"
   37    | • "let" chunks "in" exp "end"
   42 lvalue: • "identifier"
   43       | • lvalue "." "identifier"
   44       | • lvalue "[" exp "]"
   70 typeid: • "identifier"
   71       | • "_namety" "(" "integer" ")"

    "string"      décalage et aller à l'état 1
    "identifier"  décalage et aller à l'état 2
    "integer"     décalage et aller à l'état 3
    "break"       décalage et aller à l'état 4
    "for"         décalage et aller à l'état 5
    "if"          décalage et aller à l'état 7
    "let"         décalage et aller à l'état 8
    "("           décalage et aller à l'état 9
    "-"           décalage et aller à l'état 10
    "nil"         décalage et aller à l'état 11
    "while"       décalage et aller à l'état 15
    "_namety"     décalage et aller à l'état 16

    exp     aller à l'état 86
    lvalue  aller à l'état 19
    typeid  aller à l'état 27


État 50

    6 exp: • "integer"
    7    | • "nil"
    8    | • "string"
    9    | • typeid "[" exp "]" "of" exp
   10    | • typeid "{" "}"
   11    | • typeid "{" "identifier" "=" exp "}"
   12    | • typeid "{" "identifier" "=" exp array_r "}"
   13    | • lvalue
   14    | • "identifier" "(" ")"
   15    | • "identifier" "(" exp ")"
   16    | • "identifier" "(" exp function_r ")"
   17    | • "-" exp
   18    | • exp "+" exp
   19    | • exp "<=" exp
   20    | • exp ">=" exp
   21    | • exp "<>" exp
   21    | exp "<>" • exp
   22    | • exp "-" exp
   23    | • exp "*" exp
   24    | • exp "/" exp
   25    | • exp "=" exp
   26    | • exp "<" exp
   27    | • exp ">" exp
   28    | • exp "&" exp
   29    | • exp "|" exp
   30    | • "(" exps ")"
   31    | • lvalue ":=" exp
   32    | • "if" exp "then" exp
   33    | • "if" exp "then" exp "else" exp
   34    | • "while" exp "do" exp
   35    | • "for" "identifier" ":=" exp "to" exp "do" exp
   36    | • "break"
   37    | • "let" chunks "in" exp "end"
   42 lvalue: • "identifier"
   43       | • lvalue "." "identifier"
   44       | • lvalue "[" exp "]"
   70 typeid: • "identifier"
   71       | • "_namety" "(" "integer" ")"

    "string"      décalage et aller à l'état 1
    "identifier"  décalage et aller à l'état 2
    "integer"     décalage et aller à l'état 3
    "break"       décalage et aller à l'état 4
    "for"         décalage et aller à l'état 5
    "if"          décalage et aller à l'état 7
    "let"         décalage et aller à l'état 8
    "("           décalage et aller à l'état 9
    "-"           décalage et aller à l'état 10
    "nil"         décalage et aller à l'état 11
    "while"       décalage et aller à l'état 15
    "_namety"     décalage et aller à l'état 16

    exp     aller à l'état 87
    lvalue  aller à l'état 19
    typeid  aller à l'état 27


État 51

    6 exp: • "integer"
    7    | • "nil"
    8    | • "string"
    9    | • typeid "[" exp "]" "of" exp
   10    | • typeid "{" "}"
   11    | • typeid "{" "identifier" "=" exp "}"
   12    | • typeid "{" "identifier" "=" exp array_r "}"
   13    | • lvalue
   14    | • "identifier" "(" ")"
   15    | • "identifier" "(" exp ")"
   16    | • "identifier" "(" exp function_r ")"
   17    | • "-" exp
   18    | • exp "+" exp
   19    | • exp "<=" exp
   20    | • exp ">=" exp
   21    | • exp "<>" exp
   22    | • exp "-" exp
   23    | • exp "*" exp
   24    | • exp "/" exp
   25    | • exp "=" exp
   26    | • exp "<" exp
   27    | • exp ">" exp
   28    | • exp "&" exp
   29    | • exp "|" exp
   29    | exp "|" • exp
   30    | • "(" exps ")"
   31    | • lvalue ":=" exp
   32    | • "if" exp "then" exp
   33    | • "if" exp "then" exp "else" exp
   34    | • "while" exp "do" exp
   35    | • "for" "identifier" ":=" exp "to" exp "do" exp
   36    | • "break"
   37    | • "let" chunks "in" exp "end"
   42 lvalue: • "identifier"
   43       | • lvalue "." "identifier"
   44       | • lvalue "[" exp "]"
   70 typeid: • "identifier"
   71       | • "_namety" "(" "integer" ")"

    "string"      décalage et aller à l'état 1
    "identifier"  décalage et aller à l'état 2
    "integer"     décalage et aller à l'état 3
    "break"       décalage et aller à l'état 4
    "for"         décalage et aller à l'état 5
    "if"          décalage et aller à l'état 7
    "let"         décalage et aller à l'état 8
    "("           décalage et aller à l'état 9
    "-"           décalage et aller à l'état 10
    "nil"         décalage et aller à l'état 11
    "while"       décalage et aller à l'état 15
    "_namety"     décalage et aller à l'état 16

    exp     aller à l'état 88
    lvalue  aller à l'état 19
    typeid  aller à l'état 27


État 52

    6 exp: • "integer"
    7    | • "nil"
    8    | • "string"
    9    | • typeid "[" exp "]" "of" exp
   10    | • typeid "{" "}"
   11    | • typeid "{" "identifier" "=" exp "}"
   12    | • typeid "{" "identifier" "=" exp array_r "}"
   13    | • lvalue
   14    | • "identifier" "(" ")"
   15    | • "identifier" "(" exp ")"
   16    | • "identifier" "(" exp function_r ")"
   17    | • "-" exp
   18    | • exp "+" exp
   18    | exp "+" • exp
   19    | • exp "<=" exp
   20    | • exp ">=" exp
   21    | • exp "<>" exp
   22    | • exp "-" exp
   23    | • exp "*" exp
   24    | • exp "/" exp
   25    | • exp "=" exp
   26    | • exp "<" exp
   27    | • exp ">" exp
   28    | • exp "&" exp
   29    | • exp "|" exp
   30    | • "(" exps ")"
   31    | • lvalue ":=" exp
   32    | • "if" exp "then" exp
   33    | • "if" exp "then" exp "else" exp
   34    | • "while" exp "do" exp
   35    | • "for" "identifier" ":=" exp "to" exp "do" exp
   36    | • "break"
   37    | • "let" chunks "in" exp "end"
   42 lvalue: • "identifier"
   43       | • lvalue "." "identifier"
   44       | • lvalue "[" exp "]"
   70 typeid: • "identifier"
   71       | • "_namety" "(" "integer" ")"

    "string"      décalage et aller à l'état 1
    "identifier"  décalage et aller à l'état 2
    "integer"     décalage et aller à l'état 3
    "break"       décalage et aller à l'état 4
    "for"         décalage et aller à l'état 5
    "if"          décalage et aller à l'état 7
    "let"         décalage et aller à l'état 8
    "("           décalage et aller à l'état 9
    "-"           décalage et aller à l'état 10
    "nil"         décalage et aller à l'état 11
    "while"       décalage et aller à l'état 15
    "_namety"     décalage et aller à l'état 16

    exp     aller à l'état 89
    lvalue  aller à l'état 19
    typeid  aller à l'état 27


État 53

    6 exp: • "integer"
    7    | • "nil"
    8    | • "string"
    9    | • typeid "[" exp "]" "of" exp
   10    | • typeid "{" "}"
   11    | • typeid "{" "identifier" "=" exp "}"
   12    | • typeid "{" "identifier" "=" exp array_r "}"
   13    | • lvalue
   14    | • "identifier" "(" ")"
   15    | • "identifier" "(" exp ")"
   16    | • "identifier" "(" exp function_r ")"
   17    | • "-" exp
   18    | • exp "+" exp
   19    | • exp "<=" exp
   20    | • exp ">=" exp
   21    | • exp "<>" exp
   22    | • exp "-" exp
   23    | • exp "*" exp
   23    | exp "*" • exp
   24    | • exp "/" exp
   25    | • exp "=" exp
   26    | • exp "<" exp
   27    | • exp ">" exp
   28    | • exp "&" exp
   29    | • exp "|" exp
   30    | • "(" exps ")"
   31    | • lvalue ":=" exp
   32    | • "if" exp "then" exp
   33    | • "if" exp "then" exp "else" exp
   34    | • "while" exp "do" exp
   35    | • "for" "identifier" ":=" exp "to" exp "do" exp
   36    | • "break"
   37    | • "let" chunks "in" exp "end"
   42 lvalue: • "identifier"
   43       | • lvalue "." "identifier"
   44       | • lvalue "[" exp "]"
   70 typeid: • "identifier"
   71       | • "_namety" "(" "integer" ")"

    "string"      décalage et aller à l'état 1
    "identifier"  décalage et aller à l'état 2
    "integer"     décalage et aller à l'état 3
    "break"       décalage et aller à l'état 4
    "for"         décalage et aller à l'état 5
    "if"          décalage et aller à l'état 7
    "let"         décalage et aller à l'état 8
    "("           décalage et aller à l'état 9
    "-"           décalage et aller à l'état 10
    "nil"         décalage et aller à l'état 11
    "while"       décalage et aller à l'état 15
    "_namety"     décalage et aller à l'état 16

    exp     aller à l'état 90
    lvalue  aller à l'état 19
    typeid  aller à l'état 27


État 54

    6 exp: • "integer"
    7    | • "nil"
    8    | • "string"
    9    | • typeid "[" exp "]" "of" exp
   10    | • typeid "{" "}"
   11    | • typeid "{" "identifier" "=" exp "}"
   12    | • typeid "{" "identifier" "=" exp array_r "}"
   13    | • lvalue
   14    | • "identifier" "(" ")"
   15    | • "identifier" "(" exp ")"
   16    | • "identifier" "(" exp function_r ")"
   17    | • "-" exp
   18    | • exp "+" exp
   19    | • exp "<=" exp
   20    | • exp ">=" exp
   21    | • exp "<>" exp
   22    | • exp "-" exp
   23    | • exp "*" exp
   24    | • exp "/" exp
   25    | • exp "=" exp
   26    | • exp "<" exp
   27    | • exp ">" exp
   28    | • exp "&" exp
   29    | • exp "|" exp
   30    | • "(" exps ")"
   31    | • lvalue ":=" exp
   31    | lvalue ":=" • exp
   32    | • "if" exp "then" exp
   33    | • "if" exp "then" exp "else" exp
   34    | • "while" exp "do" exp
   35    | • "for" "identifier" ":=" exp "to" exp "do" exp
   36    | • "break"
   37    | • "let" chunks "in" exp "end"
   42 lvalue: • "identifier"
   43       | • lvalue "." "identifier"
   44       | • lvalue "[" exp "]"
   70 typeid: • "identifier"
   71       | • "_namety" "(" "integer" ")"

    "string"      décalage et aller à l'état 1
    "identifier"  décalage et aller à l'état 2
    "integer"     décalage et aller à l'état 3
    "break"       décalage et aller à l'état 4
    "for"         décalage et aller à l'état 5
    "if"          décalage et aller à l'état 7
    "let"         décalage et aller à l'état 8
    "("           décalage et aller à l'état 9
    "-"           décalage et aller à l'état 10
    "nil"         décalage et aller à l'état 11
    "while"       décalage et aller à l'état 15
    "_namety"     décalage et aller à l'état 16

    exp     aller à l'état 91
    lvalue  aller à l'état 19
    typeid  aller à l'état 27


État 55

   43 lvalue: lvalue "." • "identifier"

    "identifier"  décalage et aller à l'état 92


État 56

    6 exp: • "integer"
    7    | • "nil"
    8    | • "string"
    9    | • typeid "[" exp "]" "of" exp
   10    | • typeid "{" "}"
   11    | • typeid "{" "identifier" "=" exp "}"
   12    | • typeid "{" "identifier" "=" exp array_r "}"
   13    | • lvalue
   14    | • "identifier" "(" ")"
   15    | • "identifier" "(" exp ")"
   16    | • "identifier" "(" exp function_r ")"
   17    | • "-" exp
   18    | • exp "+" exp
   19    | • exp "<=" exp
   20    | • exp ">=" exp
   21    | • exp "<>" exp
   22    | • exp "-" exp
   23    | • exp "*" exp
   24    | • exp "/" exp
   25    | • exp "=" exp
   26    | • exp "<" exp
   27    | • exp ">" exp
   28    | • exp "&" exp
   29    | • exp "|" exp
   30    | • "(" exps ")"
   31    | • lvalue ":=" exp
   32    | • "if" exp "then" exp
   33    | • "if" exp "then" exp "else" exp
   34    | • "while" exp "do" exp
   35    | • "for" "identifier" ":=" exp "to" exp "do" exp
   36    | • "break"
   37    | • "let" chunks "in" exp "end"
   42 lvalue: • "identifier"
   43       | • lvalue "." "identifier"
   44       | • lvalue "[" exp "]"
   44       | lvalue "[" • exp "]"
   70 typeid: • "identifier"
   71       | • "_namety" "(" "integer" ")"

    "string"      décalage et aller à l'état 1
    "identifier"  décalage et aller à l'état 2
    "integer"     décalage et aller à l'état 3
    "break"       décalage et aller à l'état 4
    "for"         décalage et aller à l'état 5
    "if"          décalage et aller à l'état 7
    "let"         décalage et aller à l'état 8
    "("           décalage et aller à l'état 9
    "-"           décalage et aller à l'état 10
    "nil"         décalage et aller à l'état 11
    "while"       décalage et aller à l'état 15
    "_namety"     décalage et aller à l'état 16

    exp     aller à l'état 93
    lvalue  aller à l'état 19
    typeid  aller à l'état 27


État 57

   48 chunks: varchunk chunks •

    $défaut  réduction par utilisation de la règle 48 (chunks)


État 58

   47 chunks: funchunk chunks •

    $défaut  réduction par utilisation de la règle 47 (chunks)


État 59

   50 varchunk: vardec tychunk •

    $défaut  réduction par utilisation de la règle 50 (varchunk)


État 60

   52 funchunk: fundec tychunk •

    $défaut  réduction par utilisation de la règle 52 (funchunk)


État 61

   46 chunks: tychunk chunks •

    $défaut  réduction par utilisation de la règle 46 (chunks)


État 62

   60 tychunk: tydec tychunk •

    $défaut  réduction par utilisation de la règle 60 (tychunk)


État 63

   10 exp: typeid "{" • "}"
   11    | typeid "{" • "identifier" "=" exp "}"
   12    | typeid "{" • "identifier" "=" exp array_r "}"

    "identifier"  décalage et aller à l'état 94
    "}"           décalage et aller à l'état 95


État 64

    6 exp: • "integer"
    7    | • "nil"
    8    | • "string"
    9    | • typeid "[" exp "]" "of" exp
    9    | typeid "[" • exp "]" "of" exp
   10    | • typeid "{" "}"
   11    | • typeid "{" "identifier" "=" exp "}"
   12    | • typeid "{" "identifier" "=" exp array_r "}"
   13    | • lvalue
   14    | • "identifier" "(" ")"
   15    | • "identifier" "(" exp ")"
   16    | • "identifier" "(" exp function_r ")"
   17    | • "-" exp
   18    | • exp "+" exp
   19    | • exp "<=" exp
   20    | • exp ">=" exp
   21    | • exp "<>" exp
   22    | • exp "-" exp
   23    | • exp "*" exp
   24    | • exp "/" exp
   25    | • exp "=" exp
   26    | • exp "<" exp
   27    | • exp ">" exp
   28    | • exp "&" exp
   29    | • exp "|" exp
   30    | • "(" exps ")"
   31    | • lvalue ":=" exp
   32    | • "if" exp "then" exp
   33    | • "if" exp "then" exp "else" exp
   34    | • "while" exp "do" exp
   35    | • "for" "identifier" ":=" exp "to" exp "do" exp
   36    | • "break"
   37    | • "let" chunks "in" exp "end"
   42 lvalue: • "identifier"
   43       | • lvalue "." "identifier"
   44       | • lvalue "[" exp "]"
   70 typeid: • "identifier"
   71       | • "_namety" "(" "integer" ")"

    "string"      décalage et aller à l'état 1
    "identifier"  décalage et aller à l'état 2
    "integer"     décalage et aller à l'état 3
    "break"       décalage et aller à l'état 4
    "for"         décalage et aller à l'état 5
    "if"          décalage et aller à l'état 7
    "let"         décalage et aller à l'état 8
    "("           décalage et aller à l'état 9
    "-"           décalage et aller à l'état 10
    "nil"         décalage et aller à l'état 11
    "while"       décalage et aller à l'état 15
    "_namety"     décalage et aller à l'état 16

    exp     aller à l'état 96
    lvalue  aller à l'état 19
    typeid  aller à l'état 27


État 65

   14 exp: "identifier" "(" ")" •

    $défaut  réduction par utilisation de la règle 14 (exp)


État 66

   15 exp: "identifier" "(" exp • ")"
   16    | "identifier" "(" exp • function_r ")"
   18    | exp • "+" exp
   19    | exp • "<=" exp
   20    | exp • ">=" exp
   21    | exp • "<>" exp
   22    | exp • "-" exp
   23    | exp • "*" exp
   24    | exp • "/" exp
   25    | exp • "=" exp
   26    | exp • "<" exp
   27    | exp • ">" exp
   28    | exp • "&" exp
   29    | exp • "|" exp
   40 function_r: • "," exp
   41           | • "," exp function_r

    "&"   décalage et aller à l'état 42
    ","   décalage et aller à l'état 97
    "/"   décalage et aller à l'état 43
    "="   décalage et aller à l'état 44
    ">="  décalage et aller à l'état 45
    ">"   décalage et aller à l'état 46
    "<="  décalage et aller à l'état 47
    "<"   décalage et aller à l'état 48
    "-"   décalage et aller à l'état 49
    "<>"  décalage et aller à l'état 50
    "|"   décalage et aller à l'état 51
    "+"   décalage et aller à l'état 52
    ")"   décalage et aller à l'état 98
    "*"   décalage et aller à l'état 53

    function_r  aller à l'état 99


État 67

    6 exp: • "integer"
    7    | • "nil"
    8    | • "string"
    9    | • typeid "[" exp "]" "of" exp
   10    | • typeid "{" "}"
   11    | • typeid "{" "identifier" "=" exp "}"
   12    | • typeid "{" "identifier" "=" exp array_r "}"
   13    | • lvalue
   14    | • "identifier" "(" ")"
   15    | • "identifier" "(" exp ")"
   16    | • "identifier" "(" exp function_r ")"
   17    | • "-" exp
   18    | • exp "+" exp
   19    | • exp "<=" exp
   20    | • exp ">=" exp
   21    | • exp "<>" exp
   22    | • exp "-" exp
   23    | • exp "*" exp
   24    | • exp "/" exp
   25    | • exp "=" exp
   26    | • exp "<" exp
   27    | • exp ">" exp
   28    | • exp "&" exp
   29    | • exp "|" exp
   30    | • "(" exps ")"
   31    | • lvalue ":=" exp
   32    | • "if" exp "then" exp
   33    | • "if" exp "then" exp "else" exp
   34    | • "while" exp "do" exp
   35    | • "for" "identifier" ":=" exp "to" exp "do" exp
   35    | "for" "identifier" ":=" • exp "to" exp "do" exp
   36    | • "break"
   37    | • "let" chunks "in" exp "end"
   42 lvalue: • "identifier"
   43       | • lvalue "." "identifier"
   44       | • lvalue "[" exp "]"
   70 typeid: • "identifier"
   71       | • "_namety" "(" "integer" ")"

    "string"      décalage et aller à l'état 1
    "identifier"  décalage et aller à l'état 2
    "integer"     décalage et aller à l'état 3
    "break"       décalage et aller à l'état 4
    "for"         décalage et aller à l'état 5
    "if"          décalage et aller à l'état 7
    "let"         décalage et aller à l'état 8
    "("           décalage et aller à l'état 9
    "-"           décalage et aller à l'état 10
    "nil"         décalage et aller à l'état 11
    "while"       décalage et aller à l'état 15
    "_namety"     décalage et aller à l'état 16

    exp     aller à l'état 100
    lvalue  aller à l'état 19
    typeid  aller à l'état 27


État 68

   55 fundec: "function" "identifier" "(" • tyfields ")" "=" exp
   56       | "function" "identifier" "(" • tyfields ")" ":" typeid "=" exp
   65 tyfields: ε •  [")"]
   66         | • tyfields.1
   67 tyfields.1: • tyfields.1 "," tyfield
   68           | • tyfield
   69 tyfield: • "identifier" ":" typeid

    "identifier"  décalage et aller à l'état 101

    $défaut  réduction par utilisation de la règle 65 (tyfields)

    tyfields    aller à l'état 102
    tyfields.1  aller à l'état 103
    tyfield     aller à l'état 104


État 69

    6 exp: • "integer"
    7    | • "nil"
    8    | • "string"
    9    | • typeid "[" exp "]" "of" exp
   10    | • typeid "{" "}"
   11    | • typeid "{" "identifier" "=" exp "}"
   12    | • typeid "{" "identifier" "=" exp array_r "}"
   13    | • lvalue
   14    | • "identifier" "(" ")"
   15    | • "identifier" "(" exp ")"
   16    | • "identifier" "(" exp function_r ")"
   17    | • "-" exp
   18    | • exp "+" exp
   19    | • exp "<=" exp
   20    | • exp ">=" exp
   21    | • exp "<>" exp
   22    | • exp "-" exp
   23    | • exp "*" exp
   24    | • exp "/" exp
   25    | • exp "=" exp
   26    | • exp "<" exp
   27    | • exp ">" exp
   28    | • exp "&" exp
   29    | • exp "|" exp
   30    | • "(" exps ")"
   31    | • lvalue ":=" exp
   32    | • "if" exp "then" exp
   32    | "if" exp "then" • exp
   33    | • "if" exp "then" exp "else" exp
   33    | "if" exp "then" • exp "else" exp
   34    | • "while" exp "do" exp
   35    | • "for" "identifier" ":=" exp "to" exp "do" exp
   36    | • "break"
   37    | • "let" chunks "in" exp "end"
   42 lvalue: • "identifier"
   43       | • lvalue "." "identifier"
   44       | • lvalue "[" exp "]"
   70 typeid: • "identifier"
   71       | • "_namety" "(" "integer" ")"

    "string"      décalage et aller à l'état 1
    "identifier"  décalage et aller à l'état 2
    "integer"     décalage et aller à l'état 3
    "break"       décalage et aller à l'état 4
    "for"         décalage et aller à l'état 5
    "if"          décalage et aller à l'état 7
    "let"         décalage et aller à l'état 8
    "("           décalage et aller à l'état 9
    "-"           décalage et aller à l'état 10
    "nil"         décalage et aller à l'état 11
    "while"       décalage et aller à l'état 15
    "_namety"     décalage et aller à l'état 16

    exp     aller à l'état 105
    lvalue  aller à l'état 19
    typeid  aller à l'état 27


État 70

    6 exp: • "integer"
    7    | • "nil"
    8    | • "string"
    9    | • typeid "[" exp "]" "of" exp
   10    | • typeid "{" "}"
   11    | • typeid "{" "identifier" "=" exp "}"
   12    | • typeid "{" "identifier" "=" exp array_r "}"
   13    | • lvalue
   14    | • "identifier" "(" ")"
   15    | • "identifier" "(" exp ")"
   16    | • "identifier" "(" exp function_r ")"
   17    | • "-" exp
   18    | • exp "+" exp
   19    | • exp "<=" exp
   20    | • exp ">=" exp
   21    | • exp "<>" exp
   22    | • exp "-" exp
   23    | • exp "*" exp
   24    | • exp "/" exp
   25    | • exp "=" exp
   26    | • exp "<" exp
   27    | • exp ">" exp
   28    | • exp "&" exp
   29    | • exp "|" exp
   30    | • "(" exps ")"
   31    | • lvalue ":=" exp
   32    | • "if" exp "then" exp
   33    | • "if" exp "then" exp "else" exp
   34    | • "while" exp "do" exp
   35    | • "for" "identifier" ":=" exp "to" exp "do" exp
   36    | • "break"
   37    | • "let" chunks "in" exp "end"
   37    | "let" chunks "in" • exp "end"
   42 lvalue: • "identifier"
   43       | • lvalue "." "identifier"
   44       | • lvalue "[" exp "]"
   70 typeid: • "identifier"
   71       | • "_namety" "(" "integer" ")"

    "string"      décalage et aller à l'état 1
    "identifier"  décalage et aller à l'état 2
    "integer"     décalage et aller à l'état 3
    "break"       décalage et aller à l'état 4
    "for"         décalage et aller à l'état 5
    "if"          décalage et aller à l'état 7
    "let"         décalage et aller à l'état 8
    "("           décalage et aller à l'état 9
    "-"           décalage et aller à l'état 10
    "nil"         décalage et aller à l'état 11
    "while"       décalage et aller à l'état 15
    "_namety"     décalage et aller à l'état 16

    exp     aller à l'état 106
    lvalue  aller à l'état 19
    typeid  aller à l'état 27


État 71

   30 exp: "(" exps ")" •

    $défaut  réduction par utilisation de la règle 30 (exp)


État 72

    3 exps: ε •  [")"]
    4     | • exp
    5     | • exp ";" exps
    5     | exp ";" • exps
    6 exp: • "integer"
    7    | • "nil"
    8    | • "string"
    9    | • typeid "[" exp "]" "of" exp
   10    | • typeid "{" "}"
   11    | • typeid "{" "identifier" "=" exp "}"
   12    | • typeid "{" "identifier" "=" exp array_r "}"
   13    | • lvalue
   14    | • "identifier" "(" ")"
   15    | • "identifier" "(" exp ")"
   16    | • "identifier" "(" exp function_r ")"
   17    | • "-" exp
   18    | • exp "+" exp
   19    | • exp "<=" exp
   20    | • exp ">=" exp
   21    | • exp "<>" exp
   22    | • exp "-" exp
   23    | • exp "*" exp
   24    | • exp "/" exp
   25    | • exp "=" exp
   26    | • exp "<" exp
   27    | • exp ">" exp
   28    | • exp "&" exp
   29    | • exp "|" exp
   30    | • "(" exps ")"
   31    | • lvalue ":=" exp
   32    | • "if" exp "then" exp
   33    | • "if" exp "then" exp "else" exp
   34    | • "while" exp "do" exp
   35    | • "for" "identifier" ":=" exp "to" exp "do" exp
   36    | • "break"
   37    | • "let" chunks "in" exp "end"
   42 lvalue: • "identifier"
   43       | • lvalue "." "identifier"
   44       | • lvalue "[" exp "]"
   70 typeid: • "identifier"
   71       | • "_namety" "(" "integer" ")"

    "string"      décalage et aller à l'état 1
    "identifier"  décalage et aller à l'état 2
    "integer"     décalage et aller à l'état 3
    "break"       décalage et aller à l'état 4
    "for"         décalage et aller à l'état 5
    "if"          décalage et aller à l'état 7
    "let"         décalage et aller à l'état 8
    "("           décalage et aller à l'état 9
    "-"           décalage et aller à l'état 10
    "nil"         décalage et aller à l'état 11
    "while"       décalage et aller à l'état 15
    "_namety"     décalage et aller à l'état 16

    $défaut  réduction par utilisation de la règle 3 (exps)

    exps    aller à l'état 107
    exp     aller à l'état 34
    lvalue  aller à l'état 19
    typeid  aller à l'état 27


État 73

   57 fundec: "primitive" "identifier" "(" • tyfields ")"
   58       | "primitive" "identifier" "(" • tyfields ")" ":" typeid
   65 tyfields: ε •  [")"]
   66         | • tyfields.1
   67 tyfields.1: • tyfields.1 "," tyfield
   68           | • tyfield
   69 tyfield: • "identifier" ":" typeid

    "identifier"  décalage et aller à l'état 101

    $défaut  réduction par utilisation de la règle 65 (tyfields)

    tyfields    aller à l'état 108
    tyfields.1  aller à l'état 103
    tyfield     aller à l'état 104


État 74

   61 tydec: "type" "identifier" "=" • ty
   62 ty: • typeid
   63   | • "{" tyfields "}"
   64   | • "array" "of" typeid
   70 typeid: • "identifier"
   71       | • "_namety" "(" "integer" ")"

    "identifier"  décalage et aller à l'état 109
    "array"       décalage et aller à l'état 110
    "{"           décalage et aller à l'état 111
    "_namety"     décalage et aller à l'état 16

    ty      aller à l'état 112
    typeid  aller à l'état 113


État 75

    6 exp: • "integer"
    7    | • "nil"
    8    | • "string"
    9    | • typeid "[" exp "]" "of" exp
   10    | • typeid "{" "}"
   11    | • typeid "{" "identifier" "=" exp "}"
   12    | • typeid "{" "identifier" "=" exp array_r "}"
   13    | • lvalue
   14    | • "identifier" "(" ")"
   15    | • "identifier" "(" exp ")"
   16    | • "identifier" "(" exp function_r ")"
   17    | • "-" exp
   18    | • exp "+" exp
   19    | • exp "<=" exp
   20    | • exp ">=" exp
   21    | • exp "<>" exp
   22    | • exp "-" exp
   23    | • exp "*" exp
   24    | • exp "/" exp
   25    | • exp "=" exp
   26    | • exp "<" exp
   27    | • exp ">" exp
   28    | • exp "&" exp
   29    | • exp "|" exp
   30    | • "(" exps ")"
   31    | • lvalue ":=" exp
   32    | • "if" exp "then" exp
   33    | • "if" exp "then" exp "else" exp
   34    | • "while" exp "do" exp
   35    | • "for" "identifier" ":=" exp "to" exp "do" exp
   36    | • "break"
   37    | • "let" chunks "in" exp "end"
   42 lvalue: • "identifier"
   43       | • lvalue "." "identifier"
   44       | • lvalue "[" exp "]"
   53 vardec: "var" "identifier" ":=" • exp
   70 typeid: • "identifier"
   71       | • "_namety" "(" "integer" ")"

    "string"      décalage et aller à l'état 1
    "identifier"  décalage et aller à l'état 2
    "integer"     décalage et aller à l'état 3
    "break"       décalage et aller à l'état 4
    "for"         décalage et aller à l'état 5
    "if"          décalage et aller à l'état 7
    "let"         décalage et aller à l'état 8
    "("           décalage et aller à l'état 9
    "-"           décalage et aller à l'état 10
    "nil"         décalage et aller à l'état 11
    "while"       décalage et aller à l'état 15
    "_namety"     décalage et aller à l'état 16

    exp     aller à l'état 114
    lvalue  aller à l'état 19
    typeid  aller à l'état 27


État 76

   54 vardec: "var" "identifier" ":" • typeid ":=" exp
   70 typeid: • "identifier"
   71       | • "_namety" "(" "integer" ")"

    "identifier"  décalage et aller à l'état 109
    "_namety"     décalage et aller à l'état 16

    typeid  aller à l'état 115


État 77

    6 exp: • "integer"
    7    | • "nil"
    8    | • "string"
    9    | • typeid "[" exp "]" "of" exp
   10    | • typeid "{" "}"
   11    | • typeid "{" "identifier" "=" exp "}"
   12    | • typeid "{" "identifier" "=" exp array_r "}"
   13    | • lvalue
   14    | • "identifier" "(" ")"
   15    | • "identifier" "(" exp ")"
   16    | • "identifier" "(" exp function_r ")"
   17    | • "-" exp
   18    | • exp "+" exp
   19    | • exp "<=" exp
   20    | • exp ">=" exp
   21    | • exp "<>" exp
   22    | • exp "-" exp
   23    | • exp "*" exp
   24    | • exp "/" exp
   25    | • exp "=" exp
   26    | • exp "<" exp
   27    | • exp ">" exp
   28    | • exp "&" exp
   29    | • exp "|" exp
   30    | • "(" exps ")"
   31    | • lvalue ":=" exp
   32    | • "if" exp "then" exp
   33    | • "if" exp "then" exp "else" exp
   34    | • "while" exp "do" exp
   34    | "while" exp "do" • exp
   35    | • "for" "identifier" ":=" exp "to" exp "do" exp
   36    | • "break"
   37    | • "let" chunks "in" exp "end"
   42 lvalue: • "identifier"
   43       | • lvalue "." "identifier"
   44       | • lvalue "[" exp "]"
   70 typeid: • "identifier"
   71       | • "_namety" "(" "integer" ")"

    "string"      décalage et aller à l'état 1
    "identifier"  décalage et aller à l'état 2
    "integer"     décalage et aller à l'état 3
    "break"       décalage et aller à l'état 4
    "for"         décalage et aller à l'état 5
    "if"          décalage et aller à l'état 7
    "let"         décalage et aller à l'état 8
    "("           décalage et aller à l'état 9
    "-"           décalage et aller à l'état 10
    "nil"         décalage et aller à l'état 11
    "while"       décalage et aller à l'état 15
    "_namety"     décalage et aller à l'état 16

    exp     aller à l'état 116
    lvalue  aller à l'état 19
    typeid  aller à l'état 27


État 78

   71 typeid: "_namety" "(" "integer" • ")"

    ")"  décalage et aller à l'état 117


État 79

   18 exp: exp • "+" exp
   19    | exp • "<=" exp
   20    | exp • ">=" exp
   21    | exp • "<>" exp
   22    | exp • "-" exp
   23    | exp • "*" exp
   24    | exp • "/" exp
   25    | exp • "=" exp
   26    | exp • "<" exp
   27    | exp • ">" exp
   28    | exp • "&" exp
   28    | exp "&" exp •  ["end of file", "&", ",", "do", "else", "end", "function", "in", "|", "primitive", "}", "]", ")", ";", "then", "to", "type", "var"]
   29    | exp • "|" exp

    "/"   décalage et aller à l'état 43
    "="   décalage et aller à l'état 44
    ">="  décalage et aller à l'état 45
    ">"   décalage et aller à l'état 46
    "<="  décalage et aller à l'état 47
    "<"   décalage et aller à l'état 48
    "-"   décalage et aller à l'état 49
    "<>"  décalage et aller à l'état 50
    "+"   décalage et aller à l'état 52
    "*"   décalage et aller à l'état 53

    $défaut  réduction par utilisation de la règle 28 (exp)

    Conflit entre la règle 28 et le jeton "&" résolu par réduction (%left "&").
    Conflit entre la règle 28 et le jeton "/" résolu par décalage ("&" < "/").
    Conflit entre la règle 28 et le jeton "=" résolu par décalage ("&" < "=").
    Conflit entre la règle 28 et le jeton ">=" résolu par décalage ("&" < ">=").
    Conflit entre la règle 28 et le jeton ">" résolu par décalage ("&" < ">").
    Conflit entre la règle 28 et le jeton "<=" résolu par décalage ("&" < "<=").
    Conflit entre la règle 28 et le jeton "<" résolu par décalage ("&" < "<").
    Conflit entre la règle 28 et le jeton "-" résolu par décalage ("&" < "-").
    Conflit entre la règle 28 et le jeton "<>" résolu par décalage ("&" < "<>").
    Conflit entre la règle 28 et le jeton "|" résolu par réduction ("|" < "&").
    Conflit entre la règle 28 et le jeton "+" résolu par décalage ("&" < "+").
    Conflit entre la règle 28 et le jeton "*" résolu par décalage ("&" < "*").


État 80

   18 exp: exp • "+" exp
   19    | exp • "<=" exp
   20    | exp • ">=" exp
   21    | exp • "<>" exp
   22    | exp • "-" exp
   23    | exp • "*" exp
   24    | exp • "/" exp
   24    | exp "/" exp •  ["end of file", "&", ",", "/", "do", "else", "end", "=", "function", ">=", ">", "in", "<=", "<", "-", "<>", "|", "+", "primitive", "}", "]", ")", ";", "then", "*", "to", "type", "var"]
   25    | exp • "=" exp
   26    | exp • "<" exp
   27    | exp • ">" exp
   28    | exp • "&" exp
   29    | exp • "|" exp

    $défaut  réduction par utilisation de la règle 24 (exp)

    Conflit entre la règle 24 et le jeton "&" résolu par réduction ("&" < "/").
    Conflit entre la règle 24 et le jeton "/" résolu par réduction (%left "/").
    Conflit entre la règle 24 et le jeton "=" résolu par réduction ("=" < "/").
    Conflit entre la règle 24 et le jeton ">=" résolu par réduction (">=" < "/").
    Conflit entre la règle 24 et le jeton ">" résolu par réduction (">" < "/").
    Conflit entre la règle 24 et le jeton "<=" résolu par réduction ("<=" < "/").
    Conflit entre la règle 24 et le jeton "<" résolu par réduction ("<" < "/").
    Conflit entre la règle 24 et le jeton "-" résolu par réduction ("-" < "/").
    Conflit entre la règle 24 et le jeton "<>" résolu par réduction ("<>" < "/").
    Conflit entre la règle 24 et le jeton "|" résolu par réduction ("|" < "/").
    Conflit entre la règle 24 et le jeton "+" résolu par réduction ("+" < "/").
    Conflit entre la règle 24 et le jeton "*" résolu par réduction (%left "*").


État 81

   18 exp: exp • "+" exp
   19    | exp • "<=" exp
   20    | exp • ">=" exp
   21    | exp • "<>" exp
   22    | exp • "-" exp
   23    | exp • "*" exp
   24    | exp • "/" exp
   25    | exp • "=" exp
   25    | exp "=" exp •  ["end of file", "&", ",", "do", "else", "end", "function", "in", "|", "primitive", "}", "]", ")", ";", "then", "to", "type", "var"]
   26    | exp • "<" exp
   27    | exp • ">" exp
   28    | exp • "&" exp
   29    | exp • "|" exp

    "/"  décalage et aller à l'état 43
    "-"  décalage et aller à l'état 49
    "+"  décalage et aller à l'état 52
    "*"  décalage et aller à l'état 53

    "="   erreur (non-associative)
    ">="  erreur (non-associative)
    ">"   erreur (non-associative)
    "<="  erreur (non-associative)
    "<"   erreur (non-associative)
    "<>"  erreur (non-associative)

    $défaut  réduction par utilisation de la règle 25 (exp)

    Conflit entre la règle 25 et le jeton "&" résolu par réduction ("&" < "=").
    Conflit entre la règle 25 et le jeton "/" résolu par décalage ("=" < "/").
    Conflit entre la règle 25 et le jeton "=" résolu comme étant une erreur (%nonassoc "=").
    Conflit entre la règle 25 et le jeton ">=" résolu comme étant une erreur (%nonassoc ">=").
    Conflit entre la règle 25 et le jeton ">" résolu comme étant une erreur (%nonassoc ">").
    Conflit entre la règle 25 et le jeton "<=" résolu comme étant une erreur (%nonassoc "<=").
    Conflit entre la règle 25 et le jeton "<" résolu comme étant une erreur (%nonassoc "<").
    Conflit entre la règle 25 et le jeton "-" résolu par décalage ("=" < "-").
    Conflit entre la règle 25 et le jeton "<>" résolu comme étant une erreur (%nonassoc "<>").
    Conflit entre la règle 25 et le jeton "|" résolu par réduction ("|" < "=").
    Conflit entre la règle 25 et le jeton "+" résolu par décalage ("=" < "+").
    Conflit entre la règle 25 et le jeton "*" résolu par décalage ("=" < "*").


État 82

   18 exp: exp • "+" exp
   19    | exp • "<=" exp
   20    | exp • ">=" exp
   20    | exp ">=" exp •  ["end of file", "&", ",", "do", "else", "end", "function", "in", "|", "primitive", "}", "]", ")", ";", "then", "to", "type", "var"]
   21    | exp • "<>" exp
   22    | exp • "-" exp
   23    | exp • "*" exp
   24    | exp • "/" exp
   25    | exp • "=" exp
   26    | exp • "<" exp
   27    | exp • ">" exp
   28    | exp • "&" exp
   29    | exp • "|" exp

    "/"  décalage et aller à l'état 43
    "-"  décalage et aller à l'état 49
    "+"  décalage et aller à l'état 52
    "*"  décalage et aller à l'état 53

    "="   erreur (non-associative)
    ">="  erreur (non-associative)
    ">"   erreur (non-associative)
    "<="  erreur (non-associative)
    "<"   erreur (non-associative)
    "<>"  erreur (non-associative)

    $défaut  réduction par utilisation de la règle 20 (exp)

    Conflit entre la règle 20 et le jeton "&" résolu par réduction ("&" < ">=").
    Conflit entre la règle 20 et le jeton "/" résolu par décalage (">=" < "/").
    Conflit entre la règle 20 et le jeton "=" résolu comme étant une erreur (%nonassoc "=").
    Conflit entre la règle 20 et le jeton ">=" résolu comme étant une erreur (%nonassoc ">=").
    Conflit entre la règle 20 et le jeton ">" résolu comme étant une erreur (%nonassoc ">").
    Conflit entre la règle 20 et le jeton "<=" résolu comme étant une erreur (%nonassoc "<=").
    Conflit entre la règle 20 et le jeton "<" résolu comme étant une erreur (%nonassoc "<").
    Conflit entre la règle 20 et le jeton "-" résolu par décalage (">=" < "-").
    Conflit entre la règle 20 et le jeton "<>" résolu comme étant une erreur (%nonassoc "<>").
    Conflit entre la règle 20 et le jeton "|" résolu par réduction ("|" < ">=").
    Conflit entre la règle 20 et le jeton "+" résolu par décalage (">=" < "+").
    Conflit entre la règle 20 et le jeton "*" résolu par décalage (">=" < "*").


État 83

   18 exp: exp • "+" exp
   19    | exp • "<=" exp
   20    | exp • ">=" exp
   21    | exp • "<>" exp
   22    | exp • "-" exp
   23    | exp • "*" exp
   24    | exp • "/" exp
   25    | exp • "=" exp
   26    | exp • "<" exp
   27    | exp • ">" exp
   27    | exp ">" exp •  ["end of file", "&", ",", "do", "else", "end", "function", "in", "|", "primitive", "}", "]", ")", ";", "then", "to", "type", "var"]
   28    | exp • "&" exp
   29    | exp • "|" exp

    "/"  décalage et aller à l'état 43
    "-"  décalage et aller à l'état 49
    "+"  décalage et aller à l'état 52
    "*"  décalage et aller à l'état 53

    "="   erreur (non-associative)
    ">="  erreur (non-associative)
    ">"   erreur (non-associative)
    "<="  erreur (non-associative)
    "<"   erreur (non-associative)
    "<>"  erreur (non-associative)

    $défaut  réduction par utilisation de la règle 27 (exp)

    Conflit entre la règle 27 et le jeton "&" résolu par réduction ("&" < ">").
    Conflit entre la règle 27 et le jeton "/" résolu par décalage (">" < "/").
    Conflit entre la règle 27 et le jeton "=" résolu comme étant une erreur (%nonassoc "=").
    Conflit entre la règle 27 et le jeton ">=" résolu comme étant une erreur (%nonassoc ">=").
    Conflit entre la règle 27 et le jeton ">" résolu comme étant une erreur (%nonassoc ">").
    Conflit entre la règle 27 et le jeton "<=" résolu comme étant une erreur (%nonassoc "<=").
    Conflit entre la règle 27 et le jeton "<" résolu comme étant une erreur (%nonassoc "<").
    Conflit entre la règle 27 et le jeton "-" résolu par décalage (">" < "-").
    Conflit entre la règle 27 et le jeton "<>" résolu comme étant une erreur (%nonassoc "<>").
    Conflit entre la règle 27 et le jeton "|" résolu par réduction ("|" < ">").
    Conflit entre la règle 27 et le jeton "+" résolu par décalage (">" < "+").
    Conflit entre la règle 27 et le jeton "*" résolu par décalage (">" < "*").


État 84

   18 exp: exp • "+" exp
   19    | exp • "<=" exp
   19    | exp "<=" exp •  ["end of file", "&", ",", "do", "else", "end", "function", "in", "|", "primitive", "}", "]", ")", ";", "then", "to", "type", "var"]
   20    | exp • ">=" exp
   21    | exp • "<>" exp
   22    | exp • "-" exp
   23    | exp • "*" exp
   24    | exp • "/" exp
   25    | exp • "=" exp
   26    | exp • "<" exp
   27    | exp • ">" exp
   28    | exp • "&" exp
   29    | exp • "|" exp

    "/"  décalage et aller à l'état 43
    "-"  décalage et aller à l'état 49
    "+"  décalage et aller à l'état 52
    "*"  décalage et aller à l'état 53

    "="   erreur (non-associative)
    ">="  erreur (non-associative)
    ">"   erreur (non-associative)
    "<="  erreur (non-associative)
    "<"   erreur (non-associative)
    "<>"  erreur (non-associative)

    $défaut  réduction par utilisation de la règle 19 (exp)

    Conflit entre la règle 19 et le jeton "&" résolu par réduction ("&" < "<=").
    Conflit entre la règle 19 et le jeton "/" résolu par décalage ("<=" < "/").
    Conflit entre la règle 19 et le jeton "=" résolu comme étant une erreur (%nonassoc "=").
    Conflit entre la règle 19 et le jeton ">=" résolu comme étant une erreur (%nonassoc ">=").
    Conflit entre la règle 19 et le jeton ">" résolu comme étant une erreur (%nonassoc ">").
    Conflit entre la règle 19 et le jeton "<=" résolu comme étant une erreur (%nonassoc "<=").
    Conflit entre la règle 19 et le jeton "<" résolu comme étant une erreur (%nonassoc "<").
    Conflit entre la règle 19 et le jeton "-" résolu par décalage ("<=" < "-").
    Conflit entre la règle 19 et le jeton "<>" résolu comme étant une erreur (%nonassoc "<>").
    Conflit entre la règle 19 et le jeton "|" résolu par réduction ("|" < "<=").
    Conflit entre la règle 19 et le jeton "+" résolu par décalage ("<=" < "+").
    Conflit entre la règle 19 et le jeton "*" résolu par décalage ("<=" < "*").


État 85

   18 exp: exp • "+" exp
   19    | exp • "<=" exp
   20    | exp • ">=" exp
   21    | exp • "<>" exp
   22    | exp • "-" exp
   23    | exp • "*" exp
   24    | exp • "/" exp
   25    | exp • "=" exp
   26    | exp • "<" exp
   26    | exp "<" exp •  ["end of file", "&", ",", "do", "else", "end", "function", "in", "|", "primitive", "}", "]", ")", ";", "then", "to", "type", "var"]
   27    | exp • ">" exp
   28    | exp • "&" exp
   29    | exp • "|" exp

    "/"  décalage et aller à l'état 43
    "-"  décalage et aller à l'état 49
    "+"  décalage et aller à l'état 52
    "*"  décalage et aller à l'état 53

    "="   erreur (non-associative)
    ">="  erreur (non-associative)
    ">"   erreur (non-associative)
    "<="  erreur (non-associative)
    "<"   erreur (non-associative)
    "<>"  erreur (non-associative)

    $défaut  réduction par utilisation de la règle 26 (exp)

    Conflit entre la règle 26 et le jeton "&" résolu par réduction ("&" < "<").
    Conflit entre la règle 26 et le jeton "/" résolu par décalage ("<" < "/").
    Conflit entre la règle 26 et le jeton "=" résolu comme étant une erreur (%nonassoc "=").
    Conflit entre la règle 26 et le jeton ">=" résolu comme étant une erreur (%nonassoc ">=").
    Conflit entre la règle 26 et le jeton ">" résolu comme étant une erreur (%nonassoc ">").
    Conflit entre la règle 26 et le jeton "<=" résolu comme étant une erreur (%nonassoc "<=").
    Conflit entre la règle 26 et le jeton "<" résolu comme étant une erreur (%nonassoc "<").
    Conflit entre la règle 26 et le jeton "-" résolu par décalage ("<" < "-").
    Conflit entre la règle 26 et le jeton "<>" résolu comme étant une erreur (%nonassoc "<>").
    Conflit entre la règle 26 et le jeton "|" résolu par réduction ("|" < "<").
    Conflit entre la règle 26 et le jeton "+" résolu par décalage ("<" < "+").
    Conflit entre la règle 26 et le jeton "*" résolu par décalage ("<" < "*").


État 86

   18 exp: exp • "+" exp
   19    | exp • "<=" exp
   20    | exp • ">=" exp
   21    | exp • "<>" exp
   22    | exp • "-" exp
   22    | exp "-" exp •  ["end of file", "&", ",", "do", "else", "end", "=", "function", ">=", ">", "in", "<=", "<", "-", "<>", "|", "+", "primitive", "}", "]", ")", ";", "then", "to", "type", "var"]
   23    | exp • "*" exp
   24    | exp • "/" exp
   25    | exp • "=" exp
   26    | exp • "<" exp
   27    | exp • ">" exp
   28    | exp • "&" exp
   29    | exp • "|" exp

    "/"  décalage et aller à l'état 43
    "*"  décalage et aller à l'état 53

    $défaut  réduction par utilisation de la règle 22 (exp)

    Conflit entre la règle 22 et le jeton "&" résolu par réduction ("&" < "-").
    Conflit entre la règle 22 et le jeton "/" résolu par décalage ("-" < "/").
    Conflit entre la règle 22 et le jeton "=" résolu par réduction ("=" < "-").
    Conflit entre la règle 22 et le jeton ">=" résolu par réduction (">=" < "-").
    Conflit entre la règle 22 et le jeton ">" résolu par réduction (">" < "-").
    Conflit entre la règle 22 et le jeton "<=" résolu par réduction ("<=" < "-").
    Conflit entre la règle 22 et le jeton "<" résolu par réduction ("<" < "-").
    Conflit entre la règle 22 et le jeton "-" résolu par réduction (%left "-").
    Conflit entre la règle 22 et le jeton "<>" résolu par réduction ("<>" < "-").
    Conflit entre la règle 22 et le jeton "|" résolu par réduction ("|" < "-").
    Conflit entre la règle 22 et le jeton "+" résolu par réduction (%left "+").
    Conflit entre la règle 22 et le jeton "*" résolu par décalage ("-" < "*").


État 87

   18 exp: exp • "+" exp
   19    | exp • "<=" exp
   20    | exp • ">=" exp
   21    | exp • "<>" exp
   21    | exp "<>" exp •  ["end of file", "&", ",", "do", "else", "end", "function", "in", "|", "primitive", "}", "]", ")", ";", "then", "to", "type", "var"]
   22    | exp • "-" exp
   23    | exp • "*" exp
   24    | exp • "/" exp
   25    | exp • "=" exp
   26    | exp • "<" exp
   27    | exp • ">" exp
   28    | exp • "&" exp
   29    | exp • "|" exp

    "/"  décalage et aller à l'état 43
    "-"  décalage et aller à l'état 49
    "+"  décalage et aller à l'état 52
    "*"  décalage et aller à l'état 53

    "="   erreur (non-associative)
    ">="  erreur (non-associative)
    ">"   erreur (non-associative)
    "<="  erreur (non-associative)
    "<"   erreur (non-associative)
    "<>"  erreur (non-associative)

    $défaut  réduction par utilisation de la règle 21 (exp)

    Conflit entre la règle 21 et le jeton "&" résolu par réduction ("&" < "<>").
    Conflit entre la règle 21 et le jeton "/" résolu par décalage ("<>" < "/").
    Conflit entre la règle 21 et le jeton "=" résolu comme étant une erreur (%nonassoc "=").
    Conflit entre la règle 21 et le jeton ">=" résolu comme étant une erreur (%nonassoc ">=").
    Conflit entre la règle 21 et le jeton ">" résolu comme étant une erreur (%nonassoc ">").
    Conflit entre la règle 21 et le jeton "<=" résolu comme étant une erreur (%nonassoc "<=").
    Conflit entre la règle 21 et le jeton "<" résolu comme étant une erreur (%nonassoc "<").
    Conflit entre la règle 21 et le jeton "-" résolu par décalage ("<>" < "-").
    Conflit entre la règle 21 et le jeton "<>" résolu comme étant une erreur (%nonassoc "<>").
    Conflit entre la règle 21 et le jeton "|" résolu par réduction ("|" < "<>").
    Conflit entre la règle 21 et le jeton "+" résolu par décalage ("<>" < "+").
    Conflit entre la règle 21 et le jeton "*" résolu par décalage ("<>" < "*").


État 88

   18 exp: exp • "+" exp
   19    | exp • "<=" exp
   20    | exp • ">=" exp
   21    | exp • "<>" exp
   22    | exp • "-" exp
   23    | exp • "*" exp
   24    | exp • "/" exp
   25    | exp • "=" exp
   26    | exp • "<" exp
   27    | exp • ">" exp
   28    | exp • "&" exp
   29    | exp • "|" exp
   29    | exp "|" exp •  ["end of file", ",", "do", "else", "end", "function", "in", "|", "primitive", "}", "]", ")", ";", "then", "to", "type", "var"]

    "&"   décalage et aller à l'état 42
    "/"   décalage et aller à l'état 43
    "="   décalage et aller à l'état 44
    ">="  décalage et aller à l'état 45
    ">"   décalage et aller à l'état 46
    "<="  décalage et aller à l'état 47
    "<"   décalage et aller à l'état 48
    "-"   décalage et aller à l'état 49
    "<>"  décalage et aller à l'état 50
    "+"   décalage et aller à l'état 52
    "*"   décalage et aller à l'état 53

    $défaut  réduction par utilisation de la règle 29 (exp)

    Conflit entre la règle 29 et le jeton "&" résolu par décalage ("|" < "&").
    Conflit entre la règle 29 et le jeton "/" résolu par décalage ("|" < "/").
    Conflit entre la règle 29 et le jeton "=" résolu par décalage ("|" < "=").
    Conflit entre la règle 29 et le jeton ">=" résolu par décalage ("|" < ">=").
    Conflit entre la règle 29 et le jeton ">" résolu par décalage ("|" < ">").
    Conflit entre la règle 29 et le jeton "<=" résolu par décalage ("|" < "<=").
    Conflit entre la règle 29 et le jeton "<" résolu par décalage ("|" < "<").
    Conflit entre la règle 29 et le jeton "-" résolu par décalage ("|" < "-").
    Conflit entre la règle 29 et le jeton "<>" résolu par décalage ("|" < "<>").
    Conflit entre la règle 29 et le jeton "|" résolu par réduction (%left "|").
    Conflit entre la règle 29 et le jeton "+" résolu par décalage ("|" < "+").
    Conflit entre la règle 29 et le jeton "*" résolu par décalage ("|" < "*").


État 89

   18 exp: exp • "+" exp
   18    | exp "+" exp •  ["end of file", "&", ",", "do", "else", "end", "=", "function", ">=", ">", "in", "<=", "<", "-", "<>", "|", "+", "primitive", "}", "]", ")", ";", "then", "to", "type", "var"]
   19    | exp • "<=" exp
   20    | exp • ">=" exp
   21    | exp • "<>" exp
   22    | exp • "-" exp
   23    | exp • "*" exp
   24    | exp • "/" exp
   25    | exp • "=" exp
   26    | exp • "<" exp
   27    | exp • ">" exp
   28    | exp • "&" exp
   29    | exp • "|" exp

    "/"  décalage et aller à l'état 43
    "*"  décalage et aller à l'état 53

    $défaut  réduction par utilisation de la règle 18 (exp)

    Conflit entre la règle 18 et le jeton "&" résolu par réduction ("&" < "+").
    Conflit entre la règle 18 et le jeton "/" résolu par décalage ("+" < "/").
    Conflit entre la règle 18 et le jeton "=" résolu par réduction ("=" < "+").
    Conflit entre la règle 18 et le jeton ">=" résolu par réduction (">=" < "+").
    Conflit entre la règle 18 et le jeton ">" résolu par réduction (">" < "+").
    Conflit entre la règle 18 et le jeton "<=" résolu par réduction ("<=" < "+").
    Conflit entre la règle 18 et le jeton "<" résolu par réduction ("<" < "+").
    Conflit entre la règle 18 et le jeton "-" résolu par réduction (%left "-").
    Conflit entre la règle 18 et le jeton "<>" résolu par réduction ("<>" < "+").
    Conflit entre la règle 18 et le jeton "|" résolu par réduction ("|" < "+").
    Conflit entre la règle 18 et le jeton "+" résolu par réduction (%left "+").
    Conflit entre la règle 18 et le jeton "*" résolu par décalage ("+" < "*").


État 90

   18 exp: exp • "+" exp
   19    | exp • "<=" exp
   20    | exp • ">=" exp
   21    | exp • "<>" exp
   22    | exp • "-" exp
   23    | exp • "*" exp
   23    | exp "*" exp •  ["end of file", "&", ",", "/", "do", "else", "end", "=", "function", ">=", ">", "in", "<=", "<", "-", "<>", "|", "+", "primitive", "}", "]", ")", ";", "then", "*", "to", "type", "var"]
   24    | exp • "/" exp
   25    | exp • "=" exp
   26    | exp • "<" exp
   27    | exp • ">" exp
   28    | exp • "&" exp
   29    | exp • "|" exp

    $défaut  réduction par utilisation de la règle 23 (exp)

    Conflit entre la règle 23 et le jeton "&" résolu par réduction ("&" < "*").
    Conflit entre la règle 23 et le jeton "/" résolu par réduction (%left "/").
    Conflit entre la règle 23 et le jeton "=" résolu par réduction ("=" < "*").
    Conflit entre la règle 23 et le jeton ">=" résolu par réduction (">=" < "*").
    Conflit entre la règle 23 et le jeton ">" résolu par réduction (">" < "*").
    Conflit entre la règle 23 et le jeton "<=" résolu par réduction ("<=" < "*").
    Conflit entre la règle 23 et le jeton "<" résolu par réduction ("<" < "*").
    Conflit entre la règle 23 et le jeton "-" résolu par réduction ("-" < "*").
    Conflit entre la règle 23 et le jeton "<>" résolu par réduction ("<>" < "*").
    Conflit entre la règle 23 et le jeton "|" résolu par réduction ("|" < "*").
    Conflit entre la règle 23 et le jeton "+" résolu par réduction ("+" < "*").
    Conflit entre la règle 23 et le jeton "*" résolu par réduction (%left "*").


État 91

   18 exp: exp • "+" exp
   19    | exp • "<=" exp
   20    | exp • ">=" exp
   21    | exp • "<>" exp
   22    | exp • "-" exp
   23    | exp • "*" exp
   24    | exp • "/" exp
   25    | exp • "=" exp
   26    | exp • "<" exp
   27    | exp • ">" exp
   28    | exp • "&" exp
   29    | exp • "|" exp
   31    | lvalue ":=" exp •  ["end of file", "&", ",", "do", "else", "end", "function", "in", "|", "primitive", "}", "]", ")", ";", "then", "to", "type", "var"]

    "/"  décalage et aller à l'état 43
    "-"  décalage et aller à l'état 49
    "+"  décalage et aller à l'état 52
    "*"  décalage et aller à l'état 53

    "="   erreur (non-associative)
    ">="  erreur (non-associative)
    ">"   erreur (non-associative)
    "<="  erreur (non-associative)
    "<"   erreur (non-associative)
    "<>"  erreur (non-associative)

    $défaut  réduction par utilisation de la règle 31 (exp)

    Conflit entre la règle 31 et le jeton "&" résolu par réduction ("&" < ":=").
    Conflit entre la règle 31 et le jeton "/" résolu par décalage (":=" < "/").
    Conflit entre la règle 31 et le jeton "=" résolu comme étant une erreur (%nonassoc "=").
    Conflit entre la règle 31 et le jeton ">=" résolu comme étant une erreur (%nonassoc ">=").
    Conflit entre la règle 31 et le jeton ">" résolu comme étant une erreur (%nonassoc ">").
    Conflit entre la règle 31 et le jeton "<=" résolu comme étant une erreur (%nonassoc "<=").
    Conflit entre la règle 31 et le jeton "<" résolu comme étant une erreur (%nonassoc "<").
    Conflit entre la règle 31 et le jeton "-" résolu par décalage (":=" < "-").
    Conflit entre la règle 31 et le jeton "<>" résolu comme étant une erreur (%nonassoc "<>").
    Conflit entre la règle 31 et le jeton "|" résolu par réduction ("|" < ":=").
    Conflit entre la règle 31 et le jeton "+" résolu par décalage (":=" < "+").
    Conflit entre la règle 31 et le jeton "*" résolu par décalage (":=" < "*").


État 92

   43 lvalue: lvalue "." "identifier" •

    $défaut  réduction par utilisation de la règle 43 (lvalue)


État 93

   18 exp: exp • "+" exp
   19    | exp • "<=" exp
   20    | exp • ">=" exp
   21    | exp • "<>" exp
   22    | exp • "-" exp
   23    | exp • "*" exp
   24    | exp • "/" exp
   25    | exp • "=" exp
   26    | exp • "<" exp
   27    | exp • ">" exp
   28    | exp • "&" exp
   29    | exp • "|" exp
   44 lvalue: lvalue "[" exp • "]"

    "&"   décalage et aller à l'état 42
    "/"   décalage et aller à l'état 43
    "="   décalage et aller à l'état 44
    ">="  décalage et aller à l'état 45
    ">"   décalage et aller à l'état 46
    "<="  décalage et aller à l'état 47
    "<"   décalage et aller à l'état 48
    "-"   décalage et aller à l'état 49
    "<>"  décalage et aller à l'état 50
    "|"   décalage et aller à l'état 51
    "+"   décalage et aller à l'état 52
    "]"   décalage et aller à l'état 118
    "*"   décalage et aller à l'état 53


État 94

   11 exp: typeid "{" "identifier" • "=" exp "}"
   12    | typeid "{" "identifier" • "=" exp array_r "}"

    "="  décalage et aller à l'état 119


État 95

   10 exp: typeid "{" "}" •

    $défaut  réduction par utilisation de la règle 10 (exp)


État 96

    9 exp: typeid "[" exp • "]" "of" exp
   18    | exp • "+" exp
   19    | exp • "<=" exp
   20    | exp • ">=" exp
   21    | exp • "<>" exp
   22    | exp • "-" exp
   23    | exp • "*" exp
   24    | exp • "/" exp
   25    | exp • "=" exp
   26    | exp • "<" exp
   27    | exp • ">" exp
   28    | exp • "&" exp
   29    | exp • "|" exp

    "&"   décalage et aller à l'état 42
    "/"   décalage et aller à l'état 43
    "="   décalage et aller à l'état 44
    ">="  décalage et aller à l'état 45
    ">"   décalage et aller à l'état 46
    "<="  décalage et aller à l'état 47
    "<"   décalage et aller à l'état 48
    "-"   décalage et aller à l'état 49
    "<>"  décalage et aller à l'état 50
    "|"   décalage et aller à l'état 51
    "+"   décalage et aller à l'état 52
    "]"   décalage et aller à l'état 120
    "*"   décalage et aller à l'état 53


État 97

    6 exp: • "integer"
    7    | • "nil"
    8    | • "string"
    9    | • typeid "[" exp "]" "of" exp
   10    | • typeid "{" "}"
   11    | • typeid "{" "identifier" "=" exp "}"
   12    | • typeid "{" "identifier" "=" exp array_r "}"
   13    | • lvalue
   14    | • "identifier" "(" ")"
   15    | • "identifier" "(" exp ")"
   16    | • "identifier" "(" exp function_r ")"
   17    | • "-" exp
   18    | • exp "+" exp
   19    | • exp "<=" exp
   20    | • exp ">=" exp
   21    | • exp "<>" exp
   22    | • exp "-" exp
   23    | • exp "*" exp
   24    | • exp "/" exp
   25    | • exp "=" exp
   26    | • exp "<" exp
   27    | • exp ">" exp
   28    | • exp "&" exp
   29    | • exp "|" exp
   30    | • "(" exps ")"
   31    | • lvalue ":=" exp
   32    | • "if" exp "then" exp
   33    | • "if" exp "then" exp "else" exp
   34    | • "while" exp "do" exp
   35    | • "for" "identifier" ":=" exp "to" exp "do" exp
   36    | • "break"
   37    | • "let" chunks "in" exp "end"
   40 function_r: "," • exp
   41           | "," • exp function_r
   42 lvalue: • "identifier"
   43       | • lvalue "." "identifier"
   44       | • lvalue "[" exp "]"
   70 typeid: • "identifier"
   71       | • "_namety" "(" "integer" ")"

    "string"      décalage et aller à l'état 1
    "identifier"  décalage et aller à l'état 2
    "integer"     décalage et aller à l'état 3
    "break"       décalage et aller à l'état 4
    "for"         décalage et aller à l'état 5
    "if"          décalage et aller à l'état 7
    "let"         décalage et aller à l'état 8
    "("           décalage et aller à l'état 9
    "-"           décalage et aller à l'état 10
    "nil"         décalage et aller à l'état 11
    "while"       décalage et aller à l'état 15
    "_namety"     décalage et aller à l'état 16

    exp     aller à l'état 121
    lvalue  aller à l'état 19
    typeid  aller à l'état 27


État 98

   15 exp: "identifier" "(" exp ")" •

    $défaut  réduction par utilisation de la règle 15 (exp)


État 99

   16 exp: "identifier" "(" exp function_r • ")"

    ")"  décalage et aller à l'état 122


État 100

   18 exp: exp • "+" exp
   19    | exp • "<=" exp
   20    | exp • ">=" exp
   21    | exp • "<>" exp
   22    | exp • "-" exp
   23    | exp • "*" exp
   24    | exp • "/" exp
   25    | exp • "=" exp
   26    | exp • "<" exp
   27    | exp • ">" exp
   28    | exp • "&" exp
   29    | exp • "|" exp
   35    | "for" "identifier" ":=" exp • "to" exp "do" exp

    "&"   décalage et aller à l'état 42
    "/"   décalage et aller à l'état 43
    "="   décalage et aller à l'état 44
    ">="  décalage et aller à l'état 45
    ">"   décalage et aller à l'état 46
    "<="  décalage et aller à l'état 47
    "<"   décalage et aller à l'état 48
    "-"   décalage et aller à l'état 49
    "<>"  décalage et aller à l'état 50
    "|"   décalage et aller à l'état 51
    "+"   décalage et aller à l'état 52
    "*"   décalage et aller à l'état 53
    "to"  décalage et aller à l'état 123


État 101

   69 tyfield: "identifier" • ":" typeid

    ":"  décalage et aller à l'état 124


État 102

   55 fundec: "function" "identifier" "(" tyfields • ")" "=" exp
   56       | "function" "identifier" "(" tyfields • ")" ":" typeid "=" exp

    ")"  décalage et aller à l'état 125


État 103

   66 tyfields: tyfields.1 •  ["}", ")"]
   67 tyfields.1: tyfields.1 • "," tyfield

    ","  décalage et aller à l'état 126

    $défaut  réduction par utilisation de la règle 66 (tyfields)


État 104

   68 tyfields.1: tyfield •

    $défaut  réduction par utilisation de la règle 68 (tyfields.1)


État 105

   18 exp: exp • "+" exp
   19    | exp • "<=" exp
   20    | exp • ">=" exp
   21    | exp • "<>" exp
   22    | exp • "-" exp
   23    | exp • "*" exp
   24    | exp • "/" exp
   25    | exp • "=" exp
   26    | exp • "<" exp
   27    | exp • ">" exp
   28    | exp • "&" exp
   29    | exp • "|" exp
   32    | "if" exp "then" exp •  ["end of file", ",", "do", "else", "end", "function", "in", "primitive", "}", "]", ")", ";", "then", "to", "type", "var"]
   33    | "if" exp "then" exp • "else" exp

    "&"     décalage et aller à l'état 42
    "/"     décalage et aller à l'état 43
    "else"  décalage et aller à l'état 127
    "="     décalage et aller à l'état 44
    ">="    décalage et aller à l'état 45
    ">"     décalage et aller à l'état 46
    "<="    décalage et aller à l'état 47
    "<"     décalage et aller à l'état 48
    "-"     décalage et aller à l'état 49
    "<>"    décalage et aller à l'état 50
    "|"     décalage et aller à l'état 51
    "+"     décalage et aller à l'état 52
    "*"     décalage et aller à l'état 53

    "else"   [réduction par utilisation de la règle 32 (exp)]
    $défaut  réduction par utilisation de la règle 32 (exp)

    Conflit entre la règle 32 et le jeton "&" résolu par décalage ("then" < "&").
    Conflit entre la règle 32 et le jeton "/" résolu par décalage ("then" < "/").
    Conflit entre la règle 32 et le jeton "=" résolu par décalage ("then" < "=").
    Conflit entre la règle 32 et le jeton ">=" résolu par décalage ("then" < ">=").
    Conflit entre la règle 32 et le jeton ">" résolu par décalage ("then" < ">").
    Conflit entre la règle 32 et le jeton "<=" résolu par décalage ("then" < "<=").
    Conflit entre la règle 32 et le jeton "<" résolu par décalage ("then" < "<").
    Conflit entre la règle 32 et le jeton "-" résolu par décalage ("then" < "-").
    Conflit entre la règle 32 et le jeton "<>" résolu par décalage ("then" < "<>").
    Conflit entre la règle 32 et le jeton "|" résolu par décalage ("then" < "|").
    Conflit entre la règle 32 et le jeton "+" résolu par décalage ("then" < "+").
    Conflit entre la règle 32 et le jeton "*" résolu par décalage ("then" < "*").

    conflit par décalage/réduction sur le jeton "else" :
       32 exp: "if" exp "then" exp •
       33 exp: "if" exp "then" exp • "else" exp
      Exemple: "if" exp "then" "if" exp "then" exp • "else" exp
      Dérivation par décalage
        exp
        ↳ 32: "if" exp "then" exp
                              ↳ 33: "if" exp "then" exp • "else" exp
      Dérivation par réduction
        exp
        ↳ 33: "if" exp "then" exp                         "else" exp
                              ↳ 32: "if" exp "then" exp •



État 106

   18 exp: exp • "+" exp
   19    | exp • "<=" exp
   20    | exp • ">=" exp
   21    | exp • "<>" exp
   22    | exp • "-" exp
   23    | exp • "*" exp
   24    | exp • "/" exp
   25    | exp • "=" exp
   26    | exp • "<" exp
   27    | exp • ">" exp
   28    | exp • "&" exp
   29    | exp • "|" exp
   37    | "let" chunks "in" exp • "end"

    "&"    décalage et aller à l'état 42
    "/"    décalage et aller à l'état 43
    "end"  décalage et aller à l'état 128
    "="    décalage et aller à l'état 44
    ">="   décalage et aller à l'état 45
    ">"    décalage et aller à l'état 46
    "<="   décalage et aller à l'état 47
    "<"    décalage et aller à l'état 48
    "-"    décalage et aller à l'état 49
    "<>"   décalage et aller à l'état 50
    "|"    décalage et aller à l'état 51
    "+"    décalage et aller à l'état 52
    "*"    décalage et aller à l'état 53


État 107

    5 exps: exp ";" exps •

    $défaut  réduction par utilisation de la règle 5 (exps)


État 108

   57 fundec: "primitive" "identifier" "(" tyfields • ")"
   58       | "primitive" "identifier" "(" tyfields • ")" ":" typeid

    ")"  décalage et aller à l'état 129


État 109

   70 typeid: "identifier" •

    $défaut  réduction par utilisation de la règle 70 (typeid)


État 110

   64 ty: "array" • "of" typeid

    "of"  décalage et aller à l'état 130


État 111

   63 ty: "{" • tyfields "}"
   65 tyfields: ε •  ["}"]
   66         | • tyfields.1
   67 tyfields.1: • tyfields.1 "," tyfield
   68           | • tyfield
   69 tyfield: • "identifier" ":" typeid

    "identifier"  décalage et aller à l'état 101

    $défaut  réduction par utilisation de la règle 65 (tyfields)

    tyfields    aller à l'état 131
    tyfields.1  aller à l'état 103
    tyfield     aller à l'état 104


État 112

   61 tydec: "type" "identifier" "=" ty •

    $défaut  réduction par utilisation de la règle 61 (tydec)


État 113

   62 ty: typeid •

    $défaut  réduction par utilisation de la règle 62 (ty)


État 114

   18 exp: exp • "+" exp
   19    | exp • "<=" exp
   20    | exp • ">=" exp
   21    | exp • "<>" exp
   22    | exp • "-" exp
   23    | exp • "*" exp
   24    | exp • "/" exp
   25    | exp • "=" exp
   26    | exp • "<" exp
   27    | exp • ">" exp
   28    | exp • "&" exp
   29    | exp • "|" exp
   53 vardec: "var" "identifier" ":=" exp •  ["end of file", "function", "in", "primitive", "type", "var"]

    "&"   décalage et aller à l'état 42
    "/"   décalage et aller à l'état 43
    "="   décalage et aller à l'état 44
    ">="  décalage et aller à l'état 45
    ">"   décalage et aller à l'état 46
    "<="  décalage et aller à l'état 47
    "<"   décalage et aller à l'état 48
    "-"   décalage et aller à l'état 49
    "<>"  décalage et aller à l'état 50
    "|"   décalage et aller à l'état 51
    "+"   décalage et aller à l'état 52
    "*"   décalage et aller à l'état 53

    $défaut  réduction par utilisation de la règle 53 (vardec)


État 115

   54 vardec: "var" "identifier" ":" typeid • ":=" exp

    ":="  décalage et aller à l'état 132


État 116

   18 exp: exp • "+" exp
   19    | exp • "<=" exp
   20    | exp • ">=" exp
   21    | exp • "<>" exp
   22    | exp • "-" exp
   23    | exp • "*" exp
   24    | exp • "/" exp
   25    | exp • "=" exp
   26    | exp • "<" exp
   27    | exp • ">" exp
   28    | exp • "&" exp
   29    | exp • "|" exp
   34    | "while" exp "do" exp •  ["end of file", ",", "do", "else", "end", "function", "in", "primitive", "}", "]", ")", ";", "then", "to", "type", "var"]

    "&"   décalage et aller à l'état 42
    "/"   décalage et aller à l'état 43
    "="   décalage et aller à l'état 44
    ">="  décalage et aller à l'état 45
    ">"   décalage et aller à l'état 46
    "<="  décalage et aller à l'état 47
    "<"   décalage et aller à l'état 48
    "-"   décalage et aller à l'état 49
    "<>"  décalage et aller à l'état 50
    "|"   décalage et aller à l'état 51
    "+"   décalage et aller à l'état 52
    "*"   décalage et aller à l'état 53

    $défaut  réduction par utilisation de la règle 34 (exp)

    Conflit entre la règle 34 et le jeton "&" résolu par décalage ("do" < "&").
    Conflit entre la règle 34 et le jeton "/" résolu par décalage ("do" < "/").
    Conflit entre la règle 34 et le jeton "=" résolu par décalage ("do" < "=").
    Conflit entre la règle 34 et le jeton ">=" résolu par décalage ("do" < ">=").
    Conflit entre la règle 34 et le jeton ">" résolu par décalage ("do" < ">").
    Conflit entre la règle 34 et le jeton "<=" résolu par décalage ("do" < "<=").
    Conflit entre la règle 34 et le jeton "<" résolu par décalage ("do" < "<").
    Conflit entre la règle 34 et le jeton "-" résolu par décalage ("do" < "-").
    Conflit entre la règle 34 et le jeton "<>" résolu par décalage ("do" < "<>").
    Conflit entre la règle 34 et le jeton "|" résolu par décalage ("do" < "|").
    Conflit entre la règle 34 et le jeton "+" résolu par décalage ("do" < "+").
    Conflit entre la règle 34 et le jeton "*" résolu par décalage ("do" < "*").


État 117

   71 typeid: "_namety" "(" "integer" ")" •

    $défaut  réduction par utilisation de la règle 71 (typeid)


État 118

   44 lvalue: lvalue "[" exp "]" •

    $défaut  réduction par utilisation de la règle 44 (lvalue)


État 119

    6 exp: • "integer"
    7    | • "nil"
    8    | • "string"
    9    | • typeid "[" exp "]" "of" exp
   10    | • typeid "{" "}"
   11    | • typeid "{" "identifier" "=" exp "}"
   11    | typeid "{" "identifier" "=" • exp "}"
   12    | • typeid "{" "identifier" "=" exp array_r "}"
   12    | typeid "{" "identifier" "=" • exp array_r "}"
   13    | • lvalue
   14    | • "identifier" "(" ")"
   15    | • "identifier" "(" exp ")"
   16    | • "identifier" "(" exp function_r ")"
   17    | • "-" exp
   18    | • exp "+" exp
   19    | • exp "<=" exp
   20    | • exp ">=" exp
   21    | • exp "<>" exp
   22    | • exp "-" exp
   23    | • exp "*" exp
   24    | • exp "/" exp
   25    | • exp "=" exp
   26    | • exp "<" exp
   27    | • exp ">" exp
   28    | • exp "&" exp
   29    | • exp "|" exp
   30    | • "(" exps ")"
   31    | • lvalue ":=" exp
   32    | • "if" exp "then" exp
   33    | • "if" exp "then" exp "else" exp
   34    | • "while" exp "do" exp
   35    | • "for" "identifier" ":=" exp "to" exp "do" exp
   36    | • "break"
   37    | • "let" chunks "in" exp "end"
   42 lvalue: • "identifier"
   43       | • lvalue "." "identifier"
   44       | • lvalue "[" exp "]"
   70 typeid: • "identifier"
   71       | • "_namety" "(" "integer" ")"

    "string"      décalage et aller à l'état 1
    "identifier"  décalage et aller à l'état 2
    "integer"     décalage et aller à l'état 3
    "break"       décalage et aller à l'état 4
    "for"         décalage et aller à l'état 5
    "if"          décalage et aller à l'état 7
    "let"         décalage et aller à l'état 8
    "("           décalage et aller à l'état 9
    "-"           décalage et aller à l'état 10
    "nil"         décalage et aller à l'état 11
    "while"       décalage et aller à l'état 15
    "_namety"     décalage et aller à l'état 16

    exp     aller à l'état 133
    lvalue  aller à l'état 19
    typeid  aller à l'état 27


État 120

    9 exp: typeid "[" exp "]" • "of" exp

    "of"  décalage et aller à l'état 134


État 121

   18 exp: exp • "+" exp
   19    | exp • "<=" exp
   20    | exp • ">=" exp
   21    | exp • "<>" exp
   22    | exp • "-" exp
   23    | exp • "*" exp
   24    | exp • "/" exp
   25    | exp • "=" exp
   26    | exp • "<" exp
   27    | exp • ">" exp
   28    | exp • "&" exp
   29    | exp • "|" exp
   40 function_r: • "," exp
   40           | "," exp •  [")"]
   41           | • "," exp function_r
   41           | "," exp • function_r

    "&"   décalage et aller à l'état 42
    ","   décalage et aller à l'état 97
    "/"   décalage et aller à l'état 43
    "="   décalage et aller à l'état 44
    ">="  décalage et aller à l'état 45
    ">"   décalage et aller à l'état 46
    "<="  décalage et aller à l'état 47
    "<"   décalage et aller à l'état 48
    "-"   décalage et aller à l'état 49
    "<>"  décalage et aller à l'état 50
    "|"   décalage et aller à l'état 51
    "+"   décalage et aller à l'état 52
    "*"   décalage et aller à l'état 53

    $défaut  réduction par utilisation de la règle 40 (function_r)

    function_r  aller à l'état 135


État 122

   16 exp: "identifier" "(" exp function_r ")" •

    $défaut  réduction par utilisation de la règle 16 (exp)


État 123

    6 exp: • "integer"
    7    | • "nil"
    8    | • "string"
    9    | • typeid "[" exp "]" "of" exp
   10    | • typeid "{" "}"
   11    | • typeid "{" "identifier" "=" exp "}"
   12    | • typeid "{" "identifier" "=" exp array_r "}"
   13    | • lvalue
   14    | • "identifier" "(" ")"
   15    | • "identifier" "(" exp ")"
   16    | • "identifier" "(" exp function_r ")"
   17    | • "-" exp
   18    | • exp "+" exp
   19    | • exp "<=" exp
   20    | • exp ">=" exp
   21    | • exp "<>" exp
   22    | • exp "-" exp
   23    | • exp "*" exp
   24    | • exp "/" exp
   25    | • exp "=" exp
   26    | • exp "<" exp
   27    | • exp ">" exp
   28    | • exp "&" exp
   29    | • exp "|" exp
   30    | • "(" exps ")"
   31    | • lvalue ":=" exp
   32    | • "if" exp "then" exp
   33    | • "if" exp "then" exp "else" exp
   34    | • "while" exp "do" exp
   35    | • "for" "identifier" ":=" exp "to" exp "do" exp
   35    | "for" "identifier" ":=" exp "to" • exp "do" exp
   36    | • "break"
   37    | • "let" chunks "in" exp "end"
   42 lvalue: • "identifier"
   43       | • lvalue "." "identifier"
   44       | • lvalue "[" exp "]"
   70 typeid: • "identifier"
   71       | • "_namety" "(" "integer" ")"

    "string"      décalage et aller à l'état 1
    "identifier"  décalage et aller à l'état 2
    "integer"     décalage et aller à l'état 3
    "break"       décalage et aller à l'état 4
    "for"         décalage et aller à l'état 5
    "if"          décalage et aller à l'état 7
    "let"         décalage et aller à l'état 8
    "("           décalage et aller à l'état 9
    "-"           décalage et aller à l'état 10
    "nil"         décalage et aller à l'état 11
    "while"       décalage et aller à l'état 15
    "_namety"     décalage et aller à l'état 16

    exp     aller à l'état 136
    lvalue  aller à l'état 19
    typeid  aller à l'état 27


État 124

   69 tyfield: "identifier" ":" • typeid
   70 typeid: • "identifier"
   71       | • "_namety" "(" "integer" ")"

    "identifier"  décalage et aller à l'état 109
    "_namety"     décalage et aller à l'état 16

    typeid  aller à l'état 137


État 125

   55 fundec: "function" "identifier" "(" tyfields ")" • "=" exp
   56       | "function" "identifier" "(" tyfields ")" • ":" typeid "=" exp

    ":"  décalage et aller à l'état 138
    "="  décalage et aller à l'état 139


État 126

   67 tyfields.1: tyfields.1 "," • tyfield
   69 tyfield: • "identifier" ":" typeid

    "identifier"  décalage et aller à l'état 101

    tyfield  aller à l'état 140


État 127

    6 exp: • "integer"
    7    | • "nil"
    8    | • "string"
    9    | • typeid "[" exp "]" "of" exp
   10    | • typeid "{" "}"
   11    | • typeid "{" "identifier" "=" exp "}"
   12    | • typeid "{" "identifier" "=" exp array_r "}"
   13    | • lvalue
   14    | • "identifier" "(" ")"
   15    | • "identifier" "(" exp ")"
   16    | • "identifier" "(" exp function_r ")"
   17    | • "-" exp
   18    | • exp "+" exp
   19    | • exp "<=" exp
   20    | • exp ">=" exp
   21    | • exp "<>" exp
   22    | • exp "-" exp
   23    | • exp "*" exp
   24    | • exp "/" exp
   25    | • exp "=" exp
   26    | • exp "<" exp
   27    | • exp ">" exp
   28    | • exp "&" exp
   29    | • exp "|" exp
   30    | • "(" exps ")"
   31    | • lvalue ":=" exp
   32    | • "if" exp "then" exp
   33    | • "if" exp "then" exp "else" exp
   33    | "if" exp "then" exp "else" • exp
   34    | • "while" exp "do" exp
   35    | • "for" "identifier" ":=" exp "to" exp "do" exp
   36    | • "break"
   37    | • "let" chunks "in" exp "end"
   42 lvalue: • "identifier"
   43       | • lvalue "." "identifier"
   44       | • lvalue "[" exp "]"
   70 typeid: • "identifier"
   71       | • "_namety" "(" "integer" ")"

    "string"      décalage et aller à l'état 1
    "identifier"  décalage et aller à l'état 2
    "integer"     décalage et aller à l'état 3
    "break"       décalage et aller à l'état 4
    "for"         décalage et aller à l'état 5
    "if"          décalage et aller à l'état 7
    "let"         décalage et aller à l'état 8
    "("           décalage et aller à l'état 9
    "-"           décalage et aller à l'état 10
    "nil"         décalage et aller à l'état 11
    "while"       décalage et aller à l'état 15
    "_namety"     décalage et aller à l'état 16

    exp     aller à l'état 141
    lvalue  aller à l'état 19
    typeid  aller à l'état 27


État 128

   37 exp: "let" chunks "in" exp "end" •

    $défaut  réduction par utilisation de la règle 37 (exp)


État 129

   57 fundec: "primitive" "identifier" "(" tyfields ")" •  ["end of file", "function", "in", "primitive", "type", "var"]
   58       | "primitive" "identifier" "(" tyfields ")" • ":" typeid

    ":"  décalage et aller à l'état 142

    $défaut  réduction par utilisation de la règle 57 (fundec)


État 130

   64 ty: "array" "of" • typeid
   70 typeid: • "identifier"
   71       | • "_namety" "(" "integer" ")"

    "identifier"  décalage et aller à l'état 109
    "_namety"     décalage et aller à l'état 16

    typeid  aller à l'état 143


État 131

   63 ty: "{" tyfields • "}"

    "}"  décalage et aller à l'état 144


État 132

    6 exp: • "integer"
    7    | • "nil"
    8    | • "string"
    9    | • typeid "[" exp "]" "of" exp
   10    | • typeid "{" "}"
   11    | • typeid "{" "identifier" "=" exp "}"
   12    | • typeid "{" "identifier" "=" exp array_r "}"
   13    | • lvalue
   14    | • "identifier" "(" ")"
   15    | • "identifier" "(" exp ")"
   16    | • "identifier" "(" exp function_r ")"
   17    | • "-" exp
   18    | • exp "+" exp
   19    | • exp "<=" exp
   20    | • exp ">=" exp
   21    | • exp "<>" exp
   22    | • exp "-" exp
   23    | • exp "*" exp
   24    | • exp "/" exp
   25    | • exp "=" exp
   26    | • exp "<" exp
   27    | • exp ">" exp
   28    | • exp "&" exp
   29    | • exp "|" exp
   30    | • "(" exps ")"
   31    | • lvalue ":=" exp
   32    | • "if" exp "then" exp
   33    | • "if" exp "then" exp "else" exp
   34    | • "while" exp "do" exp
   35    | • "for" "identifier" ":=" exp "to" exp "do" exp
   36    | • "break"
   37    | • "let" chunks "in" exp "end"
   42 lvalue: • "identifier"
   43       | • lvalue "." "identifier"
   44       | • lvalue "[" exp "]"
   54 vardec: "var" "identifier" ":" typeid ":=" • exp
   70 typeid: • "identifier"
   71       | • "_namety" "(" "integer" ")"

    "string"      décalage et aller à l'état 1
    "identifier"  décalage et aller à l'état 2
    "integer"     décalage et aller à l'état 3
    "break"       décalage et aller à l'état 4
    "for"         décalage et aller à l'état 5
    "if"          décalage et aller à l'état 7
    "let"         décalage et aller à l'état 8
    "("           décalage et aller à l'état 9
    "-"           décalage et aller à l'état 10
    "nil"         décalage et aller à l'état 11
    "while"       décalage et aller à l'état 15
    "_namety"     décalage et aller à l'état 16

    exp     aller à l'état 145
    lvalue  aller à l'état 19
    typeid  aller à l'état 27


État 133

   11 exp: typeid "{" "identifier" "=" exp • "}"
   12    | typeid "{" "identifier" "=" exp • array_r "}"
   18    | exp • "+" exp
   19    | exp • "<=" exp
   20    | exp • ">=" exp
   21    | exp • "<>" exp
   22    | exp • "-" exp
   23    | exp • "*" exp
   24    | exp • "/" exp
   25    | exp • "=" exp
   26    | exp • "<" exp
   27    | exp • ">" exp
   28    | exp • "&" exp
   29    | exp • "|" exp
   38 array_r: • "," "identifier" "=" exp
   39        | • "," "identifier" "=" exp array_r

    "&"   décalage et aller à l'état 42
    ","   décalage et aller à l'état 146
    "/"   décalage et aller à l'état 43
    "="   décalage et aller à l'état 44
    ">="  décalage et aller à l'état 45
    ">"   décalage et aller à l'état 46
    "<="  décalage et aller à l'état 47
    "<"   décalage et aller à l'état 48
    "-"   décalage et aller à l'état 49
    "<>"  décalage et aller à l'état 50
    "|"   décalage et aller à l'état 51
    "+"   décalage et aller à l'état 52
    "}"   décalage et aller à l'état 147
    "*"   décalage et aller à l'état 53

    array_r  aller à l'état 148


État 134

    6 exp: • "integer"
    7    | • "nil"
    8    | • "string"
    9    | • typeid "[" exp "]" "of" exp
    9    | typeid "[" exp "]" "of" • exp
   10    | • typeid "{" "}"
   11    | • typeid "{" "identifier" "=" exp "}"
   12    | • typeid "{" "identifier" "=" exp array_r "}"
   13    | • lvalue
   14    | • "identifier" "(" ")"
   15    | • "identifier" "(" exp ")"
   16    | • "identifier" "(" exp function_r ")"
   17    | • "-" exp
   18    | • exp "+" exp
   19    | • exp "<=" exp
   20    | • exp ">=" exp
   21    | • exp "<>" exp
   22    | • exp "-" exp
   23    | • exp "*" exp
   24    | • exp "/" exp
   25    | • exp "=" exp
   26    | • exp "<" exp
   27    | • exp ">" exp
   28    | • exp "&" exp
   29    | • exp "|" exp
   30    | • "(" exps ")"
   31    | • lvalue ":=" exp
   32    | • "if" exp "then" exp
   33    | • "if" exp "then" exp "else" exp
   34    | • "while" exp "do" exp
   35    | • "for" "identifier" ":=" exp "to" exp "do" exp
   36    | • "break"
   37    | • "let" chunks "in" exp "end"
   42 lvalue: • "identifier"
   43       | • lvalue "." "identifier"
   44       | • lvalue "[" exp "]"
   70 typeid: • "identifier"
   71       | • "_namety" "(" "integer" ")"

    "string"      décalage et aller à l'état 1
    "identifier"  décalage et aller à l'état 2
    "integer"     décalage et aller à l'état 3
    "break"       décalage et aller à l'état 4
    "for"         décalage et aller à l'état 5
    "if"          décalage et aller à l'état 7
    "let"         décalage et aller à l'état 8
    "("           décalage et aller à l'état 9
    "-"           décalage et aller à l'état 10
    "nil"         décalage et aller à l'état 11
    "while"       décalage et aller à l'état 15
    "_namety"     décalage et aller à l'état 16

    exp     aller à l'état 149
    lvalue  aller à l'état 19
    typeid  aller à l'état 27


État 135

   41 function_r: "," exp function_r •

    $défaut  réduction par utilisation de la règle 41 (function_r)


État 136

   18 exp: exp • "+" exp
   19    | exp • "<=" exp
   20    | exp • ">=" exp
   21    | exp • "<>" exp
   22    | exp • "-" exp
   23    | exp • "*" exp
   24    | exp • "/" exp
   25    | exp • "=" exp
   26    | exp • "<" exp
   27    | exp • ">" exp
   28    | exp • "&" exp
   29    | exp • "|" exp
   35    | "for" "identifier" ":=" exp "to" exp • "do" exp

    "&"   décalage et aller à l'état 42
    "/"   décalage et aller à l'état 43
    "do"  décalage et aller à l'état 150
    "="   décalage et aller à l'état 44
    ">="  décalage et aller à l'état 45
    ">"   décalage et aller à l'état 46
    "<="  décalage et aller à l'état 47
    "<"   décalage et aller à l'état 48
    "-"   décalage et aller à l'état 49
    "<>"  décalage et aller à l'état 50
    "|"   décalage et aller à l'état 51
    "+"   décalage et aller à l'état 52
    "*"   décalage et aller à l'état 53


État 137

   69 tyfield: "identifier" ":" typeid •

    $défaut  réduction par utilisation de la règle 69 (tyfield)


État 138

   56 fundec: "function" "identifier" "(" tyfields ")" ":" • typeid "=" exp
   70 typeid: • "identifier"
   71       | • "_namety" "(" "integer" ")"

    "identifier"  décalage et aller à l'état 109
    "_namety"     décalage et aller à l'état 16

    typeid  aller à l'état 151


État 139

    6 exp: • "integer"
    7    | • "nil"
    8    | • "string"
    9    | • typeid "[" exp "]" "of" exp
   10    | • typeid "{" "}"
   11    | • typeid "{" "identifier" "=" exp "}"
   12    | • typeid "{" "identifier" "=" exp array_r "}"
   13    | • lvalue
   14    | • "identifier" "(" ")"
   15    | • "identifier" "(" exp ")"
   16    | • "identifier" "(" exp function_r ")"
   17    | • "-" exp
   18    | • exp "+" exp
   19    | • exp "<=" exp
   20    | • exp ">=" exp
   21    | • exp "<>" exp
   22    | • exp "-" exp
   23    | • exp "*" exp
   24    | • exp "/" exp
   25    | • exp "=" exp
   26    | • exp "<" exp
   27    | • exp ">" exp
   28    | • exp "&" exp
   29    | • exp "|" exp
   30    | • "(" exps ")"
   31    | • lvalue ":=" exp
   32    | • "if" exp "then" exp
   33    | • "if" exp "then" exp "else" exp
   34    | • "while" exp "do" exp
   35    | • "for" "identifier" ":=" exp "to" exp "do" exp
   36    | • "break"
   37    | • "let" chunks "in" exp "end"
   42 lvalue: • "identifier"
   43       | • lvalue "." "identifier"
   44       | • lvalue "[" exp "]"
   55 fundec: "function" "identifier" "(" tyfields ")" "=" • exp
   70 typeid: • "identifier"
   71       | • "_namety" "(" "integer" ")"

    "string"      décalage et aller à l'état 1
    "identifier"  décalage et aller à l'état 2
    "integer"     décalage et aller à l'état 3
    "break"       décalage et aller à l'état 4
    "for"         décalage et aller à l'état 5
    "if"          décalage et aller à l'état 7
    "let"         décalage et aller à l'état 8
    "("           décalage et aller à l'état 9
    "-"           décalage et aller à l'état 10
    "nil"         décalage et aller à l'état 11
    "while"       décalage et aller à l'état 15
    "_namety"     décalage et aller à l'état 16

    exp     aller à l'état 152
    lvalue  aller à l'état 19
    typeid  aller à l'état 27


État 140

   67 tyfields.1: tyfields.1 "," tyfield •

    $défaut  réduction par utilisation de la règle 67 (tyfields.1)


État 141

   18 exp: exp • "+" exp
   19    | exp • "<=" exp
   20    | exp • ">=" exp
   21    | exp • "<>" exp
   22    | exp • "-" exp
   23    | exp • "*" exp
   24    | exp • "/" exp
   25    | exp • "=" exp
   26    | exp • "<" exp
   27    | exp • ">" exp
   28    | exp • "&" exp
   29    | exp • "|" exp
   33    | "if" exp "then" exp "else" exp •  ["end of file", ",", "do", "else", "end", "function", "in", "primitive", "}", "]", ")", ";", "then", "to", "type", "var"]

    "&"   décalage et aller à l'état 42
    "/"   décalage et aller à l'état 43
    "="   décalage et aller à l'état 44
    ">="  décalage et aller à l'état 45
    ">"   décalage et aller à l'état 46
    "<="  décalage et aller à l'état 47
    "<"   décalage et aller à l'état 48
    "-"   décalage et aller à l'état 49
    "<>"  décalage et aller à l'état 50
    "|"   décalage et aller à l'état 51
    "+"   décalage et aller à l'état 52
    "*"   décalage et aller à l'état 53

    $défaut  réduction par utilisation de la règle 33 (exp)

    Conflit entre la règle 33 et le jeton "&" résolu par décalage ("else" < "&").
    Conflit entre la règle 33 et le jeton "/" résolu par décalage ("else" < "/").
    Conflit entre la règle 33 et le jeton "=" résolu par décalage ("else" < "=").
    Conflit entre la règle 33 et le jeton ">=" résolu par décalage ("else" < ">=").
    Conflit entre la règle 33 et le jeton ">" résolu par décalage ("else" < ">").
    Conflit entre la règle 33 et le jeton "<=" résolu par décalage ("else" < "<=").
    Conflit entre la règle 33 et le jeton "<" résolu par décalage ("else" < "<").
    Conflit entre la règle 33 et le jeton "-" résolu par décalage ("else" < "-").
    Conflit entre la règle 33 et le jeton "<>" résolu par décalage ("else" < "<>").
    Conflit entre la règle 33 et le jeton "|" résolu par décalage ("else" < "|").
    Conflit entre la règle 33 et le jeton "+" résolu par décalage ("else" < "+").
    Conflit entre la règle 33 et le jeton "*" résolu par décalage ("else" < "*").


État 142

   58 fundec: "primitive" "identifier" "(" tyfields ")" ":" • typeid
   70 typeid: • "identifier"
   71       | • "_namety" "(" "integer" ")"

    "identifier"  décalage et aller à l'état 109
    "_namety"     décalage et aller à l'état 16

    typeid  aller à l'état 153


État 143

   64 ty: "array" "of" typeid •

    $défaut  réduction par utilisation de la règle 64 (ty)


État 144

   63 ty: "{" tyfields "}" •

    $défaut  réduction par utilisation de la règle 63 (ty)


État 145

   18 exp: exp • "+" exp
   19    | exp • "<=" exp
   20    | exp • ">=" exp
   21    | exp • "<>" exp
   22    | exp • "-" exp
   23    | exp • "*" exp
   24    | exp • "/" exp
   25    | exp • "=" exp
   26    | exp • "<" exp
   27    | exp • ">" exp
   28    | exp • "&" exp
   29    | exp • "|" exp
   54 vardec: "var" "identifier" ":" typeid ":=" exp •  ["end of file", "function", "in", "primitive", "type", "var"]

    "&"   décalage et aller à l'état 42
    "/"   décalage et aller à l'état 43
    "="   décalage et aller à l'état 44
    ">="  décalage et aller à l'état 45
    ">"   décalage et aller à l'état 46
    "<="  décalage et aller à l'état 47
    "<"   décalage et aller à l'état 48
    "-"   décalage et aller à l'état 49
    "<>"  décalage et aller à l'état 50
    "|"   décalage et aller à l'état 51
    "+"   décalage et aller à l'état 52
    "*"   décalage et aller à l'état 53

    $défaut  réduction par utilisation de la règle 54 (vardec)


État 146

   38 array_r: "," • "identifier" "=" exp
   39        | "," • "identifier" "=" exp array_r

    "identifier"  décalage et aller à l'état 154


État 147

   11 exp: typeid "{" "identifier" "=" exp "}" •

    $défaut  réduction par utilisation de la règle 11 (exp)


État 148

   12 exp: typeid "{" "identifier" "=" exp array_r • "}"

    "}"  décalage et aller à l'état 155


État 149

    9 exp: typeid "[" exp "]" "of" exp •  ["end of file", "&", ",", "/", "do", "else", "end", "=", "function", ">=", ">", "in", "<=", "<", "-", "<>", "|", "+", "primitive", "}", "]", ")", ";", "then", "*", "to", "type", "var"]
   18    | exp • "+" exp
   19    | exp • "<=" exp
   20    | exp • ">=" exp
   21    | exp • "<>" exp
   22    | exp • "-" exp
   23    | exp • "*" exp
   24    | exp • "/" exp
   25    | exp • "=" exp
   26    | exp • "<" exp
   27    | exp • ">" exp
   28    | exp • "&" exp
   29    | exp • "|" exp

    $défaut  réduction par utilisation de la règle 9 (exp)

    Conflit entre la règle 9 et le jeton "&" résolu par réduction ("&" < "of").
    Conflit entre la règle 9 et le jeton "/" résolu par réduction ("/" < "of").
    Conflit entre la règle 9 et le jeton "=" résolu par réduction ("=" < "of").
    Conflit entre la règle 9 et le jeton ">=" résolu par réduction (">=" < "of").
    Conflit entre la règle 9 et le jeton ">" résolu par réduction (">" < "of").
    Conflit entre la règle 9 et le jeton "<=" résolu par réduction ("<=" < "of").
    Conflit entre la règle 9 et le jeton "<" résolu par réduction ("<" < "of").
    Conflit entre la règle 9 et le jeton "-" résolu par réduction ("-" < "of").
    Conflit entre la règle 9 et le jeton "<>" résolu par réduction ("<>" < "of").
    Conflit entre la règle 9 et le jeton "|" résolu par réduction ("|" < "of").
    Conflit entre la règle 9 et le jeton "+" résolu par réduction ("+" < "of").
    Conflit entre la règle 9 et le jeton "*" résolu par réduction ("*" < "of").


État 150

    6 exp: • "integer"
    7    | • "nil"
    8    | • "string"
    9    | • typeid "[" exp "]" "of" exp
   10    | • typeid "{" "}"
   11    | • typeid "{" "identifier" "=" exp "}"
   12    | • typeid "{" "identifier" "=" exp array_r "}"
   13    | • lvalue
   14    | • "identifier" "(" ")"
   15    | • "identifier" "(" exp ")"
   16    | • "identifier" "(" exp function_r ")"
   17    | • "-" exp
   18    | • exp "+" exp
   19    | • exp "<=" exp
   20    | • exp ">=" exp
   21    | • exp "<>" exp
   22    | • exp "-" exp
   23    | • exp "*" exp
   24    | • exp "/" exp
   25    | • exp "=" exp
   26    | • exp "<" exp
   27    | • exp ">" exp
   28    | • exp "&" exp
   29    | • exp "|" exp
   30    | • "(" exps ")"
   31    | • lvalue ":=" exp
   32    | • "if" exp "then" exp
   33    | • "if" exp "then" exp "else" exp
   34    | • "while" exp "do" exp
   35    | • "for" "identifier" ":=" exp "to" exp "do" exp
   35    | "for" "identifier" ":=" exp "to" exp "do" • exp
   36    | • "break"
   37    | • "let" chunks "in" exp "end"
   42 lvalue: • "identifier"
   43       | • lvalue "." "identifier"
   44       | • lvalue "[" exp "]"
   70 typeid: • "identifier"
   71       | • "_namety" "(" "integer" ")"

    "string"      décalage et aller à l'état 1
    "identifier"  décalage et aller à l'état 2
    "integer"     décalage et aller à l'état 3
    "break"       décalage et aller à l'état 4
    "for"         décalage et aller à l'état 5
    "if"          décalage et aller à l'état 7
    "let"         décalage et aller à l'état 8
    "("           décalage et aller à l'état 9
    "-"           décalage et aller à l'état 10
    "nil"         décalage et aller à l'état 11
    "while"       décalage et aller à l'état 15
    "_namety"     décalage et aller à l'état 16

    exp     aller à l'état 156
    lvalue  aller à l'état 19
    typeid  aller à l'état 27


État 151

   56 fundec: "function" "identifier" "(" tyfields ")" ":" typeid • "=" exp

    "="  décalage et aller à l'état 157


État 152

   18 exp: exp • "+" exp
   19    | exp • "<=" exp
   20    | exp • ">=" exp
   21    | exp • "<>" exp
   22    | exp • "-" exp
   23    | exp • "*" exp
   24    | exp • "/" exp
   25    | exp • "=" exp
   26    | exp • "<" exp
   27    | exp • ">" exp
   28    | exp • "&" exp
   29    | exp • "|" exp
   55 fundec: "function" "identifier" "(" tyfields ")" "=" exp •  ["end of file", "function", "in", "primitive", "type", "var"]

    "&"   décalage et aller à l'état 42
    "/"   décalage et aller à l'état 43
    "="   décalage et aller à l'état 44
    ">="  décalage et aller à l'état 45
    ">"   décalage et aller à l'état 46
    "<="  décalage et aller à l'état 47
    "<"   décalage et aller à l'état 48
    "-"   décalage et aller à l'état 49
    "<>"  décalage et aller à l'état 50
    "|"   décalage et aller à l'état 51
    "+"   décalage et aller à l'état 52
    "*"   décalage et aller à l'état 53

    $défaut  réduction par utilisation de la règle 55 (fundec)


État 153

   58 fundec: "primitive" "identifier" "(" tyfields ")" ":" typeid •

    $défaut  réduction par utilisation de la règle 58 (fundec)


État 154

   38 array_r: "," "identifier" • "=" exp
   39        | "," "identifier" • "=" exp array_r

    "="  décalage et aller à l'état 158


État 155

   12 exp: typeid "{" "identifier" "=" exp array_r "}" •

    $défaut  réduction par utilisation de la règle 12 (exp)


État 156

   18 exp: exp • "+" exp
   19    | exp • "<=" exp
   20    | exp • ">=" exp
   21    | exp • "<>" exp
   22    | exp • "-" exp
   23    | exp • "*" exp
   24    | exp • "/" exp
   25    | exp • "=" exp
   26    | exp • "<" exp
   27    | exp • ">" exp
   28    | exp • "&" exp
   29    | exp • "|" exp
   35    | "for" "identifier" ":=" exp "to" exp "do" exp •  ["end of file", ",", "do", "else", "end", "function", "in", "primitive", "}", "]", ")", ";", "then", "to", "type", "var"]

    "&"   décalage et aller à l'état 42
    "/"   décalage et aller à l'état 43
    "="   décalage et aller à l'état 44
    ">="  décalage et aller à l'état 45
    ">"   décalage et aller à l'état 46
    "<="  décalage et aller à l'état 47
    "<"   décalage et aller à l'état 48
    "-"   décalage et aller à l'état 49
    "<>"  décalage et aller à l'état 50
    "|"   décalage et aller à l'état 51
    "+"   décalage et aller à l'état 52
    "*"   décalage et aller à l'état 53

    $défaut  réduction par utilisation de la règle 35 (exp)

    Conflit entre la règle 35 et le jeton "&" résolu par décalage ("do" < "&").
    Conflit entre la règle 35 et le jeton "/" résolu par décalage ("do" < "/").
    Conflit entre la règle 35 et le jeton "=" résolu par décalage ("do" < "=").
    Conflit entre la règle 35 et le jeton ">=" résolu par décalage ("do" < ">=").
    Conflit entre la règle 35 et le jeton ">" résolu par décalage ("do" < ">").
    Conflit entre la règle 35 et le jeton "<=" résolu par décalage ("do" < "<=").
    Conflit entre la règle 35 et le jeton "<" résolu par décalage ("do" < "<").
    Conflit entre la règle 35 et le jeton "-" résolu par décalage ("do" < "-").
    Conflit entre la règle 35 et le jeton "<>" résolu par décalage ("do" < "<>").
    Conflit entre la règle 35 et le jeton "|" résolu par décalage ("do" < "|").
    Conflit entre la règle 35 et le jeton "+" résolu par décalage ("do" < "+").
    Conflit entre la règle 35 et le jeton "*" résolu par décalage ("do" < "*").


État 157

    6 exp: • "integer"
    7    | • "nil"
    8    | • "string"
    9    | • typeid "[" exp "]" "of" exp
   10    | • typeid "{" "}"
   11    | • typeid "{" "identifier" "=" exp "}"
   12    | • typeid "{" "identifier" "=" exp array_r "}"
   13    | • lvalue
   14    | • "identifier" "(" ")"
   15    | • "identifier" "(" exp ")"
   16    | • "identifier" "(" exp function_r ")"
   17    | • "-" exp
   18    | • exp "+" exp
   19    | • exp "<=" exp
   20    | • exp ">=" exp
   21    | • exp "<>" exp
   22    | • exp "-" exp
   23    | • exp "*" exp
   24    | • exp "/" exp
   25    | • exp "=" exp
   26    | • exp "<" exp
   27    | • exp ">" exp
   28    | • exp "&" exp
   29    | • exp "|" exp
   30    | • "(" exps ")"
   31    | • lvalue ":=" exp
   32    | • "if" exp "then" exp
   33    | • "if" exp "then" exp "else" exp
   34    | • "while" exp "do" exp
   35    | • "for" "identifier" ":=" exp "to" exp "do" exp
   36    | • "break"
   37    | • "let" chunks "in" exp "end"
   42 lvalue: • "identifier"
   43       | • lvalue "." "identifier"
   44       | • lvalue "[" exp "]"
   56 fundec: "function" "identifier" "(" tyfields ")" ":" typeid "=" • exp
   70 typeid: • "identifier"
   71       | • "_namety" "(" "integer" ")"

    "string"      décalage et aller à l'état 1
    "identifier"  décalage et aller à l'état 2
    "integer"     décalage et aller à l'état 3
    "break"       décalage et aller à l'état 4
    "for"         décalage et aller à l'état 5
    "if"          décalage et aller à l'état 7
    "let"         décalage et aller à l'état 8
    "("           décalage et aller à l'état 9
    "-"           décalage et aller à l'état 10
    "nil"         décalage et aller à l'état 11
    "while"       décalage et aller à l'état 15
    "_namety"     décalage et aller à l'état 16

    exp     aller à l'état 159
    lvalue  aller à l'état 19
    typeid  aller à l'état 27


État 158

    6 exp: • "integer"
    7    | • "nil"
    8    | • "string"
    9    | • typeid "[" exp "]" "of" exp
   10    | • typeid "{" "}"
   11    | • typeid "{" "identifier" "=" exp "}"
   12    | • typeid "{" "identifier" "=" exp array_r "}"
   13    | • lvalue
   14    | • "identifier" "(" ")"
   15    | • "identifier" "(" exp ")"
   16    | • "identifier" "(" exp function_r ")"
   17    | • "-" exp
   18    | • exp "+" exp
   19    | • exp "<=" exp
   20    | • exp ">=" exp
   21    | • exp "<>" exp
   22    | • exp "-" exp
   23    | • exp "*" exp
   24    | • exp "/" exp
   25    | • exp "=" exp
   26    | • exp "<" exp
   27    | • exp ">" exp
   28    | • exp "&" exp
   29    | • exp "|" exp
   30    | • "(" exps ")"
   31    | • lvalue ":=" exp
   32    | • "if" exp "then" exp
   33    | • "if" exp "then" exp "else" exp
   34    | • "while" exp "do" exp
   35    | • "for" "identifier" ":=" exp "to" exp "do" exp
   36    | • "break"
   37    | • "let" chunks "in" exp "end"
   38 array_r: "," "identifier" "=" • exp
   39        | "," "identifier" "=" • exp array_r
   42 lvalue: • "identifier"
   43       | • lvalue "." "identifier"
   44       | • lvalue "[" exp "]"
   70 typeid: • "identifier"
   71       | • "_namety" "(" "integer" ")"

    "string"      décalage et aller à l'état 1
    "identifier"  décalage et aller à l'état 2
    "integer"     décalage et aller à l'état 3
    "break"       décalage et aller à l'état 4
    "for"         décalage et aller à l'état 5
    "if"          décalage et aller à l'état 7
    "let"         décalage et aller à l'état 8
    "("           décalage et aller à l'état 9
    "-"           décalage et aller à l'état 10
    "nil"         décalage et aller à l'état 11
    "while"       décalage et aller à l'état 15
    "_namety"     décalage et aller à l'état 16

    exp     aller à l'état 160
    lvalue  aller à l'état 19
    typeid  aller à l'état 27


État 159

   18 exp: exp • "+" exp
   19    | exp • "<=" exp
   20    | exp • ">=" exp
   21    | exp • "<>" exp
   22    | exp • "-" exp
   23    | exp • "*" exp
   24    | exp • "/" exp
   25    | exp • "=" exp
   26    | exp • "<" exp
   27    | exp • ">" exp
   28    | exp • "&" exp
   29    | exp • "|" exp
   56 fundec: "function" "identifier" "(" tyfields ")" ":" typeid "=" exp •  ["end of file", "function", "in", "primitive", "type", "var"]

    "&"   décalage et aller à l'état 42
    "/"   décalage et aller à l'état 43
    "="   décalage et aller à l'état 44
    ">="  décalage et aller à l'état 45
    ">"   décalage et aller à l'état 46
    "<="  décalage et aller à l'état 47
    "<"   décalage et aller à l'état 48
    "-"   décalage et aller à l'état 49
    "<>"  décalage et aller à l'état 50
    "|"   décalage et aller à l'état 51
    "+"   décalage et aller à l'état 52
    "*"   décalage et aller à l'état 53

    $défaut  réduction par utilisation de la règle 56 (fundec)


État 160

   18 exp: exp • "+" exp
   19    | exp • "<=" exp
   20    | exp • ">=" exp
   21    | exp • "<>" exp
   22    | exp • "-" exp
   23    | exp • "*" exp
   24    | exp • "/" exp
   25    | exp • "=" exp
   26    | exp • "<" exp
   27    | exp • ">" exp
   28    | exp • "&" exp
   29    | exp • "|" exp
   38 array_r: • "," "identifier" "=" exp
   38        | "," "identifier" "=" exp •  ["}"]
   39        | • "," "identifier" "=" exp array_r
   39        | "," "identifier" "=" exp • array_r

    "&"   décalage et aller à l'état 42
    ","   décalage et aller à l'état 146
    "/"   décalage et aller à l'état 43
    "="   décalage et aller à l'état 44
    ">="  décalage et aller à l'état 45
    ">"   décalage et aller à l'état 46
    "<="  décalage et aller à l'état 47
    "<"   décalage et aller à l'état 48
    "-"   décalage et aller à l'état 49
    "<>"  décalage et aller à l'état 50
    "|"   décalage et aller à l'état 51
    "+"   décalage et aller à l'état 52
    "*"   décalage et aller à l'état 53

    $défaut  réduction par utilisation de la règle 38 (array_r)

    array_r  aller à l'état 161


État 161

   39 array_r: "," "identifier" "=" exp array_r •

    $défaut  réduction par utilisation de la règle 39 (array_r)
