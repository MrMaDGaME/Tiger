Terminaux inutilisés dans la grammaire

    "_cast"
    "class"
    "extends"
    "method"
    "new"


État 2 conflits: 1 décalage/réduction


Grammaire

    0 $accept: program "end of file"

    1 program: exp
    2        | chunks

    3 exps: ε
    4     | exps.1

    5 exps.1: exps ";" exp
    6       | exp

    7 exp: "integer"
    8    | "nil"
    9    | "string"
   10    | "identifier" "[" exp "]" "of" exp
   11    | typeid "{" "}"
   12    | typeid "{" record_r "}"
   13    | lvalue
   14    | "identifier" "(" ")"
   15    | "identifier" "(" function_r ")"
   16    | "-" exp
   17    | exp "+" exp
   18    | exp "<=" exp
   19    | exp ">=" exp
   20    | exp "<>" exp
   21    | exp "-" exp
   22    | exp "*" exp
   23    | exp "/" exp
   24    | exp "=" exp
   25    | exp "<" exp
   26    | exp ">" exp
   27    | exp "&" exp
   28    | exp "|" exp
   29    | "(" exps ")"
   30    | lvalue ":=" exp
   31    | "if" exp "then" exp
   32    | "if" exp "then" exp "else" exp
   33    | "while" exp "do" exp
   34    | "for" "identifier" ":=" exp "to" exp "do" exp
   35    | "break"
   36    | "let" chunks "in" exps "end"
   37    | "_exp" "(" "integer" ")"

   38 record_r: record_r "," "identifier" "=" exp
   39         | "identifier" "=" exp

   40 function_r: function_r "," exp
   41           | exp

   42 lvalue: "identifier"
   43       | lvalue "." "identifier"
   44       | lvalue "[" exp "]"
   45       | "_lvalue" "(" "integer" ")"

   46 chunks: ε
   47       | tychunk chunks
   48       | funchunk chunks
   49       | varchunk chunks
   50       | "import" "string"
   51       | "_chunks" "(" "integer" ")" chunks

   52 varchunk: vardec
   53         | vardec ";" varchunk

   54 funchunk: fundec
   55         | fundec funchunk

   56 vardec: "var" "identifier" ":=" exp
   57       | "var" "identifier" ":" typeid ":=" exp

   58 fundec: "function" "identifier" "(" tyfieldsbis ")" "=" exp
   59       | "function" "identifier" "(" tyfieldsbis ")" ":" typeid "=" exp
   60       | "primitive" "identifier" "(" tyfieldsbis ")"
   61       | "primitive" "identifier" "(" tyfieldsbis ")" ":" typeid

   62 tychunk: tydec
   63        | tydec tychunk

   64 tydec: "type" "identifier" "=" ty

   65 ty: typeid
   66   | "{" tyfields "}"
   67   | "array" "of" typeid

   68 tyfields: ε
   69         | tyfields.1

   70 tyfields.1: tyfields.1 "," tyfield
   71           | tyfield

   72 tyfield: "identifier" ":" typeid

   73 tyfieldsbis: ε
   74            | tyfieldsbis.1

   75 tyfieldsbis.1: tyfieldsbis.1 "," tyfieldbis
   76              | tyfieldbis

   77 tyfieldbis: "identifier" ":" typeid

   78 typeid: "identifier"
   79       | "_namety" "(" "integer" ")"


Terminaux, suivis des règles où ils apparaissent

    "end of file" (0) 0
    error (256)
    "string" <std::string> (258) 9 50
    "identifier" <misc::symbol> (259) 10 14 15 34 38 39 42 43 56 57 58 59 60 61 64 72 77 78
    "integer" <int> (260) 7 37 45 51 79
    "&" (261) 27
    "array" (262) 67
    ":=" (263) 30 34 56 57
    "break" (264) 35
    "_cast" (265)
    "class" (266)
    ":" (267) 57 59 61 72 77
    "," (268) 38 40 70 75
    "/" (269) 23
    "do" (270) 33 34
    "." (271) 43
    "else" (272) 32
    "end" (273) 36
    "=" (274) 24 38 39 58 59 64
    "_exp" (275) 37
    "extends" (276)
    "for" (277) 34
    "function" (278) 58 59
    ">=" (279) 19
    ">" (280) 26
    "if" (281) 31 32
    "import" (282) 50
    "in" (283) 36
    "{" (284) 11 12 66
    "[" (285) 10 44
    "<=" (286) 18
    "let" (287) 36
    "(" (288) 14 15 29 37 45 51 58 59 60 61 79
    "<" (289) 25
    "-" (290) 16 21
    "method" (291)
    "<>" (292) 20
    "new" (293)
    "nil" (294) 8
    "of" (295) 10 67
    "|" (296) 28
    "+" (297) 17
    "primitive" (298) 60 61
    "}" (299) 11 12 66
    "]" (300) 10 44
    ")" (301) 14 15 29 37 45 51 58 59 60 61 79
    ";" (302) 5 53
    "then" (303) 31 32
    "*" (304) 22
    "to" (305) 34
    "type" (306) 64
    "var" (307) 56 57
    "while" (308) 33
    "_lvalue" (309) 45
    "_chunks" (310) 51
    "_namety" (311) 79


Non-terminaux, suivis des règles où ils apparaissent

    $accept (57)
        à gauche: 0
    program (58)
        à gauche: 1 2
        à droite: 0
    exps <ast::exps_type*> (59)
        à gauche: 3 4
        à droite: 5 29 36
    exps.1 <ast::exps_type*> (60)
        à gauche: 5 6
        à droite: 4
    exp <ast::Exp*> (61)
        à gauche: 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37
        à droite: 1 5 6 10 16 17 18 19 20 21 22 23 24 25 26 27 28 30 31 32 33 34 38 39 40 41 44 56 57 58 59
    record_r <ast::fieldinits_type*> (62)
        à gauche: 38 39
        à droite: 12 38
    function_r <ast::exps_type*> (63)
        à gauche: 40 41
        à droite: 15 40
    lvalue <ast::Var*> (64)
        à gauche: 42 43 44 45
        à droite: 13 30 43 44
    chunks <ast::ChunkList*> (65)
        à gauche: 46 47 48 49 50 51
        à droite: 2 36 47 48 49 51
    varchunk <ast::VarChunk*> (66)
        à gauche: 52 53
        à droite: 49 53
    funchunk <ast::FunctionChunk*> (67)
        à gauche: 54 55
        à droite: 48 55
    vardec <ast::VarDec*> (68)
        à gauche: 56 57
        à droite: 52 53
    fundec <ast::FunctionDec*> (69)
        à gauche: 58 59 60 61
        à droite: 54 55
    tychunk <ast::TypeChunk*> (70)
        à gauche: 62 63
        à droite: 47 63
    tydec <ast::TypeDec*> (71)
        à gauche: 64
        à droite: 62 63
    ty <ast::Ty*> (72)
        à gauche: 65 66 67
        à droite: 64
    tyfields <ast::fields_type*> (73)
        à gauche: 68 69
        à droite: 66
    tyfields.1 <ast::fields_type*> (74)
        à gauche: 70 71
        à droite: 69 70
    tyfield <ast::Field*> (75)
        à gauche: 72
        à droite: 70 71
    tyfieldsbis <ast::VarChunk*> (76)
        à gauche: 73 74
        à droite: 58 59 60 61
    tyfieldsbis.1 <ast::VarChunk*> (77)
        à gauche: 75 76
        à droite: 74 75
    tyfieldbis <ast::VarDec*> (78)
        à gauche: 77
        à droite: 75 76
    typeid <ast::NameTy*> (79)
        à gauche: 78 79
        à droite: 11 12 57 59 61 65 67 72 77


État 0

    0 $accept: • program "end of file"
    1 program: • exp
    2        | • chunks
    7 exp: • "integer"
    8    | • "nil"
    9    | • "string"
   10    | • "identifier" "[" exp "]" "of" exp
   11    | • typeid "{" "}"
   12    | • typeid "{" record_r "}"
   13    | • lvalue
   14    | • "identifier" "(" ")"
   15    | • "identifier" "(" function_r ")"
   16    | • "-" exp
   17    | • exp "+" exp
   18    | • exp "<=" exp
   19    | • exp ">=" exp
   20    | • exp "<>" exp
   21    | • exp "-" exp
   22    | • exp "*" exp
   23    | • exp "/" exp
   24    | • exp "=" exp
   25    | • exp "<" exp
   26    | • exp ">" exp
   27    | • exp "&" exp
   28    | • exp "|" exp
   29    | • "(" exps ")"
   30    | • lvalue ":=" exp
   31    | • "if" exp "then" exp
   32    | • "if" exp "then" exp "else" exp
   33    | • "while" exp "do" exp
   34    | • "for" "identifier" ":=" exp "to" exp "do" exp
   35    | • "break"
   36    | • "let" chunks "in" exps "end"
   37    | • "_exp" "(" "integer" ")"
   42 lvalue: • "identifier"
   43       | • lvalue "." "identifier"
   44       | • lvalue "[" exp "]"
   45       | • "_lvalue" "(" "integer" ")"
   46 chunks: ε •  ["end of file"]
   47       | • tychunk chunks
   48       | • funchunk chunks
   49       | • varchunk chunks
   50       | • "import" "string"
   51       | • "_chunks" "(" "integer" ")" chunks
   52 varchunk: • vardec
   53         | • vardec ";" varchunk
   54 funchunk: • fundec
   55         | • fundec funchunk
   56 vardec: • "var" "identifier" ":=" exp
   57       | • "var" "identifier" ":" typeid ":=" exp
   58 fundec: • "function" "identifier" "(" tyfieldsbis ")" "=" exp
   59       | • "function" "identifier" "(" tyfieldsbis ")" ":" typeid "=" exp
   60       | • "primitive" "identifier" "(" tyfieldsbis ")"
   61       | • "primitive" "identifier" "(" tyfieldsbis ")" ":" typeid
   62 tychunk: • tydec
   63        | • tydec tychunk
   64 tydec: • "type" "identifier" "=" ty
   78 typeid: • "identifier"
   79       | • "_namety" "(" "integer" ")"

    "string"      décalage et aller à l'état 1
    "identifier"  décalage et aller à l'état 2
    "integer"     décalage et aller à l'état 3
    "break"       décalage et aller à l'état 4
    "_exp"        décalage et aller à l'état 5
    "for"         décalage et aller à l'état 6
    "function"    décalage et aller à l'état 7
    "if"          décalage et aller à l'état 8
    "import"      décalage et aller à l'état 9
    "let"         décalage et aller à l'état 10
    "("           décalage et aller à l'état 11
    "-"           décalage et aller à l'état 12
    "nil"         décalage et aller à l'état 13
    "primitive"   décalage et aller à l'état 14
    "type"        décalage et aller à l'état 15
    "var"         décalage et aller à l'état 16
    "while"       décalage et aller à l'état 17
    "_lvalue"     décalage et aller à l'état 18
    "_chunks"     décalage et aller à l'état 19
    "_namety"     décalage et aller à l'état 20

    $défaut  réduction par utilisation de la règle 46 (chunks)

    program   aller à l'état 21
    exp       aller à l'état 22
    lvalue    aller à l'état 23
    chunks    aller à l'état 24
    varchunk  aller à l'état 25
    funchunk  aller à l'état 26
    vardec    aller à l'état 27
    fundec    aller à l'état 28
    tychunk   aller à l'état 29
    tydec     aller à l'état 30
    typeid    aller à l'état 31


État 1

    9 exp: "string" •

    $défaut  réduction par utilisation de la règle 9 (exp)


État 2

   10 exp: "identifier" • "[" exp "]" "of" exp
   14    | "identifier" • "(" ")"
   15    | "identifier" • "(" function_r ")"
   42 lvalue: "identifier" •  ["end of file", "&", ":=", ",", "/", "do", ".", "else", "end", "=", "function", ">=", ">", "import", "in", "[", "<=", "<", "-", "<>", "|", "+", "primitive", "}", "]", ")", ";", "then", "*", "to", "type", "var", "_chunks"]
   78 typeid: "identifier" •  ["{"]

    "["  décalage et aller à l'état 32
    "("  décalage et aller à l'état 33

    "{"      réduction par utilisation de la règle 78 (typeid)
    "["      [réduction par utilisation de la règle 42 (lvalue)]
    $défaut  réduction par utilisation de la règle 42 (lvalue)

    conflit par décalage/réduction sur le jeton "[" :
       42 lvalue: "identifier" •
       10 exp: "identifier" • "[" exp "]" "of" exp
      Premier exemple: "identifier" • "[" exp "]" "of" exp "end of file"
      Dérivation par décalage
        $accept
        ↳ 0: program                                        "end of file"
             ↳ 1: exp
                  ↳ 10: "identifier" • "[" exp "]" "of" exp
      Deuxième exemple: "identifier" • "[" exp "]" "end of file"
      Dérivation par réduction
        $accept
        ↳ 0: program                                           "end of file"
             ↳ 1: exp
                  ↳ 13: lvalue
                        ↳ 44: lvalue               "[" exp "]"
                              ↳ 42: "identifier" •



État 3

    7 exp: "integer" •

    $défaut  réduction par utilisation de la règle 7 (exp)


État 4

   35 exp: "break" •

    $défaut  réduction par utilisation de la règle 35 (exp)


État 5

   37 exp: "_exp" • "(" "integer" ")"

    "("  décalage et aller à l'état 34


État 6

   34 exp: "for" • "identifier" ":=" exp "to" exp "do" exp

    "identifier"  décalage et aller à l'état 35


État 7

   58 fundec: "function" • "identifier" "(" tyfieldsbis ")" "=" exp
   59       | "function" • "identifier" "(" tyfieldsbis ")" ":" typeid "=" exp

    "identifier"  décalage et aller à l'état 36


État 8

    7 exp: • "integer"
    8    | • "nil"
    9    | • "string"
   10    | • "identifier" "[" exp "]" "of" exp
   11    | • typeid "{" "}"
   12    | • typeid "{" record_r "}"
   13    | • lvalue
   14    | • "identifier" "(" ")"
   15    | • "identifier" "(" function_r ")"
   16    | • "-" exp
   17    | • exp "+" exp
   18    | • exp "<=" exp
   19    | • exp ">=" exp
   20    | • exp "<>" exp
   21    | • exp "-" exp
   22    | • exp "*" exp
   23    | • exp "/" exp
   24    | • exp "=" exp
   25    | • exp "<" exp
   26    | • exp ">" exp
   27    | • exp "&" exp
   28    | • exp "|" exp
   29    | • "(" exps ")"
   30    | • lvalue ":=" exp
   31    | • "if" exp "then" exp
   31    | "if" • exp "then" exp
   32    | • "if" exp "then" exp "else" exp
   32    | "if" • exp "then" exp "else" exp
   33    | • "while" exp "do" exp
   34    | • "for" "identifier" ":=" exp "to" exp "do" exp
   35    | • "break"
   36    | • "let" chunks "in" exps "end"
   37    | • "_exp" "(" "integer" ")"
   42 lvalue: • "identifier"
   43       | • lvalue "." "identifier"
   44       | • lvalue "[" exp "]"
   45       | • "_lvalue" "(" "integer" ")"
   78 typeid: • "identifier"
   79       | • "_namety" "(" "integer" ")"

    "string"      décalage et aller à l'état 1
    "identifier"  décalage et aller à l'état 2
    "integer"     décalage et aller à l'état 3
    "break"       décalage et aller à l'état 4
    "_exp"        décalage et aller à l'état 5
    "for"         décalage et aller à l'état 6
    "if"          décalage et aller à l'état 8
    "let"         décalage et aller à l'état 10
    "("           décalage et aller à l'état 11
    "-"           décalage et aller à l'état 12
    "nil"         décalage et aller à l'état 13
    "while"       décalage et aller à l'état 17
    "_lvalue"     décalage et aller à l'état 18
    "_namety"     décalage et aller à l'état 20

    exp     aller à l'état 37
    lvalue  aller à l'état 23
    typeid  aller à l'état 31


État 9

   50 chunks: "import" • "string"

    "string"  décalage et aller à l'état 38


État 10

   36 exp: "let" • chunks "in" exps "end"
   46 chunks: ε •  ["in"]
   47       | • tychunk chunks
   48       | • funchunk chunks
   49       | • varchunk chunks
   50       | • "import" "string"
   51       | • "_chunks" "(" "integer" ")" chunks
   52 varchunk: • vardec
   53         | • vardec ";" varchunk
   54 funchunk: • fundec
   55         | • fundec funchunk
   56 vardec: • "var" "identifier" ":=" exp
   57       | • "var" "identifier" ":" typeid ":=" exp
   58 fundec: • "function" "identifier" "(" tyfieldsbis ")" "=" exp
   59       | • "function" "identifier" "(" tyfieldsbis ")" ":" typeid "=" exp
   60       | • "primitive" "identifier" "(" tyfieldsbis ")"
   61       | • "primitive" "identifier" "(" tyfieldsbis ")" ":" typeid
   62 tychunk: • tydec
   63        | • tydec tychunk
   64 tydec: • "type" "identifier" "=" ty

    "function"   décalage et aller à l'état 7
    "import"     décalage et aller à l'état 9
    "primitive"  décalage et aller à l'état 14
    "type"       décalage et aller à l'état 15
    "var"        décalage et aller à l'état 16
    "_chunks"    décalage et aller à l'état 19

    $défaut  réduction par utilisation de la règle 46 (chunks)

    chunks    aller à l'état 39
    varchunk  aller à l'état 25
    funchunk  aller à l'état 26
    vardec    aller à l'état 27
    fundec    aller à l'état 28
    tychunk   aller à l'état 29
    tydec     aller à l'état 30


État 11

    3 exps: ε •  [")", ";"]
    4     | • exps.1
    5 exps.1: • exps ";" exp
    6       | • exp
    7 exp: • "integer"
    8    | • "nil"
    9    | • "string"
   10    | • "identifier" "[" exp "]" "of" exp
   11    | • typeid "{" "}"
   12    | • typeid "{" record_r "}"
   13    | • lvalue
   14    | • "identifier" "(" ")"
   15    | • "identifier" "(" function_r ")"
   16    | • "-" exp
   17    | • exp "+" exp
   18    | • exp "<=" exp
   19    | • exp ">=" exp
   20    | • exp "<>" exp
   21    | • exp "-" exp
   22    | • exp "*" exp
   23    | • exp "/" exp
   24    | • exp "=" exp
   25    | • exp "<" exp
   26    | • exp ">" exp
   27    | • exp "&" exp
   28    | • exp "|" exp
   29    | • "(" exps ")"
   29    | "(" • exps ")"
   30    | • lvalue ":=" exp
   31    | • "if" exp "then" exp
   32    | • "if" exp "then" exp "else" exp
   33    | • "while" exp "do" exp
   34    | • "for" "identifier" ":=" exp "to" exp "do" exp
   35    | • "break"
   36    | • "let" chunks "in" exps "end"
   37    | • "_exp" "(" "integer" ")"
   42 lvalue: • "identifier"
   43       | • lvalue "." "identifier"
   44       | • lvalue "[" exp "]"
   45       | • "_lvalue" "(" "integer" ")"
   78 typeid: • "identifier"
   79       | • "_namety" "(" "integer" ")"

    "string"      décalage et aller à l'état 1
    "identifier"  décalage et aller à l'état 2
    "integer"     décalage et aller à l'état 3
    "break"       décalage et aller à l'état 4
    "_exp"        décalage et aller à l'état 5
    "for"         décalage et aller à l'état 6
    "if"          décalage et aller à l'état 8
    "let"         décalage et aller à l'état 10
    "("           décalage et aller à l'état 11
    "-"           décalage et aller à l'état 12
    "nil"         décalage et aller à l'état 13
    "while"       décalage et aller à l'état 17
    "_lvalue"     décalage et aller à l'état 18
    "_namety"     décalage et aller à l'état 20

    $défaut  réduction par utilisation de la règle 3 (exps)

    exps    aller à l'état 40
    exps.1  aller à l'état 41
    exp     aller à l'état 42
    lvalue  aller à l'état 23
    typeid  aller à l'état 31


État 12

    7 exp: • "integer"
    8    | • "nil"
    9    | • "string"
   10    | • "identifier" "[" exp "]" "of" exp
   11    | • typeid "{" "}"
   12    | • typeid "{" record_r "}"
   13    | • lvalue
   14    | • "identifier" "(" ")"
   15    | • "identifier" "(" function_r ")"
   16    | • "-" exp
   16    | "-" • exp
   17    | • exp "+" exp
   18    | • exp "<=" exp
   19    | • exp ">=" exp
   20    | • exp "<>" exp
   21    | • exp "-" exp
   22    | • exp "*" exp
   23    | • exp "/" exp
   24    | • exp "=" exp
   25    | • exp "<" exp
   26    | • exp ">" exp
   27    | • exp "&" exp
   28    | • exp "|" exp
   29    | • "(" exps ")"
   30    | • lvalue ":=" exp
   31    | • "if" exp "then" exp
   32    | • "if" exp "then" exp "else" exp
   33    | • "while" exp "do" exp
   34    | • "for" "identifier" ":=" exp "to" exp "do" exp
   35    | • "break"
   36    | • "let" chunks "in" exps "end"
   37    | • "_exp" "(" "integer" ")"
   42 lvalue: • "identifier"
   43       | • lvalue "." "identifier"
   44       | • lvalue "[" exp "]"
   45       | • "_lvalue" "(" "integer" ")"
   78 typeid: • "identifier"
   79       | • "_namety" "(" "integer" ")"

    "string"      décalage et aller à l'état 1
    "identifier"  décalage et aller à l'état 2
    "integer"     décalage et aller à l'état 3
    "break"       décalage et aller à l'état 4
    "_exp"        décalage et aller à l'état 5
    "for"         décalage et aller à l'état 6
    "if"          décalage et aller à l'état 8
    "let"         décalage et aller à l'état 10
    "("           décalage et aller à l'état 11
    "-"           décalage et aller à l'état 12
    "nil"         décalage et aller à l'état 13
    "while"       décalage et aller à l'état 17
    "_lvalue"     décalage et aller à l'état 18
    "_namety"     décalage et aller à l'état 20

    exp     aller à l'état 43
    lvalue  aller à l'état 23
    typeid  aller à l'état 31


État 13

    8 exp: "nil" •

    $défaut  réduction par utilisation de la règle 8 (exp)


État 14

   60 fundec: "primitive" • "identifier" "(" tyfieldsbis ")"
   61       | "primitive" • "identifier" "(" tyfieldsbis ")" ":" typeid

    "identifier"  décalage et aller à l'état 44


État 15

   64 tydec: "type" • "identifier" "=" ty

    "identifier"  décalage et aller à l'état 45


État 16

   56 vardec: "var" • "identifier" ":=" exp
   57       | "var" • "identifier" ":" typeid ":=" exp

    "identifier"  décalage et aller à l'état 46


État 17

    7 exp: • "integer"
    8    | • "nil"
    9    | • "string"
   10    | • "identifier" "[" exp "]" "of" exp
   11    | • typeid "{" "}"
   12    | • typeid "{" record_r "}"
   13    | • lvalue
   14    | • "identifier" "(" ")"
   15    | • "identifier" "(" function_r ")"
   16    | • "-" exp
   17    | • exp "+" exp
   18    | • exp "<=" exp
   19    | • exp ">=" exp
   20    | • exp "<>" exp
   21    | • exp "-" exp
   22    | • exp "*" exp
   23    | • exp "/" exp
   24    | • exp "=" exp
   25    | • exp "<" exp
   26    | • exp ">" exp
   27    | • exp "&" exp
   28    | • exp "|" exp
   29    | • "(" exps ")"
   30    | • lvalue ":=" exp
   31    | • "if" exp "then" exp
   32    | • "if" exp "then" exp "else" exp
   33    | • "while" exp "do" exp
   33    | "while" • exp "do" exp
   34    | • "for" "identifier" ":=" exp "to" exp "do" exp
   35    | • "break"
   36    | • "let" chunks "in" exps "end"
   37    | • "_exp" "(" "integer" ")"
   42 lvalue: • "identifier"
   43       | • lvalue "." "identifier"
   44       | • lvalue "[" exp "]"
   45       | • "_lvalue" "(" "integer" ")"
   78 typeid: • "identifier"
   79       | • "_namety" "(" "integer" ")"

    "string"      décalage et aller à l'état 1
    "identifier"  décalage et aller à l'état 2
    "integer"     décalage et aller à l'état 3
    "break"       décalage et aller à l'état 4
    "_exp"        décalage et aller à l'état 5
    "for"         décalage et aller à l'état 6
    "if"          décalage et aller à l'état 8
    "let"         décalage et aller à l'état 10
    "("           décalage et aller à l'état 11
    "-"           décalage et aller à l'état 12
    "nil"         décalage et aller à l'état 13
    "while"       décalage et aller à l'état 17
    "_lvalue"     décalage et aller à l'état 18
    "_namety"     décalage et aller à l'état 20

    exp     aller à l'état 47
    lvalue  aller à l'état 23
    typeid  aller à l'état 31


État 18

   45 lvalue: "_lvalue" • "(" "integer" ")"

    "("  décalage et aller à l'état 48


État 19

   51 chunks: "_chunks" • "(" "integer" ")" chunks

    "("  décalage et aller à l'état 49


État 20

   79 typeid: "_namety" • "(" "integer" ")"

    "("  décalage et aller à l'état 50


État 21

    0 $accept: program • "end of file"

    "end of file"  décalage et aller à l'état 51


État 22

    1 program: exp •  ["end of file"]
   17 exp: exp • "+" exp
   18    | exp • "<=" exp
   19    | exp • ">=" exp
   20    | exp • "<>" exp
   21    | exp • "-" exp
   22    | exp • "*" exp
   23    | exp • "/" exp
   24    | exp • "=" exp
   25    | exp • "<" exp
   26    | exp • ">" exp
   27    | exp • "&" exp
   28    | exp • "|" exp

    "&"   décalage et aller à l'état 52
    "/"   décalage et aller à l'état 53
    "="   décalage et aller à l'état 54
    ">="  décalage et aller à l'état 55
    ">"   décalage et aller à l'état 56
    "<="  décalage et aller à l'état 57
    "<"   décalage et aller à l'état 58
    "-"   décalage et aller à l'état 59
    "<>"  décalage et aller à l'état 60
    "|"   décalage et aller à l'état 61
    "+"   décalage et aller à l'état 62
    "*"   décalage et aller à l'état 63

    $défaut  réduction par utilisation de la règle 1 (program)


État 23

   13 exp: lvalue •  ["end of file", "&", ",", "/", "do", "else", "end", "=", "function", ">=", ">", "import", "in", "<=", "<", "-", "<>", "|", "+", "primitive", "}", "]", ")", ";", "then", "*", "to", "type", "var", "_chunks"]
   30    | lvalue • ":=" exp
   43 lvalue: lvalue • "." "identifier"
   44       | lvalue • "[" exp "]"

    ":="  décalage et aller à l'état 64
    "."   décalage et aller à l'état 65
    "["   décalage et aller à l'état 66

    $défaut  réduction par utilisation de la règle 13 (exp)


État 24

    2 program: chunks •

    $défaut  réduction par utilisation de la règle 2 (program)


État 25

   46 chunks: ε •  ["end of file", "in"]
   47       | • tychunk chunks
   48       | • funchunk chunks
   49       | • varchunk chunks
   49       | varchunk • chunks
   50       | • "import" "string"
   51       | • "_chunks" "(" "integer" ")" chunks
   52 varchunk: • vardec
   53         | • vardec ";" varchunk
   54 funchunk: • fundec
   55         | • fundec funchunk
   56 vardec: • "var" "identifier" ":=" exp
   57       | • "var" "identifier" ":" typeid ":=" exp
   58 fundec: • "function" "identifier" "(" tyfieldsbis ")" "=" exp
   59       | • "function" "identifier" "(" tyfieldsbis ")" ":" typeid "=" exp
   60       | • "primitive" "identifier" "(" tyfieldsbis ")"
   61       | • "primitive" "identifier" "(" tyfieldsbis ")" ":" typeid
   62 tychunk: • tydec
   63        | • tydec tychunk
   64 tydec: • "type" "identifier" "=" ty

    "function"   décalage et aller à l'état 7
    "import"     décalage et aller à l'état 9
    "primitive"  décalage et aller à l'état 14
    "type"       décalage et aller à l'état 15
    "var"        décalage et aller à l'état 16
    "_chunks"    décalage et aller à l'état 19

    $défaut  réduction par utilisation de la règle 46 (chunks)

    chunks    aller à l'état 67
    varchunk  aller à l'état 25
    funchunk  aller à l'état 26
    vardec    aller à l'état 27
    fundec    aller à l'état 28
    tychunk   aller à l'état 29
    tydec     aller à l'état 30


État 26

   46 chunks: ε •  ["end of file", "in"]
   47       | • tychunk chunks
   48       | • funchunk chunks
   48       | funchunk • chunks
   49       | • varchunk chunks
   50       | • "import" "string"
   51       | • "_chunks" "(" "integer" ")" chunks
   52 varchunk: • vardec
   53         | • vardec ";" varchunk
   54 funchunk: • fundec
   55         | • fundec funchunk
   56 vardec: • "var" "identifier" ":=" exp
   57       | • "var" "identifier" ":" typeid ":=" exp
   58 fundec: • "function" "identifier" "(" tyfieldsbis ")" "=" exp
   59       | • "function" "identifier" "(" tyfieldsbis ")" ":" typeid "=" exp
   60       | • "primitive" "identifier" "(" tyfieldsbis ")"
   61       | • "primitive" "identifier" "(" tyfieldsbis ")" ":" typeid
   62 tychunk: • tydec
   63        | • tydec tychunk
   64 tydec: • "type" "identifier" "=" ty

    "function"   décalage et aller à l'état 7
    "import"     décalage et aller à l'état 9
    "primitive"  décalage et aller à l'état 14
    "type"       décalage et aller à l'état 15
    "var"        décalage et aller à l'état 16
    "_chunks"    décalage et aller à l'état 19

    $défaut  réduction par utilisation de la règle 46 (chunks)

    chunks    aller à l'état 68
    varchunk  aller à l'état 25
    funchunk  aller à l'état 26
    vardec    aller à l'état 27
    fundec    aller à l'état 28
    tychunk   aller à l'état 29
    tydec     aller à l'état 30


État 27

   52 varchunk: vardec •  ["end of file", "function", "import", "in", "primitive", "type", "var", "_chunks"]
   53         | vardec • ";" varchunk

    ";"  décalage et aller à l'état 69

    $défaut  réduction par utilisation de la règle 52 (varchunk)


État 28

   54 funchunk: • fundec
   54         | fundec •  ["end of file", "function", "import", "in", "primitive", "type", "var", "_chunks"]
   55         | • fundec funchunk
   55         | fundec • funchunk
   58 fundec: • "function" "identifier" "(" tyfieldsbis ")" "=" exp
   59       | • "function" "identifier" "(" tyfieldsbis ")" ":" typeid "=" exp
   60       | • "primitive" "identifier" "(" tyfieldsbis ")"
   61       | • "primitive" "identifier" "(" tyfieldsbis ")" ":" typeid

    $défaut  réduction par utilisation de la règle 54 (funchunk)

    funchunk  aller à l'état 70
    fundec    aller à l'état 28

    Conflit entre la règle 54 et le jeton "function" résolu par réduction ("function" < "_chunks").
    Conflit entre la règle 54 et le jeton "primitive" résolu par réduction ("primitive" < "_chunks").


État 29

   46 chunks: ε •  ["end of file", "in"]
   47       | • tychunk chunks
   47       | tychunk • chunks
   48       | • funchunk chunks
   49       | • varchunk chunks
   50       | • "import" "string"
   51       | • "_chunks" "(" "integer" ")" chunks
   52 varchunk: • vardec
   53         | • vardec ";" varchunk
   54 funchunk: • fundec
   55         | • fundec funchunk
   56 vardec: • "var" "identifier" ":=" exp
   57       | • "var" "identifier" ":" typeid ":=" exp
   58 fundec: • "function" "identifier" "(" tyfieldsbis ")" "=" exp
   59       | • "function" "identifier" "(" tyfieldsbis ")" ":" typeid "=" exp
   60       | • "primitive" "identifier" "(" tyfieldsbis ")"
   61       | • "primitive" "identifier" "(" tyfieldsbis ")" ":" typeid
   62 tychunk: • tydec
   63        | • tydec tychunk
   64 tydec: • "type" "identifier" "=" ty

    "function"   décalage et aller à l'état 7
    "import"     décalage et aller à l'état 9
    "primitive"  décalage et aller à l'état 14
    "type"       décalage et aller à l'état 15
    "var"        décalage et aller à l'état 16
    "_chunks"    décalage et aller à l'état 19

    $défaut  réduction par utilisation de la règle 46 (chunks)

    chunks    aller à l'état 71
    varchunk  aller à l'état 25
    funchunk  aller à l'état 26
    vardec    aller à l'état 27
    fundec    aller à l'état 28
    tychunk   aller à l'état 29
    tydec     aller à l'état 30


État 30

   62 tychunk: • tydec
   62        | tydec •  ["end of file", "function", "import", "in", "primitive", "var", "_chunks"]
   63        | • tydec tychunk
   63        | tydec • tychunk
   64 tydec: • "type" "identifier" "=" ty

    "type"  décalage et aller à l'état 15

    $défaut  réduction par utilisation de la règle 62 (tychunk)

    tychunk  aller à l'état 72
    tydec    aller à l'état 30

    Conflit entre la règle 62 et le jeton "type" résolu par décalage ("_chunks" < "type").


État 31

   11 exp: typeid • "{" "}"
   12    | typeid • "{" record_r "}"

    "{"  décalage et aller à l'état 73


État 32

    7 exp: • "integer"
    8    | • "nil"
    9    | • "string"
   10    | • "identifier" "[" exp "]" "of" exp
   10    | "identifier" "[" • exp "]" "of" exp
   11    | • typeid "{" "}"
   12    | • typeid "{" record_r "}"
   13    | • lvalue
   14    | • "identifier" "(" ")"
   15    | • "identifier" "(" function_r ")"
   16    | • "-" exp
   17    | • exp "+" exp
   18    | • exp "<=" exp
   19    | • exp ">=" exp
   20    | • exp "<>" exp
   21    | • exp "-" exp
   22    | • exp "*" exp
   23    | • exp "/" exp
   24    | • exp "=" exp
   25    | • exp "<" exp
   26    | • exp ">" exp
   27    | • exp "&" exp
   28    | • exp "|" exp
   29    | • "(" exps ")"
   30    | • lvalue ":=" exp
   31    | • "if" exp "then" exp
   32    | • "if" exp "then" exp "else" exp
   33    | • "while" exp "do" exp
   34    | • "for" "identifier" ":=" exp "to" exp "do" exp
   35    | • "break"
   36    | • "let" chunks "in" exps "end"
   37    | • "_exp" "(" "integer" ")"
   42 lvalue: • "identifier"
   43       | • lvalue "." "identifier"
   44       | • lvalue "[" exp "]"
   45       | • "_lvalue" "(" "integer" ")"
   78 typeid: • "identifier"
   79       | • "_namety" "(" "integer" ")"

    "string"      décalage et aller à l'état 1
    "identifier"  décalage et aller à l'état 2
    "integer"     décalage et aller à l'état 3
    "break"       décalage et aller à l'état 4
    "_exp"        décalage et aller à l'état 5
    "for"         décalage et aller à l'état 6
    "if"          décalage et aller à l'état 8
    "let"         décalage et aller à l'état 10
    "("           décalage et aller à l'état 11
    "-"           décalage et aller à l'état 12
    "nil"         décalage et aller à l'état 13
    "while"       décalage et aller à l'état 17
    "_lvalue"     décalage et aller à l'état 18
    "_namety"     décalage et aller à l'état 20

    exp     aller à l'état 74
    lvalue  aller à l'état 23
    typeid  aller à l'état 31


État 33

    7 exp: • "integer"
    8    | • "nil"
    9    | • "string"
   10    | • "identifier" "[" exp "]" "of" exp
   11    | • typeid "{" "}"
   12    | • typeid "{" record_r "}"
   13    | • lvalue
   14    | • "identifier" "(" ")"
   14    | "identifier" "(" • ")"
   15    | • "identifier" "(" function_r ")"
   15    | "identifier" "(" • function_r ")"
   16    | • "-" exp
   17    | • exp "+" exp
   18    | • exp "<=" exp
   19    | • exp ">=" exp
   20    | • exp "<>" exp
   21    | • exp "-" exp
   22    | • exp "*" exp
   23    | • exp "/" exp
   24    | • exp "=" exp
   25    | • exp "<" exp
   26    | • exp ">" exp
   27    | • exp "&" exp
   28    | • exp "|" exp
   29    | • "(" exps ")"
   30    | • lvalue ":=" exp
   31    | • "if" exp "then" exp
   32    | • "if" exp "then" exp "else" exp
   33    | • "while" exp "do" exp
   34    | • "for" "identifier" ":=" exp "to" exp "do" exp
   35    | • "break"
   36    | • "let" chunks "in" exps "end"
   37    | • "_exp" "(" "integer" ")"
   40 function_r: • function_r "," exp
   41           | • exp
   42 lvalue: • "identifier"
   43       | • lvalue "." "identifier"
   44       | • lvalue "[" exp "]"
   45       | • "_lvalue" "(" "integer" ")"
   78 typeid: • "identifier"
   79       | • "_namety" "(" "integer" ")"

    "string"      décalage et aller à l'état 1
    "identifier"  décalage et aller à l'état 2
    "integer"     décalage et aller à l'état 3
    "break"       décalage et aller à l'état 4
    "_exp"        décalage et aller à l'état 5
    "for"         décalage et aller à l'état 6
    "if"          décalage et aller à l'état 8
    "let"         décalage et aller à l'état 10
    "("           décalage et aller à l'état 11
    "-"           décalage et aller à l'état 12
    "nil"         décalage et aller à l'état 13
    ")"           décalage et aller à l'état 75
    "while"       décalage et aller à l'état 17
    "_lvalue"     décalage et aller à l'état 18
    "_namety"     décalage et aller à l'état 20

    exp         aller à l'état 76
    function_r  aller à l'état 77
    lvalue      aller à l'état 23
    typeid      aller à l'état 31


État 34

   37 exp: "_exp" "(" • "integer" ")"

    "integer"  décalage et aller à l'état 78


État 35

   34 exp: "for" "identifier" • ":=" exp "to" exp "do" exp

    ":="  décalage et aller à l'état 79


État 36

   58 fundec: "function" "identifier" • "(" tyfieldsbis ")" "=" exp
   59       | "function" "identifier" • "(" tyfieldsbis ")" ":" typeid "=" exp

    "("  décalage et aller à l'état 80


État 37

   17 exp: exp • "+" exp
   18    | exp • "<=" exp
   19    | exp • ">=" exp
   20    | exp • "<>" exp
   21    | exp • "-" exp
   22    | exp • "*" exp
   23    | exp • "/" exp
   24    | exp • "=" exp
   25    | exp • "<" exp
   26    | exp • ">" exp
   27    | exp • "&" exp
   28    | exp • "|" exp
   31    | "if" exp • "then" exp
   32    | "if" exp • "then" exp "else" exp

    "&"     décalage et aller à l'état 52
    "/"     décalage et aller à l'état 53
    "="     décalage et aller à l'état 54
    ">="    décalage et aller à l'état 55
    ">"     décalage et aller à l'état 56
    "<="    décalage et aller à l'état 57
    "<"     décalage et aller à l'état 58
    "-"     décalage et aller à l'état 59
    "<>"    décalage et aller à l'état 60
    "|"     décalage et aller à l'état 61
    "+"     décalage et aller à l'état 62
    "then"  décalage et aller à l'état 81
    "*"     décalage et aller à l'état 63


État 38

   50 chunks: "import" "string" •

    $défaut  réduction par utilisation de la règle 50 (chunks)


État 39

   36 exp: "let" chunks • "in" exps "end"

    "in"  décalage et aller à l'état 82


État 40

    5 exps.1: exps • ";" exp
   29 exp: "(" exps • ")"

    ")"  décalage et aller à l'état 83
    ";"  décalage et aller à l'état 84


État 41

    4 exps: exps.1 •

    $défaut  réduction par utilisation de la règle 4 (exps)


État 42

    6 exps.1: exp •  ["end", ")", ";"]
   17 exp: exp • "+" exp
   18    | exp • "<=" exp
   19    | exp • ">=" exp
   20    | exp • "<>" exp
   21    | exp • "-" exp
   22    | exp • "*" exp
   23    | exp • "/" exp
   24    | exp • "=" exp
   25    | exp • "<" exp
   26    | exp • ">" exp
   27    | exp • "&" exp
   28    | exp • "|" exp

    "&"   décalage et aller à l'état 52
    "/"   décalage et aller à l'état 53
    "="   décalage et aller à l'état 54
    ">="  décalage et aller à l'état 55
    ">"   décalage et aller à l'état 56
    "<="  décalage et aller à l'état 57
    "<"   décalage et aller à l'état 58
    "-"   décalage et aller à l'état 59
    "<>"  décalage et aller à l'état 60
    "|"   décalage et aller à l'état 61
    "+"   décalage et aller à l'état 62
    "*"   décalage et aller à l'état 63

    $défaut  réduction par utilisation de la règle 6 (exps.1)


État 43

   16 exp: "-" exp •  ["end of file", "&", ",", "do", "else", "end", "=", "function", ">=", ">", "import", "in", "<=", "<", "-", "<>", "|", "+", "primitive", "}", "]", ")", ";", "then", "to", "type", "var", "_chunks"]
   17    | exp • "+" exp
   18    | exp • "<=" exp
   19    | exp • ">=" exp
   20    | exp • "<>" exp
   21    | exp • "-" exp
   22    | exp • "*" exp
   23    | exp • "/" exp
   24    | exp • "=" exp
   25    | exp • "<" exp
   26    | exp • ">" exp
   27    | exp • "&" exp
   28    | exp • "|" exp

    "/"  décalage et aller à l'état 53
    "*"  décalage et aller à l'état 63

    $défaut  réduction par utilisation de la règle 16 (exp)

    Conflit entre la règle 16 et le jeton "&" résolu par réduction ("&" < "-").
    Conflit entre la règle 16 et le jeton "/" résolu par décalage ("-" < "/").
    Conflit entre la règle 16 et le jeton "=" résolu par réduction ("=" < "-").
    Conflit entre la règle 16 et le jeton ">=" résolu par réduction (">=" < "-").
    Conflit entre la règle 16 et le jeton ">" résolu par réduction (">" < "-").
    Conflit entre la règle 16 et le jeton "<=" résolu par réduction ("<=" < "-").
    Conflit entre la règle 16 et le jeton "<" résolu par réduction ("<" < "-").
    Conflit entre la règle 16 et le jeton "-" résolu par réduction (%left "-").
    Conflit entre la règle 16 et le jeton "<>" résolu par réduction ("<>" < "-").
    Conflit entre la règle 16 et le jeton "|" résolu par réduction ("|" < "-").
    Conflit entre la règle 16 et le jeton "+" résolu par réduction (%left "+").
    Conflit entre la règle 16 et le jeton "*" résolu par décalage ("-" < "*").


État 44

   60 fundec: "primitive" "identifier" • "(" tyfieldsbis ")"
   61       | "primitive" "identifier" • "(" tyfieldsbis ")" ":" typeid

    "("  décalage et aller à l'état 85


État 45

   64 tydec: "type" "identifier" • "=" ty

    "="  décalage et aller à l'état 86


État 46

   56 vardec: "var" "identifier" • ":=" exp
   57       | "var" "identifier" • ":" typeid ":=" exp

    ":="  décalage et aller à l'état 87
    ":"   décalage et aller à l'état 88


État 47

   17 exp: exp • "+" exp
   18    | exp • "<=" exp
   19    | exp • ">=" exp
   20    | exp • "<>" exp
   21    | exp • "-" exp
   22    | exp • "*" exp
   23    | exp • "/" exp
   24    | exp • "=" exp
   25    | exp • "<" exp
   26    | exp • ">" exp
   27    | exp • "&" exp
   28    | exp • "|" exp
   33    | "while" exp • "do" exp

    "&"   décalage et aller à l'état 52
    "/"   décalage et aller à l'état 53
    "do"  décalage et aller à l'état 89
    "="   décalage et aller à l'état 54
    ">="  décalage et aller à l'état 55
    ">"   décalage et aller à l'état 56
    "<="  décalage et aller à l'état 57
    "<"   décalage et aller à l'état 58
    "-"   décalage et aller à l'état 59
    "<>"  décalage et aller à l'état 60
    "|"   décalage et aller à l'état 61
    "+"   décalage et aller à l'état 62
    "*"   décalage et aller à l'état 63


État 48

   45 lvalue: "_lvalue" "(" • "integer" ")"

    "integer"  décalage et aller à l'état 90


État 49

   51 chunks: "_chunks" "(" • "integer" ")" chunks

    "integer"  décalage et aller à l'état 91


État 50

   79 typeid: "_namety" "(" • "integer" ")"

    "integer"  décalage et aller à l'état 92


État 51

    0 $accept: program "end of file" •

    $défaut  accepter


État 52

    7 exp: • "integer"
    8    | • "nil"
    9    | • "string"
   10    | • "identifier" "[" exp "]" "of" exp
   11    | • typeid "{" "}"
   12    | • typeid "{" record_r "}"
   13    | • lvalue
   14    | • "identifier" "(" ")"
   15    | • "identifier" "(" function_r ")"
   16    | • "-" exp
   17    | • exp "+" exp
   18    | • exp "<=" exp
   19    | • exp ">=" exp
   20    | • exp "<>" exp
   21    | • exp "-" exp
   22    | • exp "*" exp
   23    | • exp "/" exp
   24    | • exp "=" exp
   25    | • exp "<" exp
   26    | • exp ">" exp
   27    | • exp "&" exp
   27    | exp "&" • exp
   28    | • exp "|" exp
   29    | • "(" exps ")"
   30    | • lvalue ":=" exp
   31    | • "if" exp "then" exp
   32    | • "if" exp "then" exp "else" exp
   33    | • "while" exp "do" exp
   34    | • "for" "identifier" ":=" exp "to" exp "do" exp
   35    | • "break"
   36    | • "let" chunks "in" exps "end"
   37    | • "_exp" "(" "integer" ")"
   42 lvalue: • "identifier"
   43       | • lvalue "." "identifier"
   44       | • lvalue "[" exp "]"
   45       | • "_lvalue" "(" "integer" ")"
   78 typeid: • "identifier"
   79       | • "_namety" "(" "integer" ")"

    "string"      décalage et aller à l'état 1
    "identifier"  décalage et aller à l'état 2
    "integer"     décalage et aller à l'état 3
    "break"       décalage et aller à l'état 4
    "_exp"        décalage et aller à l'état 5
    "for"         décalage et aller à l'état 6
    "if"          décalage et aller à l'état 8
    "let"         décalage et aller à l'état 10
    "("           décalage et aller à l'état 11
    "-"           décalage et aller à l'état 12
    "nil"         décalage et aller à l'état 13
    "while"       décalage et aller à l'état 17
    "_lvalue"     décalage et aller à l'état 18
    "_namety"     décalage et aller à l'état 20

    exp     aller à l'état 93
    lvalue  aller à l'état 23
    typeid  aller à l'état 31


État 53

    7 exp: • "integer"
    8    | • "nil"
    9    | • "string"
   10    | • "identifier" "[" exp "]" "of" exp
   11    | • typeid "{" "}"
   12    | • typeid "{" record_r "}"
   13    | • lvalue
   14    | • "identifier" "(" ")"
   15    | • "identifier" "(" function_r ")"
   16    | • "-" exp
   17    | • exp "+" exp
   18    | • exp "<=" exp
   19    | • exp ">=" exp
   20    | • exp "<>" exp
   21    | • exp "-" exp
   22    | • exp "*" exp
   23    | • exp "/" exp
   23    | exp "/" • exp
   24    | • exp "=" exp
   25    | • exp "<" exp
   26    | • exp ">" exp
   27    | • exp "&" exp
   28    | • exp "|" exp
   29    | • "(" exps ")"
   30    | • lvalue ":=" exp
   31    | • "if" exp "then" exp
   32    | • "if" exp "then" exp "else" exp
   33    | • "while" exp "do" exp
   34    | • "for" "identifier" ":=" exp "to" exp "do" exp
   35    | • "break"
   36    | • "let" chunks "in" exps "end"
   37    | • "_exp" "(" "integer" ")"
   42 lvalue: • "identifier"
   43       | • lvalue "." "identifier"
   44       | • lvalue "[" exp "]"
   45       | • "_lvalue" "(" "integer" ")"
   78 typeid: • "identifier"
   79       | • "_namety" "(" "integer" ")"

    "string"      décalage et aller à l'état 1
    "identifier"  décalage et aller à l'état 2
    "integer"     décalage et aller à l'état 3
    "break"       décalage et aller à l'état 4
    "_exp"        décalage et aller à l'état 5
    "for"         décalage et aller à l'état 6
    "if"          décalage et aller à l'état 8
    "let"         décalage et aller à l'état 10
    "("           décalage et aller à l'état 11
    "-"           décalage et aller à l'état 12
    "nil"         décalage et aller à l'état 13
    "while"       décalage et aller à l'état 17
    "_lvalue"     décalage et aller à l'état 18
    "_namety"     décalage et aller à l'état 20

    exp     aller à l'état 94
    lvalue  aller à l'état 23
    typeid  aller à l'état 31


État 54

    7 exp: • "integer"
    8    | • "nil"
    9    | • "string"
   10    | • "identifier" "[" exp "]" "of" exp
   11    | • typeid "{" "}"
   12    | • typeid "{" record_r "}"
   13    | • lvalue
   14    | • "identifier" "(" ")"
   15    | • "identifier" "(" function_r ")"
   16    | • "-" exp
   17    | • exp "+" exp
   18    | • exp "<=" exp
   19    | • exp ">=" exp
   20    | • exp "<>" exp
   21    | • exp "-" exp
   22    | • exp "*" exp
   23    | • exp "/" exp
   24    | • exp "=" exp
   24    | exp "=" • exp
   25    | • exp "<" exp
   26    | • exp ">" exp
   27    | • exp "&" exp
   28    | • exp "|" exp
   29    | • "(" exps ")"
   30    | • lvalue ":=" exp
   31    | • "if" exp "then" exp
   32    | • "if" exp "then" exp "else" exp
   33    | • "while" exp "do" exp
   34    | • "for" "identifier" ":=" exp "to" exp "do" exp
   35    | • "break"
   36    | • "let" chunks "in" exps "end"
   37    | • "_exp" "(" "integer" ")"
   42 lvalue: • "identifier"
   43       | • lvalue "." "identifier"
   44       | • lvalue "[" exp "]"
   45       | • "_lvalue" "(" "integer" ")"
   78 typeid: • "identifier"
   79       | • "_namety" "(" "integer" ")"

    "string"      décalage et aller à l'état 1
    "identifier"  décalage et aller à l'état 2
    "integer"     décalage et aller à l'état 3
    "break"       décalage et aller à l'état 4
    "_exp"        décalage et aller à l'état 5
    "for"         décalage et aller à l'état 6
    "if"          décalage et aller à l'état 8
    "let"         décalage et aller à l'état 10
    "("           décalage et aller à l'état 11
    "-"           décalage et aller à l'état 12
    "nil"         décalage et aller à l'état 13
    "while"       décalage et aller à l'état 17
    "_lvalue"     décalage et aller à l'état 18
    "_namety"     décalage et aller à l'état 20

    exp     aller à l'état 95
    lvalue  aller à l'état 23
    typeid  aller à l'état 31


État 55

    7 exp: • "integer"
    8    | • "nil"
    9    | • "string"
   10    | • "identifier" "[" exp "]" "of" exp
   11    | • typeid "{" "}"
   12    | • typeid "{" record_r "}"
   13    | • lvalue
   14    | • "identifier" "(" ")"
   15    | • "identifier" "(" function_r ")"
   16    | • "-" exp
   17    | • exp "+" exp
   18    | • exp "<=" exp
   19    | • exp ">=" exp
   19    | exp ">=" • exp
   20    | • exp "<>" exp
   21    | • exp "-" exp
   22    | • exp "*" exp
   23    | • exp "/" exp
   24    | • exp "=" exp
   25    | • exp "<" exp
   26    | • exp ">" exp
   27    | • exp "&" exp
   28    | • exp "|" exp
   29    | • "(" exps ")"
   30    | • lvalue ":=" exp
   31    | • "if" exp "then" exp
   32    | • "if" exp "then" exp "else" exp
   33    | • "while" exp "do" exp
   34    | • "for" "identifier" ":=" exp "to" exp "do" exp
   35    | • "break"
   36    | • "let" chunks "in" exps "end"
   37    | • "_exp" "(" "integer" ")"
   42 lvalue: • "identifier"
   43       | • lvalue "." "identifier"
   44       | • lvalue "[" exp "]"
   45       | • "_lvalue" "(" "integer" ")"
   78 typeid: • "identifier"
   79       | • "_namety" "(" "integer" ")"

    "string"      décalage et aller à l'état 1
    "identifier"  décalage et aller à l'état 2
    "integer"     décalage et aller à l'état 3
    "break"       décalage et aller à l'état 4
    "_exp"        décalage et aller à l'état 5
    "for"         décalage et aller à l'état 6
    "if"          décalage et aller à l'état 8
    "let"         décalage et aller à l'état 10
    "("           décalage et aller à l'état 11
    "-"           décalage et aller à l'état 12
    "nil"         décalage et aller à l'état 13
    "while"       décalage et aller à l'état 17
    "_lvalue"     décalage et aller à l'état 18
    "_namety"     décalage et aller à l'état 20

    exp     aller à l'état 96
    lvalue  aller à l'état 23
    typeid  aller à l'état 31


État 56

    7 exp: • "integer"
    8    | • "nil"
    9    | • "string"
   10    | • "identifier" "[" exp "]" "of" exp
   11    | • typeid "{" "}"
   12    | • typeid "{" record_r "}"
   13    | • lvalue
   14    | • "identifier" "(" ")"
   15    | • "identifier" "(" function_r ")"
   16    | • "-" exp
   17    | • exp "+" exp
   18    | • exp "<=" exp
   19    | • exp ">=" exp
   20    | • exp "<>" exp
   21    | • exp "-" exp
   22    | • exp "*" exp
   23    | • exp "/" exp
   24    | • exp "=" exp
   25    | • exp "<" exp
   26    | • exp ">" exp
   26    | exp ">" • exp
   27    | • exp "&" exp
   28    | • exp "|" exp
   29    | • "(" exps ")"
   30    | • lvalue ":=" exp
   31    | • "if" exp "then" exp
   32    | • "if" exp "then" exp "else" exp
   33    | • "while" exp "do" exp
   34    | • "for" "identifier" ":=" exp "to" exp "do" exp
   35    | • "break"
   36    | • "let" chunks "in" exps "end"
   37    | • "_exp" "(" "integer" ")"
   42 lvalue: • "identifier"
   43       | • lvalue "." "identifier"
   44       | • lvalue "[" exp "]"
   45       | • "_lvalue" "(" "integer" ")"
   78 typeid: • "identifier"
   79       | • "_namety" "(" "integer" ")"

    "string"      décalage et aller à l'état 1
    "identifier"  décalage et aller à l'état 2
    "integer"     décalage et aller à l'état 3
    "break"       décalage et aller à l'état 4
    "_exp"        décalage et aller à l'état 5
    "for"         décalage et aller à l'état 6
    "if"          décalage et aller à l'état 8
    "let"         décalage et aller à l'état 10
    "("           décalage et aller à l'état 11
    "-"           décalage et aller à l'état 12
    "nil"         décalage et aller à l'état 13
    "while"       décalage et aller à l'état 17
    "_lvalue"     décalage et aller à l'état 18
    "_namety"     décalage et aller à l'état 20

    exp     aller à l'état 97
    lvalue  aller à l'état 23
    typeid  aller à l'état 31


État 57

    7 exp: • "integer"
    8    | • "nil"
    9    | • "string"
   10    | • "identifier" "[" exp "]" "of" exp
   11    | • typeid "{" "}"
   12    | • typeid "{" record_r "}"
   13    | • lvalue
   14    | • "identifier" "(" ")"
   15    | • "identifier" "(" function_r ")"
   16    | • "-" exp
   17    | • exp "+" exp
   18    | • exp "<=" exp
   18    | exp "<=" • exp
   19    | • exp ">=" exp
   20    | • exp "<>" exp
   21    | • exp "-" exp
   22    | • exp "*" exp
   23    | • exp "/" exp
   24    | • exp "=" exp
   25    | • exp "<" exp
   26    | • exp ">" exp
   27    | • exp "&" exp
   28    | • exp "|" exp
   29    | • "(" exps ")"
   30    | • lvalue ":=" exp
   31    | • "if" exp "then" exp
   32    | • "if" exp "then" exp "else" exp
   33    | • "while" exp "do" exp
   34    | • "for" "identifier" ":=" exp "to" exp "do" exp
   35    | • "break"
   36    | • "let" chunks "in" exps "end"
   37    | • "_exp" "(" "integer" ")"
   42 lvalue: • "identifier"
   43       | • lvalue "." "identifier"
   44       | • lvalue "[" exp "]"
   45       | • "_lvalue" "(" "integer" ")"
   78 typeid: • "identifier"
   79       | • "_namety" "(" "integer" ")"

    "string"      décalage et aller à l'état 1
    "identifier"  décalage et aller à l'état 2
    "integer"     décalage et aller à l'état 3
    "break"       décalage et aller à l'état 4
    "_exp"        décalage et aller à l'état 5
    "for"         décalage et aller à l'état 6
    "if"          décalage et aller à l'état 8
    "let"         décalage et aller à l'état 10
    "("           décalage et aller à l'état 11
    "-"           décalage et aller à l'état 12
    "nil"         décalage et aller à l'état 13
    "while"       décalage et aller à l'état 17
    "_lvalue"     décalage et aller à l'état 18
    "_namety"     décalage et aller à l'état 20

    exp     aller à l'état 98
    lvalue  aller à l'état 23
    typeid  aller à l'état 31


État 58

    7 exp: • "integer"
    8    | • "nil"
    9    | • "string"
   10    | • "identifier" "[" exp "]" "of" exp
   11    | • typeid "{" "}"
   12    | • typeid "{" record_r "}"
   13    | • lvalue
   14    | • "identifier" "(" ")"
   15    | • "identifier" "(" function_r ")"
   16    | • "-" exp
   17    | • exp "+" exp
   18    | • exp "<=" exp
   19    | • exp ">=" exp
   20    | • exp "<>" exp
   21    | • exp "-" exp
   22    | • exp "*" exp
   23    | • exp "/" exp
   24    | • exp "=" exp
   25    | • exp "<" exp
   25    | exp "<" • exp
   26    | • exp ">" exp
   27    | • exp "&" exp
   28    | • exp "|" exp
   29    | • "(" exps ")"
   30    | • lvalue ":=" exp
   31    | • "if" exp "then" exp
   32    | • "if" exp "then" exp "else" exp
   33    | • "while" exp "do" exp
   34    | • "for" "identifier" ":=" exp "to" exp "do" exp
   35    | • "break"
   36    | • "let" chunks "in" exps "end"
   37    | • "_exp" "(" "integer" ")"
   42 lvalue: • "identifier"
   43       | • lvalue "." "identifier"
   44       | • lvalue "[" exp "]"
   45       | • "_lvalue" "(" "integer" ")"
   78 typeid: • "identifier"
   79       | • "_namety" "(" "integer" ")"

    "string"      décalage et aller à l'état 1
    "identifier"  décalage et aller à l'état 2
    "integer"     décalage et aller à l'état 3
    "break"       décalage et aller à l'état 4
    "_exp"        décalage et aller à l'état 5
    "for"         décalage et aller à l'état 6
    "if"          décalage et aller à l'état 8
    "let"         décalage et aller à l'état 10
    "("           décalage et aller à l'état 11
    "-"           décalage et aller à l'état 12
    "nil"         décalage et aller à l'état 13
    "while"       décalage et aller à l'état 17
    "_lvalue"     décalage et aller à l'état 18
    "_namety"     décalage et aller à l'état 20

    exp     aller à l'état 99
    lvalue  aller à l'état 23
    typeid  aller à l'état 31


État 59

    7 exp: • "integer"
    8    | • "nil"
    9    | • "string"
   10    | • "identifier" "[" exp "]" "of" exp
   11    | • typeid "{" "}"
   12    | • typeid "{" record_r "}"
   13    | • lvalue
   14    | • "identifier" "(" ")"
   15    | • "identifier" "(" function_r ")"
   16    | • "-" exp
   17    | • exp "+" exp
   18    | • exp "<=" exp
   19    | • exp ">=" exp
   20    | • exp "<>" exp
   21    | • exp "-" exp
   21    | exp "-" • exp
   22    | • exp "*" exp
   23    | • exp "/" exp
   24    | • exp "=" exp
   25    | • exp "<" exp
   26    | • exp ">" exp
   27    | • exp "&" exp
   28    | • exp "|" exp
   29    | • "(" exps ")"
   30    | • lvalue ":=" exp
   31    | • "if" exp "then" exp
   32    | • "if" exp "then" exp "else" exp
   33    | • "while" exp "do" exp
   34    | • "for" "identifier" ":=" exp "to" exp "do" exp
   35    | • "break"
   36    | • "let" chunks "in" exps "end"
   37    | • "_exp" "(" "integer" ")"
   42 lvalue: • "identifier"
   43       | • lvalue "." "identifier"
   44       | • lvalue "[" exp "]"
   45       | • "_lvalue" "(" "integer" ")"
   78 typeid: • "identifier"
   79       | • "_namety" "(" "integer" ")"

    "string"      décalage et aller à l'état 1
    "identifier"  décalage et aller à l'état 2
    "integer"     décalage et aller à l'état 3
    "break"       décalage et aller à l'état 4
    "_exp"        décalage et aller à l'état 5
    "for"         décalage et aller à l'état 6
    "if"          décalage et aller à l'état 8
    "let"         décalage et aller à l'état 10
    "("           décalage et aller à l'état 11
    "-"           décalage et aller à l'état 12
    "nil"         décalage et aller à l'état 13
    "while"       décalage et aller à l'état 17
    "_lvalue"     décalage et aller à l'état 18
    "_namety"     décalage et aller à l'état 20

    exp     aller à l'état 100
    lvalue  aller à l'état 23
    typeid  aller à l'état 31


État 60

    7 exp: • "integer"
    8    | • "nil"
    9    | • "string"
   10    | • "identifier" "[" exp "]" "of" exp
   11    | • typeid "{" "}"
   12    | • typeid "{" record_r "}"
   13    | • lvalue
   14    | • "identifier" "(" ")"
   15    | • "identifier" "(" function_r ")"
   16    | • "-" exp
   17    | • exp "+" exp
   18    | • exp "<=" exp
   19    | • exp ">=" exp
   20    | • exp "<>" exp
   20    | exp "<>" • exp
   21    | • exp "-" exp
   22    | • exp "*" exp
   23    | • exp "/" exp
   24    | • exp "=" exp
   25    | • exp "<" exp
   26    | • exp ">" exp
   27    | • exp "&" exp
   28    | • exp "|" exp
   29    | • "(" exps ")"
   30    | • lvalue ":=" exp
   31    | • "if" exp "then" exp
   32    | • "if" exp "then" exp "else" exp
   33    | • "while" exp "do" exp
   34    | • "for" "identifier" ":=" exp "to" exp "do" exp
   35    | • "break"
   36    | • "let" chunks "in" exps "end"
   37    | • "_exp" "(" "integer" ")"
   42 lvalue: • "identifier"
   43       | • lvalue "." "identifier"
   44       | • lvalue "[" exp "]"
   45       | • "_lvalue" "(" "integer" ")"
   78 typeid: • "identifier"
   79       | • "_namety" "(" "integer" ")"

    "string"      décalage et aller à l'état 1
    "identifier"  décalage et aller à l'état 2
    "integer"     décalage et aller à l'état 3
    "break"       décalage et aller à l'état 4
    "_exp"        décalage et aller à l'état 5
    "for"         décalage et aller à l'état 6
    "if"          décalage et aller à l'état 8
    "let"         décalage et aller à l'état 10
    "("           décalage et aller à l'état 11
    "-"           décalage et aller à l'état 12
    "nil"         décalage et aller à l'état 13
    "while"       décalage et aller à l'état 17
    "_lvalue"     décalage et aller à l'état 18
    "_namety"     décalage et aller à l'état 20

    exp     aller à l'état 101
    lvalue  aller à l'état 23
    typeid  aller à l'état 31


État 61

    7 exp: • "integer"
    8    | • "nil"
    9    | • "string"
   10    | • "identifier" "[" exp "]" "of" exp
   11    | • typeid "{" "}"
   12    | • typeid "{" record_r "}"
   13    | • lvalue
   14    | • "identifier" "(" ")"
   15    | • "identifier" "(" function_r ")"
   16    | • "-" exp
   17    | • exp "+" exp
   18    | • exp "<=" exp
   19    | • exp ">=" exp
   20    | • exp "<>" exp
   21    | • exp "-" exp
   22    | • exp "*" exp
   23    | • exp "/" exp
   24    | • exp "=" exp
   25    | • exp "<" exp
   26    | • exp ">" exp
   27    | • exp "&" exp
   28    | • exp "|" exp
   28    | exp "|" • exp
   29    | • "(" exps ")"
   30    | • lvalue ":=" exp
   31    | • "if" exp "then" exp
   32    | • "if" exp "then" exp "else" exp
   33    | • "while" exp "do" exp
   34    | • "for" "identifier" ":=" exp "to" exp "do" exp
   35    | • "break"
   36    | • "let" chunks "in" exps "end"
   37    | • "_exp" "(" "integer" ")"
   42 lvalue: • "identifier"
   43       | • lvalue "." "identifier"
   44       | • lvalue "[" exp "]"
   45       | • "_lvalue" "(" "integer" ")"
   78 typeid: • "identifier"
   79       | • "_namety" "(" "integer" ")"

    "string"      décalage et aller à l'état 1
    "identifier"  décalage et aller à l'état 2
    "integer"     décalage et aller à l'état 3
    "break"       décalage et aller à l'état 4
    "_exp"        décalage et aller à l'état 5
    "for"         décalage et aller à l'état 6
    "if"          décalage et aller à l'état 8
    "let"         décalage et aller à l'état 10
    "("           décalage et aller à l'état 11
    "-"           décalage et aller à l'état 12
    "nil"         décalage et aller à l'état 13
    "while"       décalage et aller à l'état 17
    "_lvalue"     décalage et aller à l'état 18
    "_namety"     décalage et aller à l'état 20

    exp     aller à l'état 102
    lvalue  aller à l'état 23
    typeid  aller à l'état 31


État 62

    7 exp: • "integer"
    8    | • "nil"
    9    | • "string"
   10    | • "identifier" "[" exp "]" "of" exp
   11    | • typeid "{" "}"
   12    | • typeid "{" record_r "}"
   13    | • lvalue
   14    | • "identifier" "(" ")"
   15    | • "identifier" "(" function_r ")"
   16    | • "-" exp
   17    | • exp "+" exp
   17    | exp "+" • exp
   18    | • exp "<=" exp
   19    | • exp ">=" exp
   20    | • exp "<>" exp
   21    | • exp "-" exp
   22    | • exp "*" exp
   23    | • exp "/" exp
   24    | • exp "=" exp
   25    | • exp "<" exp
   26    | • exp ">" exp
   27    | • exp "&" exp
   28    | • exp "|" exp
   29    | • "(" exps ")"
   30    | • lvalue ":=" exp
   31    | • "if" exp "then" exp
   32    | • "if" exp "then" exp "else" exp
   33    | • "while" exp "do" exp
   34    | • "for" "identifier" ":=" exp "to" exp "do" exp
   35    | • "break"
   36    | • "let" chunks "in" exps "end"
   37    | • "_exp" "(" "integer" ")"
   42 lvalue: • "identifier"
   43       | • lvalue "." "identifier"
   44       | • lvalue "[" exp "]"
   45       | • "_lvalue" "(" "integer" ")"
   78 typeid: • "identifier"
   79       | • "_namety" "(" "integer" ")"

    "string"      décalage et aller à l'état 1
    "identifier"  décalage et aller à l'état 2
    "integer"     décalage et aller à l'état 3
    "break"       décalage et aller à l'état 4
    "_exp"        décalage et aller à l'état 5
    "for"         décalage et aller à l'état 6
    "if"          décalage et aller à l'état 8
    "let"         décalage et aller à l'état 10
    "("           décalage et aller à l'état 11
    "-"           décalage et aller à l'état 12
    "nil"         décalage et aller à l'état 13
    "while"       décalage et aller à l'état 17
    "_lvalue"     décalage et aller à l'état 18
    "_namety"     décalage et aller à l'état 20

    exp     aller à l'état 103
    lvalue  aller à l'état 23
    typeid  aller à l'état 31


État 63

    7 exp: • "integer"
    8    | • "nil"
    9    | • "string"
   10    | • "identifier" "[" exp "]" "of" exp
   11    | • typeid "{" "}"
   12    | • typeid "{" record_r "}"
   13    | • lvalue
   14    | • "identifier" "(" ")"
   15    | • "identifier" "(" function_r ")"
   16    | • "-" exp
   17    | • exp "+" exp
   18    | • exp "<=" exp
   19    | • exp ">=" exp
   20    | • exp "<>" exp
   21    | • exp "-" exp
   22    | • exp "*" exp
   22    | exp "*" • exp
   23    | • exp "/" exp
   24    | • exp "=" exp
   25    | • exp "<" exp
   26    | • exp ">" exp
   27    | • exp "&" exp
   28    | • exp "|" exp
   29    | • "(" exps ")"
   30    | • lvalue ":=" exp
   31    | • "if" exp "then" exp
   32    | • "if" exp "then" exp "else" exp
   33    | • "while" exp "do" exp
   34    | • "for" "identifier" ":=" exp "to" exp "do" exp
   35    | • "break"
   36    | • "let" chunks "in" exps "end"
   37    | • "_exp" "(" "integer" ")"
   42 lvalue: • "identifier"
   43       | • lvalue "." "identifier"
   44       | • lvalue "[" exp "]"
   45       | • "_lvalue" "(" "integer" ")"
   78 typeid: • "identifier"
   79       | • "_namety" "(" "integer" ")"

    "string"      décalage et aller à l'état 1
    "identifier"  décalage et aller à l'état 2
    "integer"     décalage et aller à l'état 3
    "break"       décalage et aller à l'état 4
    "_exp"        décalage et aller à l'état 5
    "for"         décalage et aller à l'état 6
    "if"          décalage et aller à l'état 8
    "let"         décalage et aller à l'état 10
    "("           décalage et aller à l'état 11
    "-"           décalage et aller à l'état 12
    "nil"         décalage et aller à l'état 13
    "while"       décalage et aller à l'état 17
    "_lvalue"     décalage et aller à l'état 18
    "_namety"     décalage et aller à l'état 20

    exp     aller à l'état 104
    lvalue  aller à l'état 23
    typeid  aller à l'état 31


État 64

    7 exp: • "integer"
    8    | • "nil"
    9    | • "string"
   10    | • "identifier" "[" exp "]" "of" exp
   11    | • typeid "{" "}"
   12    | • typeid "{" record_r "}"
   13    | • lvalue
   14    | • "identifier" "(" ")"
   15    | • "identifier" "(" function_r ")"
   16    | • "-" exp
   17    | • exp "+" exp
   18    | • exp "<=" exp
   19    | • exp ">=" exp
   20    | • exp "<>" exp
   21    | • exp "-" exp
   22    | • exp "*" exp
   23    | • exp "/" exp
   24    | • exp "=" exp
   25    | • exp "<" exp
   26    | • exp ">" exp
   27    | • exp "&" exp
   28    | • exp "|" exp
   29    | • "(" exps ")"
   30    | • lvalue ":=" exp
   30    | lvalue ":=" • exp
   31    | • "if" exp "then" exp
   32    | • "if" exp "then" exp "else" exp
   33    | • "while" exp "do" exp
   34    | • "for" "identifier" ":=" exp "to" exp "do" exp
   35    | • "break"
   36    | • "let" chunks "in" exps "end"
   37    | • "_exp" "(" "integer" ")"
   42 lvalue: • "identifier"
   43       | • lvalue "." "identifier"
   44       | • lvalue "[" exp "]"
   45       | • "_lvalue" "(" "integer" ")"
   78 typeid: • "identifier"
   79       | • "_namety" "(" "integer" ")"

    "string"      décalage et aller à l'état 1
    "identifier"  décalage et aller à l'état 2
    "integer"     décalage et aller à l'état 3
    "break"       décalage et aller à l'état 4
    "_exp"        décalage et aller à l'état 5
    "for"         décalage et aller à l'état 6
    "if"          décalage et aller à l'état 8
    "let"         décalage et aller à l'état 10
    "("           décalage et aller à l'état 11
    "-"           décalage et aller à l'état 12
    "nil"         décalage et aller à l'état 13
    "while"       décalage et aller à l'état 17
    "_lvalue"     décalage et aller à l'état 18
    "_namety"     décalage et aller à l'état 20

    exp     aller à l'état 105
    lvalue  aller à l'état 23
    typeid  aller à l'état 31


État 65

   43 lvalue: lvalue "." • "identifier"

    "identifier"  décalage et aller à l'état 106


État 66

    7 exp: • "integer"
    8    | • "nil"
    9    | • "string"
   10    | • "identifier" "[" exp "]" "of" exp
   11    | • typeid "{" "}"
   12    | • typeid "{" record_r "}"
   13    | • lvalue
   14    | • "identifier" "(" ")"
   15    | • "identifier" "(" function_r ")"
   16    | • "-" exp
   17    | • exp "+" exp
   18    | • exp "<=" exp
   19    | • exp ">=" exp
   20    | • exp "<>" exp
   21    | • exp "-" exp
   22    | • exp "*" exp
   23    | • exp "/" exp
   24    | • exp "=" exp
   25    | • exp "<" exp
   26    | • exp ">" exp
   27    | • exp "&" exp
   28    | • exp "|" exp
   29    | • "(" exps ")"
   30    | • lvalue ":=" exp
   31    | • "if" exp "then" exp
   32    | • "if" exp "then" exp "else" exp
   33    | • "while" exp "do" exp
   34    | • "for" "identifier" ":=" exp "to" exp "do" exp
   35    | • "break"
   36    | • "let" chunks "in" exps "end"
   37    | • "_exp" "(" "integer" ")"
   42 lvalue: • "identifier"
   43       | • lvalue "." "identifier"
   44       | • lvalue "[" exp "]"
   44       | lvalue "[" • exp "]"
   45       | • "_lvalue" "(" "integer" ")"
   78 typeid: • "identifier"
   79       | • "_namety" "(" "integer" ")"

    "string"      décalage et aller à l'état 1
    "identifier"  décalage et aller à l'état 2
    "integer"     décalage et aller à l'état 3
    "break"       décalage et aller à l'état 4
    "_exp"        décalage et aller à l'état 5
    "for"         décalage et aller à l'état 6
    "if"          décalage et aller à l'état 8
    "let"         décalage et aller à l'état 10
    "("           décalage et aller à l'état 11
    "-"           décalage et aller à l'état 12
    "nil"         décalage et aller à l'état 13
    "while"       décalage et aller à l'état 17
    "_lvalue"     décalage et aller à l'état 18
    "_namety"     décalage et aller à l'état 20

    exp     aller à l'état 107
    lvalue  aller à l'état 23
    typeid  aller à l'état 31


État 67

   49 chunks: varchunk chunks •

    $défaut  réduction par utilisation de la règle 49 (chunks)


État 68

   48 chunks: funchunk chunks •

    $défaut  réduction par utilisation de la règle 48 (chunks)


État 69

   52 varchunk: • vardec
   53         | • vardec ";" varchunk
   53         | vardec ";" • varchunk
   56 vardec: • "var" "identifier" ":=" exp
   57       | • "var" "identifier" ":" typeid ":=" exp

    "var"  décalage et aller à l'état 16

    varchunk  aller à l'état 108
    vardec    aller à l'état 27


État 70

   55 funchunk: fundec funchunk •

    $défaut  réduction par utilisation de la règle 55 (funchunk)


État 71

   47 chunks: tychunk chunks •

    $défaut  réduction par utilisation de la règle 47 (chunks)


État 72

   63 tychunk: tydec tychunk •

    $défaut  réduction par utilisation de la règle 63 (tychunk)


État 73

   11 exp: typeid "{" • "}"
   12    | typeid "{" • record_r "}"
   38 record_r: • record_r "," "identifier" "=" exp
   39         | • "identifier" "=" exp

    "identifier"  décalage et aller à l'état 109
    "}"           décalage et aller à l'état 110

    record_r  aller à l'état 111


État 74

   10 exp: "identifier" "[" exp • "]" "of" exp
   17    | exp • "+" exp
   18    | exp • "<=" exp
   19    | exp • ">=" exp
   20    | exp • "<>" exp
   21    | exp • "-" exp
   22    | exp • "*" exp
   23    | exp • "/" exp
   24    | exp • "=" exp
   25    | exp • "<" exp
   26    | exp • ">" exp
   27    | exp • "&" exp
   28    | exp • "|" exp

    "&"   décalage et aller à l'état 52
    "/"   décalage et aller à l'état 53
    "="   décalage et aller à l'état 54
    ">="  décalage et aller à l'état 55
    ">"   décalage et aller à l'état 56
    "<="  décalage et aller à l'état 57
    "<"   décalage et aller à l'état 58
    "-"   décalage et aller à l'état 59
    "<>"  décalage et aller à l'état 60
    "|"   décalage et aller à l'état 61
    "+"   décalage et aller à l'état 62
    "]"   décalage et aller à l'état 112
    "*"   décalage et aller à l'état 63


État 75

   14 exp: "identifier" "(" ")" •

    $défaut  réduction par utilisation de la règle 14 (exp)


État 76

   17 exp: exp • "+" exp
   18    | exp • "<=" exp
   19    | exp • ">=" exp
   20    | exp • "<>" exp
   21    | exp • "-" exp
   22    | exp • "*" exp
   23    | exp • "/" exp
   24    | exp • "=" exp
   25    | exp • "<" exp
   26    | exp • ">" exp
   27    | exp • "&" exp
   28    | exp • "|" exp
   41 function_r: exp •  [",", ")"]

    "&"   décalage et aller à l'état 52
    "/"   décalage et aller à l'état 53
    "="   décalage et aller à l'état 54
    ">="  décalage et aller à l'état 55
    ">"   décalage et aller à l'état 56
    "<="  décalage et aller à l'état 57
    "<"   décalage et aller à l'état 58
    "-"   décalage et aller à l'état 59
    "<>"  décalage et aller à l'état 60
    "|"   décalage et aller à l'état 61
    "+"   décalage et aller à l'état 62
    "*"   décalage et aller à l'état 63

    $défaut  réduction par utilisation de la règle 41 (function_r)


État 77

   15 exp: "identifier" "(" function_r • ")"
   40 function_r: function_r • "," exp

    ","  décalage et aller à l'état 113
    ")"  décalage et aller à l'état 114


État 78

   37 exp: "_exp" "(" "integer" • ")"

    ")"  décalage et aller à l'état 115


État 79

    7 exp: • "integer"
    8    | • "nil"
    9    | • "string"
   10    | • "identifier" "[" exp "]" "of" exp
   11    | • typeid "{" "}"
   12    | • typeid "{" record_r "}"
   13    | • lvalue
   14    | • "identifier" "(" ")"
   15    | • "identifier" "(" function_r ")"
   16    | • "-" exp
   17    | • exp "+" exp
   18    | • exp "<=" exp
   19    | • exp ">=" exp
   20    | • exp "<>" exp
   21    | • exp "-" exp
   22    | • exp "*" exp
   23    | • exp "/" exp
   24    | • exp "=" exp
   25    | • exp "<" exp
   26    | • exp ">" exp
   27    | • exp "&" exp
   28    | • exp "|" exp
   29    | • "(" exps ")"
   30    | • lvalue ":=" exp
   31    | • "if" exp "then" exp
   32    | • "if" exp "then" exp "else" exp
   33    | • "while" exp "do" exp
   34    | • "for" "identifier" ":=" exp "to" exp "do" exp
   34    | "for" "identifier" ":=" • exp "to" exp "do" exp
   35    | • "break"
   36    | • "let" chunks "in" exps "end"
   37    | • "_exp" "(" "integer" ")"
   42 lvalue: • "identifier"
   43       | • lvalue "." "identifier"
   44       | • lvalue "[" exp "]"
   45       | • "_lvalue" "(" "integer" ")"
   78 typeid: • "identifier"
   79       | • "_namety" "(" "integer" ")"

    "string"      décalage et aller à l'état 1
    "identifier"  décalage et aller à l'état 2
    "integer"     décalage et aller à l'état 3
    "break"       décalage et aller à l'état 4
    "_exp"        décalage et aller à l'état 5
    "for"         décalage et aller à l'état 6
    "if"          décalage et aller à l'état 8
    "let"         décalage et aller à l'état 10
    "("           décalage et aller à l'état 11
    "-"           décalage et aller à l'état 12
    "nil"         décalage et aller à l'état 13
    "while"       décalage et aller à l'état 17
    "_lvalue"     décalage et aller à l'état 18
    "_namety"     décalage et aller à l'état 20

    exp     aller à l'état 116
    lvalue  aller à l'état 23
    typeid  aller à l'état 31


État 80

   58 fundec: "function" "identifier" "(" • tyfieldsbis ")" "=" exp
   59       | "function" "identifier" "(" • tyfieldsbis ")" ":" typeid "=" exp
   73 tyfieldsbis: ε •  [")"]
   74            | • tyfieldsbis.1
   75 tyfieldsbis.1: • tyfieldsbis.1 "," tyfieldbis
   76              | • tyfieldbis
   77 tyfieldbis: • "identifier" ":" typeid

    "identifier"  décalage et aller à l'état 117

    $défaut  réduction par utilisation de la règle 73 (tyfieldsbis)

    tyfieldsbis    aller à l'état 118
    tyfieldsbis.1  aller à l'état 119
    tyfieldbis     aller à l'état 120


État 81

    7 exp: • "integer"
    8    | • "nil"
    9    | • "string"
   10    | • "identifier" "[" exp "]" "of" exp
   11    | • typeid "{" "}"
   12    | • typeid "{" record_r "}"
   13    | • lvalue
   14    | • "identifier" "(" ")"
   15    | • "identifier" "(" function_r ")"
   16    | • "-" exp
   17    | • exp "+" exp
   18    | • exp "<=" exp
   19    | • exp ">=" exp
   20    | • exp "<>" exp
   21    | • exp "-" exp
   22    | • exp "*" exp
   23    | • exp "/" exp
   24    | • exp "=" exp
   25    | • exp "<" exp
   26    | • exp ">" exp
   27    | • exp "&" exp
   28    | • exp "|" exp
   29    | • "(" exps ")"
   30    | • lvalue ":=" exp
   31    | • "if" exp "then" exp
   31    | "if" exp "then" • exp
   32    | • "if" exp "then" exp "else" exp
   32    | "if" exp "then" • exp "else" exp
   33    | • "while" exp "do" exp
   34    | • "for" "identifier" ":=" exp "to" exp "do" exp
   35    | • "break"
   36    | • "let" chunks "in" exps "end"
   37    | • "_exp" "(" "integer" ")"
   42 lvalue: • "identifier"
   43       | • lvalue "." "identifier"
   44       | • lvalue "[" exp "]"
   45       | • "_lvalue" "(" "integer" ")"
   78 typeid: • "identifier"
   79       | • "_namety" "(" "integer" ")"

    "string"      décalage et aller à l'état 1
    "identifier"  décalage et aller à l'état 2
    "integer"     décalage et aller à l'état 3
    "break"       décalage et aller à l'état 4
    "_exp"        décalage et aller à l'état 5
    "for"         décalage et aller à l'état 6
    "if"          décalage et aller à l'état 8
    "let"         décalage et aller à l'état 10
    "("           décalage et aller à l'état 11
    "-"           décalage et aller à l'état 12
    "nil"         décalage et aller à l'état 13
    "while"       décalage et aller à l'état 17
    "_lvalue"     décalage et aller à l'état 18
    "_namety"     décalage et aller à l'état 20

    exp     aller à l'état 121
    lvalue  aller à l'état 23
    typeid  aller à l'état 31


État 82

    3 exps: ε •  ["end", ";"]
    4     | • exps.1
    5 exps.1: • exps ";" exp
    6       | • exp
    7 exp: • "integer"
    8    | • "nil"
    9    | • "string"
   10    | • "identifier" "[" exp "]" "of" exp
   11    | • typeid "{" "}"
   12    | • typeid "{" record_r "}"
   13    | • lvalue
   14    | • "identifier" "(" ")"
   15    | • "identifier" "(" function_r ")"
   16    | • "-" exp
   17    | • exp "+" exp
   18    | • exp "<=" exp
   19    | • exp ">=" exp
   20    | • exp "<>" exp
   21    | • exp "-" exp
   22    | • exp "*" exp
   23    | • exp "/" exp
   24    | • exp "=" exp
   25    | • exp "<" exp
   26    | • exp ">" exp
   27    | • exp "&" exp
   28    | • exp "|" exp
   29    | • "(" exps ")"
   30    | • lvalue ":=" exp
   31    | • "if" exp "then" exp
   32    | • "if" exp "then" exp "else" exp
   33    | • "while" exp "do" exp
   34    | • "for" "identifier" ":=" exp "to" exp "do" exp
   35    | • "break"
   36    | • "let" chunks "in" exps "end"
   36    | "let" chunks "in" • exps "end"
   37    | • "_exp" "(" "integer" ")"
   42 lvalue: • "identifier"
   43       | • lvalue "." "identifier"
   44       | • lvalue "[" exp "]"
   45       | • "_lvalue" "(" "integer" ")"
   78 typeid: • "identifier"
   79       | • "_namety" "(" "integer" ")"

    "string"      décalage et aller à l'état 1
    "identifier"  décalage et aller à l'état 2
    "integer"     décalage et aller à l'état 3
    "break"       décalage et aller à l'état 4
    "_exp"        décalage et aller à l'état 5
    "for"         décalage et aller à l'état 6
    "if"          décalage et aller à l'état 8
    "let"         décalage et aller à l'état 10
    "("           décalage et aller à l'état 11
    "-"           décalage et aller à l'état 12
    "nil"         décalage et aller à l'état 13
    "while"       décalage et aller à l'état 17
    "_lvalue"     décalage et aller à l'état 18
    "_namety"     décalage et aller à l'état 20

    $défaut  réduction par utilisation de la règle 3 (exps)

    exps    aller à l'état 122
    exps.1  aller à l'état 41
    exp     aller à l'état 42
    lvalue  aller à l'état 23
    typeid  aller à l'état 31


État 83

   29 exp: "(" exps ")" •

    $défaut  réduction par utilisation de la règle 29 (exp)


État 84

    5 exps.1: exps ";" • exp
    7 exp: • "integer"
    8    | • "nil"
    9    | • "string"
   10    | • "identifier" "[" exp "]" "of" exp
   11    | • typeid "{" "}"
   12    | • typeid "{" record_r "}"
   13    | • lvalue
   14    | • "identifier" "(" ")"
   15    | • "identifier" "(" function_r ")"
   16    | • "-" exp
   17    | • exp "+" exp
   18    | • exp "<=" exp
   19    | • exp ">=" exp
   20    | • exp "<>" exp
   21    | • exp "-" exp
   22    | • exp "*" exp
   23    | • exp "/" exp
   24    | • exp "=" exp
   25    | • exp "<" exp
   26    | • exp ">" exp
   27    | • exp "&" exp
   28    | • exp "|" exp
   29    | • "(" exps ")"
   30    | • lvalue ":=" exp
   31    | • "if" exp "then" exp
   32    | • "if" exp "then" exp "else" exp
   33    | • "while" exp "do" exp
   34    | • "for" "identifier" ":=" exp "to" exp "do" exp
   35    | • "break"
   36    | • "let" chunks "in" exps "end"
   37    | • "_exp" "(" "integer" ")"
   42 lvalue: • "identifier"
   43       | • lvalue "." "identifier"
   44       | • lvalue "[" exp "]"
   45       | • "_lvalue" "(" "integer" ")"
   78 typeid: • "identifier"
   79       | • "_namety" "(" "integer" ")"

    "string"      décalage et aller à l'état 1
    "identifier"  décalage et aller à l'état 2
    "integer"     décalage et aller à l'état 3
    "break"       décalage et aller à l'état 4
    "_exp"        décalage et aller à l'état 5
    "for"         décalage et aller à l'état 6
    "if"          décalage et aller à l'état 8
    "let"         décalage et aller à l'état 10
    "("           décalage et aller à l'état 11
    "-"           décalage et aller à l'état 12
    "nil"         décalage et aller à l'état 13
    "while"       décalage et aller à l'état 17
    "_lvalue"     décalage et aller à l'état 18
    "_namety"     décalage et aller à l'état 20

    exp     aller à l'état 123
    lvalue  aller à l'état 23
    typeid  aller à l'état 31


État 85

   60 fundec: "primitive" "identifier" "(" • tyfieldsbis ")"
   61       | "primitive" "identifier" "(" • tyfieldsbis ")" ":" typeid
   73 tyfieldsbis: ε •  [")"]
   74            | • tyfieldsbis.1
   75 tyfieldsbis.1: • tyfieldsbis.1 "," tyfieldbis
   76              | • tyfieldbis
   77 tyfieldbis: • "identifier" ":" typeid

    "identifier"  décalage et aller à l'état 117

    $défaut  réduction par utilisation de la règle 73 (tyfieldsbis)

    tyfieldsbis    aller à l'état 124
    tyfieldsbis.1  aller à l'état 119
    tyfieldbis     aller à l'état 120


État 86

   64 tydec: "type" "identifier" "=" • ty
   65 ty: • typeid
   66   | • "{" tyfields "}"
   67   | • "array" "of" typeid
   78 typeid: • "identifier"
   79       | • "_namety" "(" "integer" ")"

    "identifier"  décalage et aller à l'état 125
    "array"       décalage et aller à l'état 126
    "{"           décalage et aller à l'état 127
    "_namety"     décalage et aller à l'état 20

    ty      aller à l'état 128
    typeid  aller à l'état 129


État 87

    7 exp: • "integer"
    8    | • "nil"
    9    | • "string"
   10    | • "identifier" "[" exp "]" "of" exp
   11    | • typeid "{" "}"
   12    | • typeid "{" record_r "}"
   13    | • lvalue
   14    | • "identifier" "(" ")"
   15    | • "identifier" "(" function_r ")"
   16    | • "-" exp
   17    | • exp "+" exp
   18    | • exp "<=" exp
   19    | • exp ">=" exp
   20    | • exp "<>" exp
   21    | • exp "-" exp
   22    | • exp "*" exp
   23    | • exp "/" exp
   24    | • exp "=" exp
   25    | • exp "<" exp
   26    | • exp ">" exp
   27    | • exp "&" exp
   28    | • exp "|" exp
   29    | • "(" exps ")"
   30    | • lvalue ":=" exp
   31    | • "if" exp "then" exp
   32    | • "if" exp "then" exp "else" exp
   33    | • "while" exp "do" exp
   34    | • "for" "identifier" ":=" exp "to" exp "do" exp
   35    | • "break"
   36    | • "let" chunks "in" exps "end"
   37    | • "_exp" "(" "integer" ")"
   42 lvalue: • "identifier"
   43       | • lvalue "." "identifier"
   44       | • lvalue "[" exp "]"
   45       | • "_lvalue" "(" "integer" ")"
   56 vardec: "var" "identifier" ":=" • exp
   78 typeid: • "identifier"
   79       | • "_namety" "(" "integer" ")"

    "string"      décalage et aller à l'état 1
    "identifier"  décalage et aller à l'état 2
    "integer"     décalage et aller à l'état 3
    "break"       décalage et aller à l'état 4
    "_exp"        décalage et aller à l'état 5
    "for"         décalage et aller à l'état 6
    "if"          décalage et aller à l'état 8
    "let"         décalage et aller à l'état 10
    "("           décalage et aller à l'état 11
    "-"           décalage et aller à l'état 12
    "nil"         décalage et aller à l'état 13
    "while"       décalage et aller à l'état 17
    "_lvalue"     décalage et aller à l'état 18
    "_namety"     décalage et aller à l'état 20

    exp     aller à l'état 130
    lvalue  aller à l'état 23
    typeid  aller à l'état 31


État 88

   57 vardec: "var" "identifier" ":" • typeid ":=" exp
   78 typeid: • "identifier"
   79       | • "_namety" "(" "integer" ")"

    "identifier"  décalage et aller à l'état 125
    "_namety"     décalage et aller à l'état 20

    typeid  aller à l'état 131


État 89

    7 exp: • "integer"
    8    | • "nil"
    9    | • "string"
   10    | • "identifier" "[" exp "]" "of" exp
   11    | • typeid "{" "}"
   12    | • typeid "{" record_r "}"
   13    | • lvalue
   14    | • "identifier" "(" ")"
   15    | • "identifier" "(" function_r ")"
   16    | • "-" exp
   17    | • exp "+" exp
   18    | • exp "<=" exp
   19    | • exp ">=" exp
   20    | • exp "<>" exp
   21    | • exp "-" exp
   22    | • exp "*" exp
   23    | • exp "/" exp
   24    | • exp "=" exp
   25    | • exp "<" exp
   26    | • exp ">" exp
   27    | • exp "&" exp
   28    | • exp "|" exp
   29    | • "(" exps ")"
   30    | • lvalue ":=" exp
   31    | • "if" exp "then" exp
   32    | • "if" exp "then" exp "else" exp
   33    | • "while" exp "do" exp
   33    | "while" exp "do" • exp
   34    | • "for" "identifier" ":=" exp "to" exp "do" exp
   35    | • "break"
   36    | • "let" chunks "in" exps "end"
   37    | • "_exp" "(" "integer" ")"
   42 lvalue: • "identifier"
   43       | • lvalue "." "identifier"
   44       | • lvalue "[" exp "]"
   45       | • "_lvalue" "(" "integer" ")"
   78 typeid: • "identifier"
   79       | • "_namety" "(" "integer" ")"

    "string"      décalage et aller à l'état 1
    "identifier"  décalage et aller à l'état 2
    "integer"     décalage et aller à l'état 3
    "break"       décalage et aller à l'état 4
    "_exp"        décalage et aller à l'état 5
    "for"         décalage et aller à l'état 6
    "if"          décalage et aller à l'état 8
    "let"         décalage et aller à l'état 10
    "("           décalage et aller à l'état 11
    "-"           décalage et aller à l'état 12
    "nil"         décalage et aller à l'état 13
    "while"       décalage et aller à l'état 17
    "_lvalue"     décalage et aller à l'état 18
    "_namety"     décalage et aller à l'état 20

    exp     aller à l'état 132
    lvalue  aller à l'état 23
    typeid  aller à l'état 31


État 90

   45 lvalue: "_lvalue" "(" "integer" • ")"

    ")"  décalage et aller à l'état 133


État 91

   51 chunks: "_chunks" "(" "integer" • ")" chunks

    ")"  décalage et aller à l'état 134


État 92

   79 typeid: "_namety" "(" "integer" • ")"

    ")"  décalage et aller à l'état 135


État 93

   17 exp: exp • "+" exp
   18    | exp • "<=" exp
   19    | exp • ">=" exp
   20    | exp • "<>" exp
   21    | exp • "-" exp
   22    | exp • "*" exp
   23    | exp • "/" exp
   24    | exp • "=" exp
   25    | exp • "<" exp
   26    | exp • ">" exp
   27    | exp • "&" exp
   27    | exp "&" exp •  ["end of file", "&", ",", "do", "else", "end", "function", "import", "in", "|", "primitive", "}", "]", ")", ";", "then", "to", "type", "var", "_chunks"]
   28    | exp • "|" exp

    "/"   décalage et aller à l'état 53
    "="   décalage et aller à l'état 54
    ">="  décalage et aller à l'état 55
    ">"   décalage et aller à l'état 56
    "<="  décalage et aller à l'état 57
    "<"   décalage et aller à l'état 58
    "-"   décalage et aller à l'état 59
    "<>"  décalage et aller à l'état 60
    "+"   décalage et aller à l'état 62
    "*"   décalage et aller à l'état 63

    $défaut  réduction par utilisation de la règle 27 (exp)

    Conflit entre la règle 27 et le jeton "&" résolu par réduction (%left "&").
    Conflit entre la règle 27 et le jeton "/" résolu par décalage ("&" < "/").
    Conflit entre la règle 27 et le jeton "=" résolu par décalage ("&" < "=").
    Conflit entre la règle 27 et le jeton ">=" résolu par décalage ("&" < ">=").
    Conflit entre la règle 27 et le jeton ">" résolu par décalage ("&" < ">").
    Conflit entre la règle 27 et le jeton "<=" résolu par décalage ("&" < "<=").
    Conflit entre la règle 27 et le jeton "<" résolu par décalage ("&" < "<").
    Conflit entre la règle 27 et le jeton "-" résolu par décalage ("&" < "-").
    Conflit entre la règle 27 et le jeton "<>" résolu par décalage ("&" < "<>").
    Conflit entre la règle 27 et le jeton "|" résolu par réduction ("|" < "&").
    Conflit entre la règle 27 et le jeton "+" résolu par décalage ("&" < "+").
    Conflit entre la règle 27 et le jeton "*" résolu par décalage ("&" < "*").


État 94

   17 exp: exp • "+" exp
   18    | exp • "<=" exp
   19    | exp • ">=" exp
   20    | exp • "<>" exp
   21    | exp • "-" exp
   22    | exp • "*" exp
   23    | exp • "/" exp
   23    | exp "/" exp •  ["end of file", "&", ",", "/", "do", "else", "end", "=", "function", ">=", ">", "import", "in", "<=", "<", "-", "<>", "|", "+", "primitive", "}", "]", ")", ";", "then", "*", "to", "type", "var", "_chunks"]
   24    | exp • "=" exp
   25    | exp • "<" exp
   26    | exp • ">" exp
   27    | exp • "&" exp
   28    | exp • "|" exp

    $défaut  réduction par utilisation de la règle 23 (exp)

    Conflit entre la règle 23 et le jeton "&" résolu par réduction ("&" < "/").
    Conflit entre la règle 23 et le jeton "/" résolu par réduction (%left "/").
    Conflit entre la règle 23 et le jeton "=" résolu par réduction ("=" < "/").
    Conflit entre la règle 23 et le jeton ">=" résolu par réduction (">=" < "/").
    Conflit entre la règle 23 et le jeton ">" résolu par réduction (">" < "/").
    Conflit entre la règle 23 et le jeton "<=" résolu par réduction ("<=" < "/").
    Conflit entre la règle 23 et le jeton "<" résolu par réduction ("<" < "/").
    Conflit entre la règle 23 et le jeton "-" résolu par réduction ("-" < "/").
    Conflit entre la règle 23 et le jeton "<>" résolu par réduction ("<>" < "/").
    Conflit entre la règle 23 et le jeton "|" résolu par réduction ("|" < "/").
    Conflit entre la règle 23 et le jeton "+" résolu par réduction ("+" < "/").
    Conflit entre la règle 23 et le jeton "*" résolu par réduction (%left "*").


État 95

   17 exp: exp • "+" exp
   18    | exp • "<=" exp
   19    | exp • ">=" exp
   20    | exp • "<>" exp
   21    | exp • "-" exp
   22    | exp • "*" exp
   23    | exp • "/" exp
   24    | exp • "=" exp
   24    | exp "=" exp •  ["end of file", "&", ",", "do", "else", "end", "function", "import", "in", "|", "primitive", "}", "]", ")", ";", "then", "to", "type", "var", "_chunks"]
   25    | exp • "<" exp
   26    | exp • ">" exp
   27    | exp • "&" exp
   28    | exp • "|" exp

    "/"  décalage et aller à l'état 53
    "-"  décalage et aller à l'état 59
    "+"  décalage et aller à l'état 62
    "*"  décalage et aller à l'état 63

    "="   erreur (non-associative)
    ">="  erreur (non-associative)
    ">"   erreur (non-associative)
    "<="  erreur (non-associative)
    "<"   erreur (non-associative)
    "<>"  erreur (non-associative)

    $défaut  réduction par utilisation de la règle 24 (exp)

    Conflit entre la règle 24 et le jeton "&" résolu par réduction ("&" < "=").
    Conflit entre la règle 24 et le jeton "/" résolu par décalage ("=" < "/").
    Conflit entre la règle 24 et le jeton "=" résolu comme étant une erreur (%nonassoc "=").
    Conflit entre la règle 24 et le jeton ">=" résolu comme étant une erreur (%nonassoc ">=").
    Conflit entre la règle 24 et le jeton ">" résolu comme étant une erreur (%nonassoc ">").
    Conflit entre la règle 24 et le jeton "<=" résolu comme étant une erreur (%nonassoc "<=").
    Conflit entre la règle 24 et le jeton "<" résolu comme étant une erreur (%nonassoc "<").
    Conflit entre la règle 24 et le jeton "-" résolu par décalage ("=" < "-").
    Conflit entre la règle 24 et le jeton "<>" résolu comme étant une erreur (%nonassoc "<>").
    Conflit entre la règle 24 et le jeton "|" résolu par réduction ("|" < "=").
    Conflit entre la règle 24 et le jeton "+" résolu par décalage ("=" < "+").
    Conflit entre la règle 24 et le jeton "*" résolu par décalage ("=" < "*").


État 96

   17 exp: exp • "+" exp
   18    | exp • "<=" exp
   19    | exp • ">=" exp
   19    | exp ">=" exp •  ["end of file", "&", ",", "do", "else", "end", "function", "import", "in", "|", "primitive", "}", "]", ")", ";", "then", "to", "type", "var", "_chunks"]
   20    | exp • "<>" exp
   21    | exp • "-" exp
   22    | exp • "*" exp
   23    | exp • "/" exp
   24    | exp • "=" exp
   25    | exp • "<" exp
   26    | exp • ">" exp
   27    | exp • "&" exp
   28    | exp • "|" exp

    "/"  décalage et aller à l'état 53
    "-"  décalage et aller à l'état 59
    "+"  décalage et aller à l'état 62
    "*"  décalage et aller à l'état 63

    "="   erreur (non-associative)
    ">="  erreur (non-associative)
    ">"   erreur (non-associative)
    "<="  erreur (non-associative)
    "<"   erreur (non-associative)
    "<>"  erreur (non-associative)

    $défaut  réduction par utilisation de la règle 19 (exp)

    Conflit entre la règle 19 et le jeton "&" résolu par réduction ("&" < ">=").
    Conflit entre la règle 19 et le jeton "/" résolu par décalage (">=" < "/").
    Conflit entre la règle 19 et le jeton "=" résolu comme étant une erreur (%nonassoc "=").
    Conflit entre la règle 19 et le jeton ">=" résolu comme étant une erreur (%nonassoc ">=").
    Conflit entre la règle 19 et le jeton ">" résolu comme étant une erreur (%nonassoc ">").
    Conflit entre la règle 19 et le jeton "<=" résolu comme étant une erreur (%nonassoc "<=").
    Conflit entre la règle 19 et le jeton "<" résolu comme étant une erreur (%nonassoc "<").
    Conflit entre la règle 19 et le jeton "-" résolu par décalage (">=" < "-").
    Conflit entre la règle 19 et le jeton "<>" résolu comme étant une erreur (%nonassoc "<>").
    Conflit entre la règle 19 et le jeton "|" résolu par réduction ("|" < ">=").
    Conflit entre la règle 19 et le jeton "+" résolu par décalage (">=" < "+").
    Conflit entre la règle 19 et le jeton "*" résolu par décalage (">=" < "*").


État 97

   17 exp: exp • "+" exp
   18    | exp • "<=" exp
   19    | exp • ">=" exp
   20    | exp • "<>" exp
   21    | exp • "-" exp
   22    | exp • "*" exp
   23    | exp • "/" exp
   24    | exp • "=" exp
   25    | exp • "<" exp
   26    | exp • ">" exp
   26    | exp ">" exp •  ["end of file", "&", ",", "do", "else", "end", "function", "import", "in", "|", "primitive", "}", "]", ")", ";", "then", "to", "type", "var", "_chunks"]
   27    | exp • "&" exp
   28    | exp • "|" exp

    "/"  décalage et aller à l'état 53
    "-"  décalage et aller à l'état 59
    "+"  décalage et aller à l'état 62
    "*"  décalage et aller à l'état 63

    "="   erreur (non-associative)
    ">="  erreur (non-associative)
    ">"   erreur (non-associative)
    "<="  erreur (non-associative)
    "<"   erreur (non-associative)
    "<>"  erreur (non-associative)

    $défaut  réduction par utilisation de la règle 26 (exp)

    Conflit entre la règle 26 et le jeton "&" résolu par réduction ("&" < ">").
    Conflit entre la règle 26 et le jeton "/" résolu par décalage (">" < "/").
    Conflit entre la règle 26 et le jeton "=" résolu comme étant une erreur (%nonassoc "=").
    Conflit entre la règle 26 et le jeton ">=" résolu comme étant une erreur (%nonassoc ">=").
    Conflit entre la règle 26 et le jeton ">" résolu comme étant une erreur (%nonassoc ">").
    Conflit entre la règle 26 et le jeton "<=" résolu comme étant une erreur (%nonassoc "<=").
    Conflit entre la règle 26 et le jeton "<" résolu comme étant une erreur (%nonassoc "<").
    Conflit entre la règle 26 et le jeton "-" résolu par décalage (">" < "-").
    Conflit entre la règle 26 et le jeton "<>" résolu comme étant une erreur (%nonassoc "<>").
    Conflit entre la règle 26 et le jeton "|" résolu par réduction ("|" < ">").
    Conflit entre la règle 26 et le jeton "+" résolu par décalage (">" < "+").
    Conflit entre la règle 26 et le jeton "*" résolu par décalage (">" < "*").


État 98

   17 exp: exp • "+" exp
   18    | exp • "<=" exp
   18    | exp "<=" exp •  ["end of file", "&", ",", "do", "else", "end", "function", "import", "in", "|", "primitive", "}", "]", ")", ";", "then", "to", "type", "var", "_chunks"]
   19    | exp • ">=" exp
   20    | exp • "<>" exp
   21    | exp • "-" exp
   22    | exp • "*" exp
   23    | exp • "/" exp
   24    | exp • "=" exp
   25    | exp • "<" exp
   26    | exp • ">" exp
   27    | exp • "&" exp
   28    | exp • "|" exp

    "/"  décalage et aller à l'état 53
    "-"  décalage et aller à l'état 59
    "+"  décalage et aller à l'état 62
    "*"  décalage et aller à l'état 63

    "="   erreur (non-associative)
    ">="  erreur (non-associative)
    ">"   erreur (non-associative)
    "<="  erreur (non-associative)
    "<"   erreur (non-associative)
    "<>"  erreur (non-associative)

    $défaut  réduction par utilisation de la règle 18 (exp)

    Conflit entre la règle 18 et le jeton "&" résolu par réduction ("&" < "<=").
    Conflit entre la règle 18 et le jeton "/" résolu par décalage ("<=" < "/").
    Conflit entre la règle 18 et le jeton "=" résolu comme étant une erreur (%nonassoc "=").
    Conflit entre la règle 18 et le jeton ">=" résolu comme étant une erreur (%nonassoc ">=").
    Conflit entre la règle 18 et le jeton ">" résolu comme étant une erreur (%nonassoc ">").
    Conflit entre la règle 18 et le jeton "<=" résolu comme étant une erreur (%nonassoc "<=").
    Conflit entre la règle 18 et le jeton "<" résolu comme étant une erreur (%nonassoc "<").
    Conflit entre la règle 18 et le jeton "-" résolu par décalage ("<=" < "-").
    Conflit entre la règle 18 et le jeton "<>" résolu comme étant une erreur (%nonassoc "<>").
    Conflit entre la règle 18 et le jeton "|" résolu par réduction ("|" < "<=").
    Conflit entre la règle 18 et le jeton "+" résolu par décalage ("<=" < "+").
    Conflit entre la règle 18 et le jeton "*" résolu par décalage ("<=" < "*").


État 99

   17 exp: exp • "+" exp
   18    | exp • "<=" exp
   19    | exp • ">=" exp
   20    | exp • "<>" exp
   21    | exp • "-" exp
   22    | exp • "*" exp
   23    | exp • "/" exp
   24    | exp • "=" exp
   25    | exp • "<" exp
   25    | exp "<" exp •  ["end of file", "&", ",", "do", "else", "end", "function", "import", "in", "|", "primitive", "}", "]", ")", ";", "then", "to", "type", "var", "_chunks"]
   26    | exp • ">" exp
   27    | exp • "&" exp
   28    | exp • "|" exp

    "/"  décalage et aller à l'état 53
    "-"  décalage et aller à l'état 59
    "+"  décalage et aller à l'état 62
    "*"  décalage et aller à l'état 63

    "="   erreur (non-associative)
    ">="  erreur (non-associative)
    ">"   erreur (non-associative)
    "<="  erreur (non-associative)
    "<"   erreur (non-associative)
    "<>"  erreur (non-associative)

    $défaut  réduction par utilisation de la règle 25 (exp)

    Conflit entre la règle 25 et le jeton "&" résolu par réduction ("&" < "<").
    Conflit entre la règle 25 et le jeton "/" résolu par décalage ("<" < "/").
    Conflit entre la règle 25 et le jeton "=" résolu comme étant une erreur (%nonassoc "=").
    Conflit entre la règle 25 et le jeton ">=" résolu comme étant une erreur (%nonassoc ">=").
    Conflit entre la règle 25 et le jeton ">" résolu comme étant une erreur (%nonassoc ">").
    Conflit entre la règle 25 et le jeton "<=" résolu comme étant une erreur (%nonassoc "<=").
    Conflit entre la règle 25 et le jeton "<" résolu comme étant une erreur (%nonassoc "<").
    Conflit entre la règle 25 et le jeton "-" résolu par décalage ("<" < "-").
    Conflit entre la règle 25 et le jeton "<>" résolu comme étant une erreur (%nonassoc "<>").
    Conflit entre la règle 25 et le jeton "|" résolu par réduction ("|" < "<").
    Conflit entre la règle 25 et le jeton "+" résolu par décalage ("<" < "+").
    Conflit entre la règle 25 et le jeton "*" résolu par décalage ("<" < "*").


État 100

   17 exp: exp • "+" exp
   18    | exp • "<=" exp
   19    | exp • ">=" exp
   20    | exp • "<>" exp
   21    | exp • "-" exp
   21    | exp "-" exp •  ["end of file", "&", ",", "do", "else", "end", "=", "function", ">=", ">", "import", "in", "<=", "<", "-", "<>", "|", "+", "primitive", "}", "]", ")", ";", "then", "to", "type", "var", "_chunks"]
   22    | exp • "*" exp
   23    | exp • "/" exp
   24    | exp • "=" exp
   25    | exp • "<" exp
   26    | exp • ">" exp
   27    | exp • "&" exp
   28    | exp • "|" exp

    "/"  décalage et aller à l'état 53
    "*"  décalage et aller à l'état 63

    $défaut  réduction par utilisation de la règle 21 (exp)

    Conflit entre la règle 21 et le jeton "&" résolu par réduction ("&" < "-").
    Conflit entre la règle 21 et le jeton "/" résolu par décalage ("-" < "/").
    Conflit entre la règle 21 et le jeton "=" résolu par réduction ("=" < "-").
    Conflit entre la règle 21 et le jeton ">=" résolu par réduction (">=" < "-").
    Conflit entre la règle 21 et le jeton ">" résolu par réduction (">" < "-").
    Conflit entre la règle 21 et le jeton "<=" résolu par réduction ("<=" < "-").
    Conflit entre la règle 21 et le jeton "<" résolu par réduction ("<" < "-").
    Conflit entre la règle 21 et le jeton "-" résolu par réduction (%left "-").
    Conflit entre la règle 21 et le jeton "<>" résolu par réduction ("<>" < "-").
    Conflit entre la règle 21 et le jeton "|" résolu par réduction ("|" < "-").
    Conflit entre la règle 21 et le jeton "+" résolu par réduction (%left "+").
    Conflit entre la règle 21 et le jeton "*" résolu par décalage ("-" < "*").


État 101

   17 exp: exp • "+" exp
   18    | exp • "<=" exp
   19    | exp • ">=" exp
   20    | exp • "<>" exp
   20    | exp "<>" exp •  ["end of file", "&", ",", "do", "else", "end", "function", "import", "in", "|", "primitive", "}", "]", ")", ";", "then", "to", "type", "var", "_chunks"]
   21    | exp • "-" exp
   22    | exp • "*" exp
   23    | exp • "/" exp
   24    | exp • "=" exp
   25    | exp • "<" exp
   26    | exp • ">" exp
   27    | exp • "&" exp
   28    | exp • "|" exp

    "/"  décalage et aller à l'état 53
    "-"  décalage et aller à l'état 59
    "+"  décalage et aller à l'état 62
    "*"  décalage et aller à l'état 63

    "="   erreur (non-associative)
    ">="  erreur (non-associative)
    ">"   erreur (non-associative)
    "<="  erreur (non-associative)
    "<"   erreur (non-associative)
    "<>"  erreur (non-associative)

    $défaut  réduction par utilisation de la règle 20 (exp)

    Conflit entre la règle 20 et le jeton "&" résolu par réduction ("&" < "<>").
    Conflit entre la règle 20 et le jeton "/" résolu par décalage ("<>" < "/").
    Conflit entre la règle 20 et le jeton "=" résolu comme étant une erreur (%nonassoc "=").
    Conflit entre la règle 20 et le jeton ">=" résolu comme étant une erreur (%nonassoc ">=").
    Conflit entre la règle 20 et le jeton ">" résolu comme étant une erreur (%nonassoc ">").
    Conflit entre la règle 20 et le jeton "<=" résolu comme étant une erreur (%nonassoc "<=").
    Conflit entre la règle 20 et le jeton "<" résolu comme étant une erreur (%nonassoc "<").
    Conflit entre la règle 20 et le jeton "-" résolu par décalage ("<>" < "-").
    Conflit entre la règle 20 et le jeton "<>" résolu comme étant une erreur (%nonassoc "<>").
    Conflit entre la règle 20 et le jeton "|" résolu par réduction ("|" < "<>").
    Conflit entre la règle 20 et le jeton "+" résolu par décalage ("<>" < "+").
    Conflit entre la règle 20 et le jeton "*" résolu par décalage ("<>" < "*").


État 102

   17 exp: exp • "+" exp
   18    | exp • "<=" exp
   19    | exp • ">=" exp
   20    | exp • "<>" exp
   21    | exp • "-" exp
   22    | exp • "*" exp
   23    | exp • "/" exp
   24    | exp • "=" exp
   25    | exp • "<" exp
   26    | exp • ">" exp
   27    | exp • "&" exp
   28    | exp • "|" exp
   28    | exp "|" exp •  ["end of file", ",", "do", "else", "end", "function", "import", "in", "|", "primitive", "}", "]", ")", ";", "then", "to", "type", "var", "_chunks"]

    "&"   décalage et aller à l'état 52
    "/"   décalage et aller à l'état 53
    "="   décalage et aller à l'état 54
    ">="  décalage et aller à l'état 55
    ">"   décalage et aller à l'état 56
    "<="  décalage et aller à l'état 57
    "<"   décalage et aller à l'état 58
    "-"   décalage et aller à l'état 59
    "<>"  décalage et aller à l'état 60
    "+"   décalage et aller à l'état 62
    "*"   décalage et aller à l'état 63

    $défaut  réduction par utilisation de la règle 28 (exp)

    Conflit entre la règle 28 et le jeton "&" résolu par décalage ("|" < "&").
    Conflit entre la règle 28 et le jeton "/" résolu par décalage ("|" < "/").
    Conflit entre la règle 28 et le jeton "=" résolu par décalage ("|" < "=").
    Conflit entre la règle 28 et le jeton ">=" résolu par décalage ("|" < ">=").
    Conflit entre la règle 28 et le jeton ">" résolu par décalage ("|" < ">").
    Conflit entre la règle 28 et le jeton "<=" résolu par décalage ("|" < "<=").
    Conflit entre la règle 28 et le jeton "<" résolu par décalage ("|" < "<").
    Conflit entre la règle 28 et le jeton "-" résolu par décalage ("|" < "-").
    Conflit entre la règle 28 et le jeton "<>" résolu par décalage ("|" < "<>").
    Conflit entre la règle 28 et le jeton "|" résolu par réduction (%left "|").
    Conflit entre la règle 28 et le jeton "+" résolu par décalage ("|" < "+").
    Conflit entre la règle 28 et le jeton "*" résolu par décalage ("|" < "*").


État 103

   17 exp: exp • "+" exp
   17    | exp "+" exp •  ["end of file", "&", ",", "do", "else", "end", "=", "function", ">=", ">", "import", "in", "<=", "<", "-", "<>", "|", "+", "primitive", "}", "]", ")", ";", "then", "to", "type", "var", "_chunks"]
   18    | exp • "<=" exp
   19    | exp • ">=" exp
   20    | exp • "<>" exp
   21    | exp • "-" exp
   22    | exp • "*" exp
   23    | exp • "/" exp
   24    | exp • "=" exp
   25    | exp • "<" exp
   26    | exp • ">" exp
   27    | exp • "&" exp
   28    | exp • "|" exp

    "/"  décalage et aller à l'état 53
    "*"  décalage et aller à l'état 63

    $défaut  réduction par utilisation de la règle 17 (exp)

    Conflit entre la règle 17 et le jeton "&" résolu par réduction ("&" < "+").
    Conflit entre la règle 17 et le jeton "/" résolu par décalage ("+" < "/").
    Conflit entre la règle 17 et le jeton "=" résolu par réduction ("=" < "+").
    Conflit entre la règle 17 et le jeton ">=" résolu par réduction (">=" < "+").
    Conflit entre la règle 17 et le jeton ">" résolu par réduction (">" < "+").
    Conflit entre la règle 17 et le jeton "<=" résolu par réduction ("<=" < "+").
    Conflit entre la règle 17 et le jeton "<" résolu par réduction ("<" < "+").
    Conflit entre la règle 17 et le jeton "-" résolu par réduction (%left "-").
    Conflit entre la règle 17 et le jeton "<>" résolu par réduction ("<>" < "+").
    Conflit entre la règle 17 et le jeton "|" résolu par réduction ("|" < "+").
    Conflit entre la règle 17 et le jeton "+" résolu par réduction (%left "+").
    Conflit entre la règle 17 et le jeton "*" résolu par décalage ("+" < "*").


État 104

   17 exp: exp • "+" exp
   18    | exp • "<=" exp
   19    | exp • ">=" exp
   20    | exp • "<>" exp
   21    | exp • "-" exp
   22    | exp • "*" exp
   22    | exp "*" exp •  ["end of file", "&", ",", "/", "do", "else", "end", "=", "function", ">=", ">", "import", "in", "<=", "<", "-", "<>", "|", "+", "primitive", "}", "]", ")", ";", "then", "*", "to", "type", "var", "_chunks"]
   23    | exp • "/" exp
   24    | exp • "=" exp
   25    | exp • "<" exp
   26    | exp • ">" exp
   27    | exp • "&" exp
   28    | exp • "|" exp

    $défaut  réduction par utilisation de la règle 22 (exp)

    Conflit entre la règle 22 et le jeton "&" résolu par réduction ("&" < "*").
    Conflit entre la règle 22 et le jeton "/" résolu par réduction (%left "/").
    Conflit entre la règle 22 et le jeton "=" résolu par réduction ("=" < "*").
    Conflit entre la règle 22 et le jeton ">=" résolu par réduction (">=" < "*").
    Conflit entre la règle 22 et le jeton ">" résolu par réduction (">" < "*").
    Conflit entre la règle 22 et le jeton "<=" résolu par réduction ("<=" < "*").
    Conflit entre la règle 22 et le jeton "<" résolu par réduction ("<" < "*").
    Conflit entre la règle 22 et le jeton "-" résolu par réduction ("-" < "*").
    Conflit entre la règle 22 et le jeton "<>" résolu par réduction ("<>" < "*").
    Conflit entre la règle 22 et le jeton "|" résolu par réduction ("|" < "*").
    Conflit entre la règle 22 et le jeton "+" résolu par réduction ("+" < "*").
    Conflit entre la règle 22 et le jeton "*" résolu par réduction (%left "*").


État 105

   17 exp: exp • "+" exp
   18    | exp • "<=" exp
   19    | exp • ">=" exp
   20    | exp • "<>" exp
   21    | exp • "-" exp
   22    | exp • "*" exp
   23    | exp • "/" exp
   24    | exp • "=" exp
   25    | exp • "<" exp
   26    | exp • ">" exp
   27    | exp • "&" exp
   28    | exp • "|" exp
   30    | lvalue ":=" exp •  ["end of file", ",", "do", "else", "end", "function", "import", "in", "primitive", "}", "]", ")", ";", "then", "to", "type", "var", "_chunks"]

    "&"   décalage et aller à l'état 52
    "/"   décalage et aller à l'état 53
    "="   décalage et aller à l'état 54
    ">="  décalage et aller à l'état 55
    ">"   décalage et aller à l'état 56
    "<="  décalage et aller à l'état 57
    "<"   décalage et aller à l'état 58
    "-"   décalage et aller à l'état 59
    "<>"  décalage et aller à l'état 60
    "|"   décalage et aller à l'état 61
    "+"   décalage et aller à l'état 62
    "*"   décalage et aller à l'état 63

    $défaut  réduction par utilisation de la règle 30 (exp)

    Conflit entre la règle 30 et le jeton "&" résolu par décalage (":=" < "&").
    Conflit entre la règle 30 et le jeton "/" résolu par décalage (":=" < "/").
    Conflit entre la règle 30 et le jeton "=" résolu par décalage (":=" < "=").
    Conflit entre la règle 30 et le jeton ">=" résolu par décalage (":=" < ">=").
    Conflit entre la règle 30 et le jeton ">" résolu par décalage (":=" < ">").
    Conflit entre la règle 30 et le jeton "<=" résolu par décalage (":=" < "<=").
    Conflit entre la règle 30 et le jeton "<" résolu par décalage (":=" < "<").
    Conflit entre la règle 30 et le jeton "-" résolu par décalage (":=" < "-").
    Conflit entre la règle 30 et le jeton "<>" résolu par décalage (":=" < "<>").
    Conflit entre la règle 30 et le jeton "|" résolu par décalage (":=" < "|").
    Conflit entre la règle 30 et le jeton "+" résolu par décalage (":=" < "+").
    Conflit entre la règle 30 et le jeton "*" résolu par décalage (":=" < "*").


État 106

   43 lvalue: lvalue "." "identifier" •

    $défaut  réduction par utilisation de la règle 43 (lvalue)


État 107

   17 exp: exp • "+" exp
   18    | exp • "<=" exp
   19    | exp • ">=" exp
   20    | exp • "<>" exp
   21    | exp • "-" exp
   22    | exp • "*" exp
   23    | exp • "/" exp
   24    | exp • "=" exp
   25    | exp • "<" exp
   26    | exp • ">" exp
   27    | exp • "&" exp
   28    | exp • "|" exp
   44 lvalue: lvalue "[" exp • "]"

    "&"   décalage et aller à l'état 52
    "/"   décalage et aller à l'état 53
    "="   décalage et aller à l'état 54
    ">="  décalage et aller à l'état 55
    ">"   décalage et aller à l'état 56
    "<="  décalage et aller à l'état 57
    "<"   décalage et aller à l'état 58
    "-"   décalage et aller à l'état 59
    "<>"  décalage et aller à l'état 60
    "|"   décalage et aller à l'état 61
    "+"   décalage et aller à l'état 62
    "]"   décalage et aller à l'état 136
    "*"   décalage et aller à l'état 63


État 108

   53 varchunk: vardec ";" varchunk •

    $défaut  réduction par utilisation de la règle 53 (varchunk)


État 109

   39 record_r: "identifier" • "=" exp

    "="  décalage et aller à l'état 137


État 110

   11 exp: typeid "{" "}" •

    $défaut  réduction par utilisation de la règle 11 (exp)


État 111

   12 exp: typeid "{" record_r • "}"
   38 record_r: record_r • "," "identifier" "=" exp

    ","  décalage et aller à l'état 138
    "}"  décalage et aller à l'état 139


État 112

   10 exp: "identifier" "[" exp "]" • "of" exp

    "of"  décalage et aller à l'état 140


État 113

    7 exp: • "integer"
    8    | • "nil"
    9    | • "string"
   10    | • "identifier" "[" exp "]" "of" exp
   11    | • typeid "{" "}"
   12    | • typeid "{" record_r "}"
   13    | • lvalue
   14    | • "identifier" "(" ")"
   15    | • "identifier" "(" function_r ")"
   16    | • "-" exp
   17    | • exp "+" exp
   18    | • exp "<=" exp
   19    | • exp ">=" exp
   20    | • exp "<>" exp
   21    | • exp "-" exp
   22    | • exp "*" exp
   23    | • exp "/" exp
   24    | • exp "=" exp
   25    | • exp "<" exp
   26    | • exp ">" exp
   27    | • exp "&" exp
   28    | • exp "|" exp
   29    | • "(" exps ")"
   30    | • lvalue ":=" exp
   31    | • "if" exp "then" exp
   32    | • "if" exp "then" exp "else" exp
   33    | • "while" exp "do" exp
   34    | • "for" "identifier" ":=" exp "to" exp "do" exp
   35    | • "break"
   36    | • "let" chunks "in" exps "end"
   37    | • "_exp" "(" "integer" ")"
   40 function_r: function_r "," • exp
   42 lvalue: • "identifier"
   43       | • lvalue "." "identifier"
   44       | • lvalue "[" exp "]"
   45       | • "_lvalue" "(" "integer" ")"
   78 typeid: • "identifier"
   79       | • "_namety" "(" "integer" ")"

    "string"      décalage et aller à l'état 1
    "identifier"  décalage et aller à l'état 2
    "integer"     décalage et aller à l'état 3
    "break"       décalage et aller à l'état 4
    "_exp"        décalage et aller à l'état 5
    "for"         décalage et aller à l'état 6
    "if"          décalage et aller à l'état 8
    "let"         décalage et aller à l'état 10
    "("           décalage et aller à l'état 11
    "-"           décalage et aller à l'état 12
    "nil"         décalage et aller à l'état 13
    "while"       décalage et aller à l'état 17
    "_lvalue"     décalage et aller à l'état 18
    "_namety"     décalage et aller à l'état 20

    exp     aller à l'état 141
    lvalue  aller à l'état 23
    typeid  aller à l'état 31


État 114

   15 exp: "identifier" "(" function_r ")" •

    $défaut  réduction par utilisation de la règle 15 (exp)


État 115

   37 exp: "_exp" "(" "integer" ")" •

    $défaut  réduction par utilisation de la règle 37 (exp)


État 116

   17 exp: exp • "+" exp
   18    | exp • "<=" exp
   19    | exp • ">=" exp
   20    | exp • "<>" exp
   21    | exp • "-" exp
   22    | exp • "*" exp
   23    | exp • "/" exp
   24    | exp • "=" exp
   25    | exp • "<" exp
   26    | exp • ">" exp
   27    | exp • "&" exp
   28    | exp • "|" exp
   34    | "for" "identifier" ":=" exp • "to" exp "do" exp

    "&"   décalage et aller à l'état 52
    "/"   décalage et aller à l'état 53
    "="   décalage et aller à l'état 54
    ">="  décalage et aller à l'état 55
    ">"   décalage et aller à l'état 56
    "<="  décalage et aller à l'état 57
    "<"   décalage et aller à l'état 58
    "-"   décalage et aller à l'état 59
    "<>"  décalage et aller à l'état 60
    "|"   décalage et aller à l'état 61
    "+"   décalage et aller à l'état 62
    "*"   décalage et aller à l'état 63
    "to"  décalage et aller à l'état 142


État 117

   77 tyfieldbis: "identifier" • ":" typeid

    ":"  décalage et aller à l'état 143


État 118

   58 fundec: "function" "identifier" "(" tyfieldsbis • ")" "=" exp
   59       | "function" "identifier" "(" tyfieldsbis • ")" ":" typeid "=" exp

    ")"  décalage et aller à l'état 144


État 119

   74 tyfieldsbis: tyfieldsbis.1 •  [")"]
   75 tyfieldsbis.1: tyfieldsbis.1 • "," tyfieldbis

    ","  décalage et aller à l'état 145

    $défaut  réduction par utilisation de la règle 74 (tyfieldsbis)


État 120

   76 tyfieldsbis.1: tyfieldbis •

    $défaut  réduction par utilisation de la règle 76 (tyfieldsbis.1)


État 121

   17 exp: exp • "+" exp
   18    | exp • "<=" exp
   19    | exp • ">=" exp
   20    | exp • "<>" exp
   21    | exp • "-" exp
   22    | exp • "*" exp
   23    | exp • "/" exp
   24    | exp • "=" exp
   25    | exp • "<" exp
   26    | exp • ">" exp
   27    | exp • "&" exp
   28    | exp • "|" exp
   31    | "if" exp "then" exp •  ["end of file", ",", "do", "end", "function", "import", "in", "primitive", "}", "]", ")", ";", "then", "to", "type", "var", "_chunks"]
   32    | "if" exp "then" exp • "else" exp

    "&"     décalage et aller à l'état 52
    "/"     décalage et aller à l'état 53
    "else"  décalage et aller à l'état 146
    "="     décalage et aller à l'état 54
    ">="    décalage et aller à l'état 55
    ">"     décalage et aller à l'état 56
    "<="    décalage et aller à l'état 57
    "<"     décalage et aller à l'état 58
    "-"     décalage et aller à l'état 59
    "<>"    décalage et aller à l'état 60
    "|"     décalage et aller à l'état 61
    "+"     décalage et aller à l'état 62
    "*"     décalage et aller à l'état 63

    $défaut  réduction par utilisation de la règle 31 (exp)

    Conflit entre la règle 31 et le jeton "&" résolu par décalage ("then" < "&").
    Conflit entre la règle 31 et le jeton "/" résolu par décalage ("then" < "/").
    Conflit entre la règle 31 et le jeton "else" résolu par décalage (%right "else").
    Conflit entre la règle 31 et le jeton "=" résolu par décalage ("then" < "=").
    Conflit entre la règle 31 et le jeton ">=" résolu par décalage ("then" < ">=").
    Conflit entre la règle 31 et le jeton ">" résolu par décalage ("then" < ">").
    Conflit entre la règle 31 et le jeton "<=" résolu par décalage ("then" < "<=").
    Conflit entre la règle 31 et le jeton "<" résolu par décalage ("then" < "<").
    Conflit entre la règle 31 et le jeton "-" résolu par décalage ("then" < "-").
    Conflit entre la règle 31 et le jeton "<>" résolu par décalage ("then" < "<>").
    Conflit entre la règle 31 et le jeton "|" résolu par décalage ("then" < "|").
    Conflit entre la règle 31 et le jeton "+" résolu par décalage ("then" < "+").
    Conflit entre la règle 31 et le jeton "*" résolu par décalage ("then" < "*").


État 122

    5 exps.1: exps • ";" exp
   36 exp: "let" chunks "in" exps • "end"

    "end"  décalage et aller à l'état 147
    ";"    décalage et aller à l'état 84


État 123

    5 exps.1: exps ";" exp •  ["end", ")", ";"]
   17 exp: exp • "+" exp
   18    | exp • "<=" exp
   19    | exp • ">=" exp
   20    | exp • "<>" exp
   21    | exp • "-" exp
   22    | exp • "*" exp
   23    | exp • "/" exp
   24    | exp • "=" exp
   25    | exp • "<" exp
   26    | exp • ">" exp
   27    | exp • "&" exp
   28    | exp • "|" exp

    "&"   décalage et aller à l'état 52
    "/"   décalage et aller à l'état 53
    "="   décalage et aller à l'état 54
    ">="  décalage et aller à l'état 55
    ">"   décalage et aller à l'état 56
    "<="  décalage et aller à l'état 57
    "<"   décalage et aller à l'état 58
    "-"   décalage et aller à l'état 59
    "<>"  décalage et aller à l'état 60
    "|"   décalage et aller à l'état 61
    "+"   décalage et aller à l'état 62
    "*"   décalage et aller à l'état 63

    $défaut  réduction par utilisation de la règle 5 (exps.1)


État 124

   60 fundec: "primitive" "identifier" "(" tyfieldsbis • ")"
   61       | "primitive" "identifier" "(" tyfieldsbis • ")" ":" typeid

    ")"  décalage et aller à l'état 148


État 125

   78 typeid: "identifier" •

    $défaut  réduction par utilisation de la règle 78 (typeid)


État 126

   67 ty: "array" • "of" typeid

    "of"  décalage et aller à l'état 149


État 127

   66 ty: "{" • tyfields "}"
   68 tyfields: ε •  ["}"]
   69         | • tyfields.1
   70 tyfields.1: • tyfields.1 "," tyfield
   71           | • tyfield
   72 tyfield: • "identifier" ":" typeid

    "identifier"  décalage et aller à l'état 150

    $défaut  réduction par utilisation de la règle 68 (tyfields)

    tyfields    aller à l'état 151
    tyfields.1  aller à l'état 152
    tyfield     aller à l'état 153


État 128

   64 tydec: "type" "identifier" "=" ty •

    $défaut  réduction par utilisation de la règle 64 (tydec)


État 129

   65 ty: typeid •

    $défaut  réduction par utilisation de la règle 65 (ty)


État 130

   17 exp: exp • "+" exp
   18    | exp • "<=" exp
   19    | exp • ">=" exp
   20    | exp • "<>" exp
   21    | exp • "-" exp
   22    | exp • "*" exp
   23    | exp • "/" exp
   24    | exp • "=" exp
   25    | exp • "<" exp
   26    | exp • ">" exp
   27    | exp • "&" exp
   28    | exp • "|" exp
   56 vardec: "var" "identifier" ":=" exp •  ["end of file", "function", "import", "in", "primitive", ";", "type", "var", "_chunks"]

    "&"   décalage et aller à l'état 52
    "/"   décalage et aller à l'état 53
    "="   décalage et aller à l'état 54
    ">="  décalage et aller à l'état 55
    ">"   décalage et aller à l'état 56
    "<="  décalage et aller à l'état 57
    "<"   décalage et aller à l'état 58
    "-"   décalage et aller à l'état 59
    "<>"  décalage et aller à l'état 60
    "|"   décalage et aller à l'état 61
    "+"   décalage et aller à l'état 62
    "*"   décalage et aller à l'état 63

    $défaut  réduction par utilisation de la règle 56 (vardec)


État 131

   57 vardec: "var" "identifier" ":" typeid • ":=" exp

    ":="  décalage et aller à l'état 154


État 132

   17 exp: exp • "+" exp
   18    | exp • "<=" exp
   19    | exp • ">=" exp
   20    | exp • "<>" exp
   21    | exp • "-" exp
   22    | exp • "*" exp
   23    | exp • "/" exp
   24    | exp • "=" exp
   25    | exp • "<" exp
   26    | exp • ">" exp
   27    | exp • "&" exp
   28    | exp • "|" exp
   33    | "while" exp "do" exp •  ["end of file", ",", "do", "else", "end", "function", "import", "in", "primitive", "}", "]", ")", ";", "then", "to", "type", "var", "_chunks"]

    "&"   décalage et aller à l'état 52
    "/"   décalage et aller à l'état 53
    "="   décalage et aller à l'état 54
    ">="  décalage et aller à l'état 55
    ">"   décalage et aller à l'état 56
    "<="  décalage et aller à l'état 57
    "<"   décalage et aller à l'état 58
    "-"   décalage et aller à l'état 59
    "<>"  décalage et aller à l'état 60
    "|"   décalage et aller à l'état 61
    "+"   décalage et aller à l'état 62
    "*"   décalage et aller à l'état 63

    $défaut  réduction par utilisation de la règle 33 (exp)

    Conflit entre la règle 33 et le jeton "&" résolu par décalage ("do" < "&").
    Conflit entre la règle 33 et le jeton "/" résolu par décalage ("do" < "/").
    Conflit entre la règle 33 et le jeton "=" résolu par décalage ("do" < "=").
    Conflit entre la règle 33 et le jeton ">=" résolu par décalage ("do" < ">=").
    Conflit entre la règle 33 et le jeton ">" résolu par décalage ("do" < ">").
    Conflit entre la règle 33 et le jeton "<=" résolu par décalage ("do" < "<=").
    Conflit entre la règle 33 et le jeton "<" résolu par décalage ("do" < "<").
    Conflit entre la règle 33 et le jeton "-" résolu par décalage ("do" < "-").
    Conflit entre la règle 33 et le jeton "<>" résolu par décalage ("do" < "<>").
    Conflit entre la règle 33 et le jeton "|" résolu par décalage ("do" < "|").
    Conflit entre la règle 33 et le jeton "+" résolu par décalage ("do" < "+").
    Conflit entre la règle 33 et le jeton "*" résolu par décalage ("do" < "*").


État 133

   45 lvalue: "_lvalue" "(" "integer" ")" •

    $défaut  réduction par utilisation de la règle 45 (lvalue)


État 134

   46 chunks: ε •  ["end of file", "in"]
   47       | • tychunk chunks
   48       | • funchunk chunks
   49       | • varchunk chunks
   50       | • "import" "string"
   51       | • "_chunks" "(" "integer" ")" chunks
   51       | "_chunks" "(" "integer" ")" • chunks
   52 varchunk: • vardec
   53         | • vardec ";" varchunk
   54 funchunk: • fundec
   55         | • fundec funchunk
   56 vardec: • "var" "identifier" ":=" exp
   57       | • "var" "identifier" ":" typeid ":=" exp
   58 fundec: • "function" "identifier" "(" tyfieldsbis ")" "=" exp
   59       | • "function" "identifier" "(" tyfieldsbis ")" ":" typeid "=" exp
   60       | • "primitive" "identifier" "(" tyfieldsbis ")"
   61       | • "primitive" "identifier" "(" tyfieldsbis ")" ":" typeid
   62 tychunk: • tydec
   63        | • tydec tychunk
   64 tydec: • "type" "identifier" "=" ty

    "function"   décalage et aller à l'état 7
    "import"     décalage et aller à l'état 9
    "primitive"  décalage et aller à l'état 14
    "type"       décalage et aller à l'état 15
    "var"        décalage et aller à l'état 16
    "_chunks"    décalage et aller à l'état 19

    $défaut  réduction par utilisation de la règle 46 (chunks)

    chunks    aller à l'état 155
    varchunk  aller à l'état 25
    funchunk  aller à l'état 26
    vardec    aller à l'état 27
    fundec    aller à l'état 28
    tychunk   aller à l'état 29
    tydec     aller à l'état 30


État 135

   79 typeid: "_namety" "(" "integer" ")" •

    $défaut  réduction par utilisation de la règle 79 (typeid)


État 136

   44 lvalue: lvalue "[" exp "]" •

    $défaut  réduction par utilisation de la règle 44 (lvalue)


État 137

    7 exp: • "integer"
    8    | • "nil"
    9    | • "string"
   10    | • "identifier" "[" exp "]" "of" exp
   11    | • typeid "{" "}"
   12    | • typeid "{" record_r "}"
   13    | • lvalue
   14    | • "identifier" "(" ")"
   15    | • "identifier" "(" function_r ")"
   16    | • "-" exp
   17    | • exp "+" exp
   18    | • exp "<=" exp
   19    | • exp ">=" exp
   20    | • exp "<>" exp
   21    | • exp "-" exp
   22    | • exp "*" exp
   23    | • exp "/" exp
   24    | • exp "=" exp
   25    | • exp "<" exp
   26    | • exp ">" exp
   27    | • exp "&" exp
   28    | • exp "|" exp
   29    | • "(" exps ")"
   30    | • lvalue ":=" exp
   31    | • "if" exp "then" exp
   32    | • "if" exp "then" exp "else" exp
   33    | • "while" exp "do" exp
   34    | • "for" "identifier" ":=" exp "to" exp "do" exp
   35    | • "break"
   36    | • "let" chunks "in" exps "end"
   37    | • "_exp" "(" "integer" ")"
   39 record_r: "identifier" "=" • exp
   42 lvalue: • "identifier"
   43       | • lvalue "." "identifier"
   44       | • lvalue "[" exp "]"
   45       | • "_lvalue" "(" "integer" ")"
   78 typeid: • "identifier"
   79       | • "_namety" "(" "integer" ")"

    "string"      décalage et aller à l'état 1
    "identifier"  décalage et aller à l'état 2
    "integer"     décalage et aller à l'état 3
    "break"       décalage et aller à l'état 4
    "_exp"        décalage et aller à l'état 5
    "for"         décalage et aller à l'état 6
    "if"          décalage et aller à l'état 8
    "let"         décalage et aller à l'état 10
    "("           décalage et aller à l'état 11
    "-"           décalage et aller à l'état 12
    "nil"         décalage et aller à l'état 13
    "while"       décalage et aller à l'état 17
    "_lvalue"     décalage et aller à l'état 18
    "_namety"     décalage et aller à l'état 20

    exp     aller à l'état 156
    lvalue  aller à l'état 23
    typeid  aller à l'état 31


État 138

   38 record_r: record_r "," • "identifier" "=" exp

    "identifier"  décalage et aller à l'état 157


État 139

   12 exp: typeid "{" record_r "}" •

    $défaut  réduction par utilisation de la règle 12 (exp)


État 140

    7 exp: • "integer"
    8    | • "nil"
    9    | • "string"
   10    | • "identifier" "[" exp "]" "of" exp
   10    | "identifier" "[" exp "]" "of" • exp
   11    | • typeid "{" "}"
   12    | • typeid "{" record_r "}"
   13    | • lvalue
   14    | • "identifier" "(" ")"
   15    | • "identifier" "(" function_r ")"
   16    | • "-" exp
   17    | • exp "+" exp
   18    | • exp "<=" exp
   19    | • exp ">=" exp
   20    | • exp "<>" exp
   21    | • exp "-" exp
   22    | • exp "*" exp
   23    | • exp "/" exp
   24    | • exp "=" exp
   25    | • exp "<" exp
   26    | • exp ">" exp
   27    | • exp "&" exp
   28    | • exp "|" exp
   29    | • "(" exps ")"
   30    | • lvalue ":=" exp
   31    | • "if" exp "then" exp
   32    | • "if" exp "then" exp "else" exp
   33    | • "while" exp "do" exp
   34    | • "for" "identifier" ":=" exp "to" exp "do" exp
   35    | • "break"
   36    | • "let" chunks "in" exps "end"
   37    | • "_exp" "(" "integer" ")"
   42 lvalue: • "identifier"
   43       | • lvalue "." "identifier"
   44       | • lvalue "[" exp "]"
   45       | • "_lvalue" "(" "integer" ")"
   78 typeid: • "identifier"
   79       | • "_namety" "(" "integer" ")"

    "string"      décalage et aller à l'état 1
    "identifier"  décalage et aller à l'état 2
    "integer"     décalage et aller à l'état 3
    "break"       décalage et aller à l'état 4
    "_exp"        décalage et aller à l'état 5
    "for"         décalage et aller à l'état 6
    "if"          décalage et aller à l'état 8
    "let"         décalage et aller à l'état 10
    "("           décalage et aller à l'état 11
    "-"           décalage et aller à l'état 12
    "nil"         décalage et aller à l'état 13
    "while"       décalage et aller à l'état 17
    "_lvalue"     décalage et aller à l'état 18
    "_namety"     décalage et aller à l'état 20

    exp     aller à l'état 158
    lvalue  aller à l'état 23
    typeid  aller à l'état 31


État 141

   17 exp: exp • "+" exp
   18    | exp • "<=" exp
   19    | exp • ">=" exp
   20    | exp • "<>" exp
   21    | exp • "-" exp
   22    | exp • "*" exp
   23    | exp • "/" exp
   24    | exp • "=" exp
   25    | exp • "<" exp
   26    | exp • ">" exp
   27    | exp • "&" exp
   28    | exp • "|" exp
   40 function_r: function_r "," exp •  [",", ")"]

    "&"   décalage et aller à l'état 52
    "/"   décalage et aller à l'état 53
    "="   décalage et aller à l'état 54
    ">="  décalage et aller à l'état 55
    ">"   décalage et aller à l'état 56
    "<="  décalage et aller à l'état 57
    "<"   décalage et aller à l'état 58
    "-"   décalage et aller à l'état 59
    "<>"  décalage et aller à l'état 60
    "|"   décalage et aller à l'état 61
    "+"   décalage et aller à l'état 62
    "*"   décalage et aller à l'état 63

    $défaut  réduction par utilisation de la règle 40 (function_r)


État 142

    7 exp: • "integer"
    8    | • "nil"
    9    | • "string"
   10    | • "identifier" "[" exp "]" "of" exp
   11    | • typeid "{" "}"
   12    | • typeid "{" record_r "}"
   13    | • lvalue
   14    | • "identifier" "(" ")"
   15    | • "identifier" "(" function_r ")"
   16    | • "-" exp
   17    | • exp "+" exp
   18    | • exp "<=" exp
   19    | • exp ">=" exp
   20    | • exp "<>" exp
   21    | • exp "-" exp
   22    | • exp "*" exp
   23    | • exp "/" exp
   24    | • exp "=" exp
   25    | • exp "<" exp
   26    | • exp ">" exp
   27    | • exp "&" exp
   28    | • exp "|" exp
   29    | • "(" exps ")"
   30    | • lvalue ":=" exp
   31    | • "if" exp "then" exp
   32    | • "if" exp "then" exp "else" exp
   33    | • "while" exp "do" exp
   34    | • "for" "identifier" ":=" exp "to" exp "do" exp
   34    | "for" "identifier" ":=" exp "to" • exp "do" exp
   35    | • "break"
   36    | • "let" chunks "in" exps "end"
   37    | • "_exp" "(" "integer" ")"
   42 lvalue: • "identifier"
   43       | • lvalue "." "identifier"
   44       | • lvalue "[" exp "]"
   45       | • "_lvalue" "(" "integer" ")"
   78 typeid: • "identifier"
   79       | • "_namety" "(" "integer" ")"

    "string"      décalage et aller à l'état 1
    "identifier"  décalage et aller à l'état 2
    "integer"     décalage et aller à l'état 3
    "break"       décalage et aller à l'état 4
    "_exp"        décalage et aller à l'état 5
    "for"         décalage et aller à l'état 6
    "if"          décalage et aller à l'état 8
    "let"         décalage et aller à l'état 10
    "("           décalage et aller à l'état 11
    "-"           décalage et aller à l'état 12
    "nil"         décalage et aller à l'état 13
    "while"       décalage et aller à l'état 17
    "_lvalue"     décalage et aller à l'état 18
    "_namety"     décalage et aller à l'état 20

    exp     aller à l'état 159
    lvalue  aller à l'état 23
    typeid  aller à l'état 31


État 143

   77 tyfieldbis: "identifier" ":" • typeid
   78 typeid: • "identifier"
   79       | • "_namety" "(" "integer" ")"

    "identifier"  décalage et aller à l'état 125
    "_namety"     décalage et aller à l'état 20

    typeid  aller à l'état 160


État 144

   58 fundec: "function" "identifier" "(" tyfieldsbis ")" • "=" exp
   59       | "function" "identifier" "(" tyfieldsbis ")" • ":" typeid "=" exp

    ":"  décalage et aller à l'état 161
    "="  décalage et aller à l'état 162


État 145

   75 tyfieldsbis.1: tyfieldsbis.1 "," • tyfieldbis
   77 tyfieldbis: • "identifier" ":" typeid

    "identifier"  décalage et aller à l'état 117

    tyfieldbis  aller à l'état 163


État 146

    7 exp: • "integer"
    8    | • "nil"
    9    | • "string"
   10    | • "identifier" "[" exp "]" "of" exp
   11    | • typeid "{" "}"
   12    | • typeid "{" record_r "}"
   13    | • lvalue
   14    | • "identifier" "(" ")"
   15    | • "identifier" "(" function_r ")"
   16    | • "-" exp
   17    | • exp "+" exp
   18    | • exp "<=" exp
   19    | • exp ">=" exp
   20    | • exp "<>" exp
   21    | • exp "-" exp
   22    | • exp "*" exp
   23    | • exp "/" exp
   24    | • exp "=" exp
   25    | • exp "<" exp
   26    | • exp ">" exp
   27    | • exp "&" exp
   28    | • exp "|" exp
   29    | • "(" exps ")"
   30    | • lvalue ":=" exp
   31    | • "if" exp "then" exp
   32    | • "if" exp "then" exp "else" exp
   32    | "if" exp "then" exp "else" • exp
   33    | • "while" exp "do" exp
   34    | • "for" "identifier" ":=" exp "to" exp "do" exp
   35    | • "break"
   36    | • "let" chunks "in" exps "end"
   37    | • "_exp" "(" "integer" ")"
   42 lvalue: • "identifier"
   43       | • lvalue "." "identifier"
   44       | • lvalue "[" exp "]"
   45       | • "_lvalue" "(" "integer" ")"
   78 typeid: • "identifier"
   79       | • "_namety" "(" "integer" ")"

    "string"      décalage et aller à l'état 1
    "identifier"  décalage et aller à l'état 2
    "integer"     décalage et aller à l'état 3
    "break"       décalage et aller à l'état 4
    "_exp"        décalage et aller à l'état 5
    "for"         décalage et aller à l'état 6
    "if"          décalage et aller à l'état 8
    "let"         décalage et aller à l'état 10
    "("           décalage et aller à l'état 11
    "-"           décalage et aller à l'état 12
    "nil"         décalage et aller à l'état 13
    "while"       décalage et aller à l'état 17
    "_lvalue"     décalage et aller à l'état 18
    "_namety"     décalage et aller à l'état 20

    exp     aller à l'état 164
    lvalue  aller à l'état 23
    typeid  aller à l'état 31


État 147

   36 exp: "let" chunks "in" exps "end" •

    $défaut  réduction par utilisation de la règle 36 (exp)


État 148

   60 fundec: "primitive" "identifier" "(" tyfieldsbis ")" •  ["end of file", "function", "import", "in", "primitive", "type", "var", "_chunks"]
   61       | "primitive" "identifier" "(" tyfieldsbis ")" • ":" typeid

    ":"  décalage et aller à l'état 165

    $défaut  réduction par utilisation de la règle 60 (fundec)


État 149

   67 ty: "array" "of" • typeid
   78 typeid: • "identifier"
   79       | • "_namety" "(" "integer" ")"

    "identifier"  décalage et aller à l'état 125
    "_namety"     décalage et aller à l'état 20

    typeid  aller à l'état 166


État 150

   72 tyfield: "identifier" • ":" typeid

    ":"  décalage et aller à l'état 167


État 151

   66 ty: "{" tyfields • "}"

    "}"  décalage et aller à l'état 168


État 152

   69 tyfields: tyfields.1 •  ["}"]
   70 tyfields.1: tyfields.1 • "," tyfield

    ","  décalage et aller à l'état 169

    $défaut  réduction par utilisation de la règle 69 (tyfields)


État 153

   71 tyfields.1: tyfield •

    $défaut  réduction par utilisation de la règle 71 (tyfields.1)


État 154

    7 exp: • "integer"
    8    | • "nil"
    9    | • "string"
   10    | • "identifier" "[" exp "]" "of" exp
   11    | • typeid "{" "}"
   12    | • typeid "{" record_r "}"
   13    | • lvalue
   14    | • "identifier" "(" ")"
   15    | • "identifier" "(" function_r ")"
   16    | • "-" exp
   17    | • exp "+" exp
   18    | • exp "<=" exp
   19    | • exp ">=" exp
   20    | • exp "<>" exp
   21    | • exp "-" exp
   22    | • exp "*" exp
   23    | • exp "/" exp
   24    | • exp "=" exp
   25    | • exp "<" exp
   26    | • exp ">" exp
   27    | • exp "&" exp
   28    | • exp "|" exp
   29    | • "(" exps ")"
   30    | • lvalue ":=" exp
   31    | • "if" exp "then" exp
   32    | • "if" exp "then" exp "else" exp
   33    | • "while" exp "do" exp
   34    | • "for" "identifier" ":=" exp "to" exp "do" exp
   35    | • "break"
   36    | • "let" chunks "in" exps "end"
   37    | • "_exp" "(" "integer" ")"
   42 lvalue: • "identifier"
   43       | • lvalue "." "identifier"
   44       | • lvalue "[" exp "]"
   45       | • "_lvalue" "(" "integer" ")"
   57 vardec: "var" "identifier" ":" typeid ":=" • exp
   78 typeid: • "identifier"
   79       | • "_namety" "(" "integer" ")"

    "string"      décalage et aller à l'état 1
    "identifier"  décalage et aller à l'état 2
    "integer"     décalage et aller à l'état 3
    "break"       décalage et aller à l'état 4
    "_exp"        décalage et aller à l'état 5
    "for"         décalage et aller à l'état 6
    "if"          décalage et aller à l'état 8
    "let"         décalage et aller à l'état 10
    "("           décalage et aller à l'état 11
    "-"           décalage et aller à l'état 12
    "nil"         décalage et aller à l'état 13
    "while"       décalage et aller à l'état 17
    "_lvalue"     décalage et aller à l'état 18
    "_namety"     décalage et aller à l'état 20

    exp     aller à l'état 170
    lvalue  aller à l'état 23
    typeid  aller à l'état 31


État 155

   51 chunks: "_chunks" "(" "integer" ")" chunks •

    $défaut  réduction par utilisation de la règle 51 (chunks)


État 156

   17 exp: exp • "+" exp
   18    | exp • "<=" exp
   19    | exp • ">=" exp
   20    | exp • "<>" exp
   21    | exp • "-" exp
   22    | exp • "*" exp
   23    | exp • "/" exp
   24    | exp • "=" exp
   25    | exp • "<" exp
   26    | exp • ">" exp
   27    | exp • "&" exp
   28    | exp • "|" exp
   39 record_r: "identifier" "=" exp •  [",", "}"]

    "&"   décalage et aller à l'état 52
    "/"   décalage et aller à l'état 53
    "="   décalage et aller à l'état 54
    ">="  décalage et aller à l'état 55
    ">"   décalage et aller à l'état 56
    "<="  décalage et aller à l'état 57
    "<"   décalage et aller à l'état 58
    "-"   décalage et aller à l'état 59
    "<>"  décalage et aller à l'état 60
    "|"   décalage et aller à l'état 61
    "+"   décalage et aller à l'état 62
    "*"   décalage et aller à l'état 63

    $défaut  réduction par utilisation de la règle 39 (record_r)


État 157

   38 record_r: record_r "," "identifier" • "=" exp

    "="  décalage et aller à l'état 171


État 158

   10 exp: "identifier" "[" exp "]" "of" exp •  ["end of file", ",", "do", "else", "end", "function", "import", "in", "primitive", "}", "]", ")", ";", "then", "to", "type", "var", "_chunks"]
   17    | exp • "+" exp
   18    | exp • "<=" exp
   19    | exp • ">=" exp
   20    | exp • "<>" exp
   21    | exp • "-" exp
   22    | exp • "*" exp
   23    | exp • "/" exp
   24    | exp • "=" exp
   25    | exp • "<" exp
   26    | exp • ">" exp
   27    | exp • "&" exp
   28    | exp • "|" exp

    "&"   décalage et aller à l'état 52
    "/"   décalage et aller à l'état 53
    "="   décalage et aller à l'état 54
    ">="  décalage et aller à l'état 55
    ">"   décalage et aller à l'état 56
    "<="  décalage et aller à l'état 57
    "<"   décalage et aller à l'état 58
    "-"   décalage et aller à l'état 59
    "<>"  décalage et aller à l'état 60
    "|"   décalage et aller à l'état 61
    "+"   décalage et aller à l'état 62
    "*"   décalage et aller à l'état 63

    $défaut  réduction par utilisation de la règle 10 (exp)

    Conflit entre la règle 10 et le jeton "&" résolu par décalage ("of" < "&").
    Conflit entre la règle 10 et le jeton "/" résolu par décalage ("of" < "/").
    Conflit entre la règle 10 et le jeton "=" résolu par décalage ("of" < "=").
    Conflit entre la règle 10 et le jeton ">=" résolu par décalage ("of" < ">=").
    Conflit entre la règle 10 et le jeton ">" résolu par décalage ("of" < ">").
    Conflit entre la règle 10 et le jeton "<=" résolu par décalage ("of" < "<=").
    Conflit entre la règle 10 et le jeton "<" résolu par décalage ("of" < "<").
    Conflit entre la règle 10 et le jeton "-" résolu par décalage ("of" < "-").
    Conflit entre la règle 10 et le jeton "<>" résolu par décalage ("of" < "<>").
    Conflit entre la règle 10 et le jeton "|" résolu par décalage ("of" < "|").
    Conflit entre la règle 10 et le jeton "+" résolu par décalage ("of" < "+").
    Conflit entre la règle 10 et le jeton "*" résolu par décalage ("of" < "*").


État 159

   17 exp: exp • "+" exp
   18    | exp • "<=" exp
   19    | exp • ">=" exp
   20    | exp • "<>" exp
   21    | exp • "-" exp
   22    | exp • "*" exp
   23    | exp • "/" exp
   24    | exp • "=" exp
   25    | exp • "<" exp
   26    | exp • ">" exp
   27    | exp • "&" exp
   28    | exp • "|" exp
   34    | "for" "identifier" ":=" exp "to" exp • "do" exp

    "&"   décalage et aller à l'état 52
    "/"   décalage et aller à l'état 53
    "do"  décalage et aller à l'état 172
    "="   décalage et aller à l'état 54
    ">="  décalage et aller à l'état 55
    ">"   décalage et aller à l'état 56
    "<="  décalage et aller à l'état 57
    "<"   décalage et aller à l'état 58
    "-"   décalage et aller à l'état 59
    "<>"  décalage et aller à l'état 60
    "|"   décalage et aller à l'état 61
    "+"   décalage et aller à l'état 62
    "*"   décalage et aller à l'état 63


État 160

   77 tyfieldbis: "identifier" ":" typeid •

    $défaut  réduction par utilisation de la règle 77 (tyfieldbis)


État 161

   59 fundec: "function" "identifier" "(" tyfieldsbis ")" ":" • typeid "=" exp
   78 typeid: • "identifier"
   79       | • "_namety" "(" "integer" ")"

    "identifier"  décalage et aller à l'état 125
    "_namety"     décalage et aller à l'état 20

    typeid  aller à l'état 173


État 162

    7 exp: • "integer"
    8    | • "nil"
    9    | • "string"
   10    | • "identifier" "[" exp "]" "of" exp
   11    | • typeid "{" "}"
   12    | • typeid "{" record_r "}"
   13    | • lvalue
   14    | • "identifier" "(" ")"
   15    | • "identifier" "(" function_r ")"
   16    | • "-" exp
   17    | • exp "+" exp
   18    | • exp "<=" exp
   19    | • exp ">=" exp
   20    | • exp "<>" exp
   21    | • exp "-" exp
   22    | • exp "*" exp
   23    | • exp "/" exp
   24    | • exp "=" exp
   25    | • exp "<" exp
   26    | • exp ">" exp
   27    | • exp "&" exp
   28    | • exp "|" exp
   29    | • "(" exps ")"
   30    | • lvalue ":=" exp
   31    | • "if" exp "then" exp
   32    | • "if" exp "then" exp "else" exp
   33    | • "while" exp "do" exp
   34    | • "for" "identifier" ":=" exp "to" exp "do" exp
   35    | • "break"
   36    | • "let" chunks "in" exps "end"
   37    | • "_exp" "(" "integer" ")"
   42 lvalue: • "identifier"
   43       | • lvalue "." "identifier"
   44       | • lvalue "[" exp "]"
   45       | • "_lvalue" "(" "integer" ")"
   58 fundec: "function" "identifier" "(" tyfieldsbis ")" "=" • exp
   78 typeid: • "identifier"
   79       | • "_namety" "(" "integer" ")"

    "string"      décalage et aller à l'état 1
    "identifier"  décalage et aller à l'état 2
    "integer"     décalage et aller à l'état 3
    "break"       décalage et aller à l'état 4
    "_exp"        décalage et aller à l'état 5
    "for"         décalage et aller à l'état 6
    "if"          décalage et aller à l'état 8
    "let"         décalage et aller à l'état 10
    "("           décalage et aller à l'état 11
    "-"           décalage et aller à l'état 12
    "nil"         décalage et aller à l'état 13
    "while"       décalage et aller à l'état 17
    "_lvalue"     décalage et aller à l'état 18
    "_namety"     décalage et aller à l'état 20

    exp     aller à l'état 174
    lvalue  aller à l'état 23
    typeid  aller à l'état 31


État 163

   75 tyfieldsbis.1: tyfieldsbis.1 "," tyfieldbis •

    $défaut  réduction par utilisation de la règle 75 (tyfieldsbis.1)


État 164

   17 exp: exp • "+" exp
   18    | exp • "<=" exp
   19    | exp • ">=" exp
   20    | exp • "<>" exp
   21    | exp • "-" exp
   22    | exp • "*" exp
   23    | exp • "/" exp
   24    | exp • "=" exp
   25    | exp • "<" exp
   26    | exp • ">" exp
   27    | exp • "&" exp
   28    | exp • "|" exp
   32    | "if" exp "then" exp "else" exp •  ["end of file", ",", "do", "else", "end", "function", "import", "in", "primitive", "}", "]", ")", ";", "then", "to", "type", "var", "_chunks"]

    "&"   décalage et aller à l'état 52
    "/"   décalage et aller à l'état 53
    "="   décalage et aller à l'état 54
    ">="  décalage et aller à l'état 55
    ">"   décalage et aller à l'état 56
    "<="  décalage et aller à l'état 57
    "<"   décalage et aller à l'état 58
    "-"   décalage et aller à l'état 59
    "<>"  décalage et aller à l'état 60
    "|"   décalage et aller à l'état 61
    "+"   décalage et aller à l'état 62
    "*"   décalage et aller à l'état 63

    $défaut  réduction par utilisation de la règle 32 (exp)

    Conflit entre la règle 32 et le jeton "&" résolu par décalage ("else" < "&").
    Conflit entre la règle 32 et le jeton "/" résolu par décalage ("else" < "/").
    Conflit entre la règle 32 et le jeton "=" résolu par décalage ("else" < "=").
    Conflit entre la règle 32 et le jeton ">=" résolu par décalage ("else" < ">=").
    Conflit entre la règle 32 et le jeton ">" résolu par décalage ("else" < ">").
    Conflit entre la règle 32 et le jeton "<=" résolu par décalage ("else" < "<=").
    Conflit entre la règle 32 et le jeton "<" résolu par décalage ("else" < "<").
    Conflit entre la règle 32 et le jeton "-" résolu par décalage ("else" < "-").
    Conflit entre la règle 32 et le jeton "<>" résolu par décalage ("else" < "<>").
    Conflit entre la règle 32 et le jeton "|" résolu par décalage ("else" < "|").
    Conflit entre la règle 32 et le jeton "+" résolu par décalage ("else" < "+").
    Conflit entre la règle 32 et le jeton "*" résolu par décalage ("else" < "*").


État 165

   61 fundec: "primitive" "identifier" "(" tyfieldsbis ")" ":" • typeid
   78 typeid: • "identifier"
   79       | • "_namety" "(" "integer" ")"

    "identifier"  décalage et aller à l'état 125
    "_namety"     décalage et aller à l'état 20

    typeid  aller à l'état 175


État 166

   67 ty: "array" "of" typeid •

    $défaut  réduction par utilisation de la règle 67 (ty)


État 167

   72 tyfield: "identifier" ":" • typeid
   78 typeid: • "identifier"
   79       | • "_namety" "(" "integer" ")"

    "identifier"  décalage et aller à l'état 125
    "_namety"     décalage et aller à l'état 20

    typeid  aller à l'état 176


État 168

   66 ty: "{" tyfields "}" •

    $défaut  réduction par utilisation de la règle 66 (ty)


État 169

   70 tyfields.1: tyfields.1 "," • tyfield
   72 tyfield: • "identifier" ":" typeid

    "identifier"  décalage et aller à l'état 150

    tyfield  aller à l'état 177


État 170

   17 exp: exp • "+" exp
   18    | exp • "<=" exp
   19    | exp • ">=" exp
   20    | exp • "<>" exp
   21    | exp • "-" exp
   22    | exp • "*" exp
   23    | exp • "/" exp
   24    | exp • "=" exp
   25    | exp • "<" exp
   26    | exp • ">" exp
   27    | exp • "&" exp
   28    | exp • "|" exp
   57 vardec: "var" "identifier" ":" typeid ":=" exp •  ["end of file", "function", "import", "in", "primitive", ";", "type", "var", "_chunks"]

    "&"   décalage et aller à l'état 52
    "/"   décalage et aller à l'état 53
    "="   décalage et aller à l'état 54
    ">="  décalage et aller à l'état 55
    ">"   décalage et aller à l'état 56
    "<="  décalage et aller à l'état 57
    "<"   décalage et aller à l'état 58
    "-"   décalage et aller à l'état 59
    "<>"  décalage et aller à l'état 60
    "|"   décalage et aller à l'état 61
    "+"   décalage et aller à l'état 62
    "*"   décalage et aller à l'état 63

    $défaut  réduction par utilisation de la règle 57 (vardec)


État 171

    7 exp: • "integer"
    8    | • "nil"
    9    | • "string"
   10    | • "identifier" "[" exp "]" "of" exp
   11    | • typeid "{" "}"
   12    | • typeid "{" record_r "}"
   13    | • lvalue
   14    | • "identifier" "(" ")"
   15    | • "identifier" "(" function_r ")"
   16    | • "-" exp
   17    | • exp "+" exp
   18    | • exp "<=" exp
   19    | • exp ">=" exp
   20    | • exp "<>" exp
   21    | • exp "-" exp
   22    | • exp "*" exp
   23    | • exp "/" exp
   24    | • exp "=" exp
   25    | • exp "<" exp
   26    | • exp ">" exp
   27    | • exp "&" exp
   28    | • exp "|" exp
   29    | • "(" exps ")"
   30    | • lvalue ":=" exp
   31    | • "if" exp "then" exp
   32    | • "if" exp "then" exp "else" exp
   33    | • "while" exp "do" exp
   34    | • "for" "identifier" ":=" exp "to" exp "do" exp
   35    | • "break"
   36    | • "let" chunks "in" exps "end"
   37    | • "_exp" "(" "integer" ")"
   38 record_r: record_r "," "identifier" "=" • exp
   42 lvalue: • "identifier"
   43       | • lvalue "." "identifier"
   44       | • lvalue "[" exp "]"
   45       | • "_lvalue" "(" "integer" ")"
   78 typeid: • "identifier"
   79       | • "_namety" "(" "integer" ")"

    "string"      décalage et aller à l'état 1
    "identifier"  décalage et aller à l'état 2
    "integer"     décalage et aller à l'état 3
    "break"       décalage et aller à l'état 4
    "_exp"        décalage et aller à l'état 5
    "for"         décalage et aller à l'état 6
    "if"          décalage et aller à l'état 8
    "let"         décalage et aller à l'état 10
    "("           décalage et aller à l'état 11
    "-"           décalage et aller à l'état 12
    "nil"         décalage et aller à l'état 13
    "while"       décalage et aller à l'état 17
    "_lvalue"     décalage et aller à l'état 18
    "_namety"     décalage et aller à l'état 20

    exp     aller à l'état 178
    lvalue  aller à l'état 23
    typeid  aller à l'état 31


État 172

    7 exp: • "integer"
    8    | • "nil"
    9    | • "string"
   10    | • "identifier" "[" exp "]" "of" exp
   11    | • typeid "{" "}"
   12    | • typeid "{" record_r "}"
   13    | • lvalue
   14    | • "identifier" "(" ")"
   15    | • "identifier" "(" function_r ")"
   16    | • "-" exp
   17    | • exp "+" exp
   18    | • exp "<=" exp
   19    | • exp ">=" exp
   20    | • exp "<>" exp
   21    | • exp "-" exp
   22    | • exp "*" exp
   23    | • exp "/" exp
   24    | • exp "=" exp
   25    | • exp "<" exp
   26    | • exp ">" exp
   27    | • exp "&" exp
   28    | • exp "|" exp
   29    | • "(" exps ")"
   30    | • lvalue ":=" exp
   31    | • "if" exp "then" exp
   32    | • "if" exp "then" exp "else" exp
   33    | • "while" exp "do" exp
   34    | • "for" "identifier" ":=" exp "to" exp "do" exp
   34    | "for" "identifier" ":=" exp "to" exp "do" • exp
   35    | • "break"
   36    | • "let" chunks "in" exps "end"
   37    | • "_exp" "(" "integer" ")"
   42 lvalue: • "identifier"
   43       | • lvalue "." "identifier"
   44       | • lvalue "[" exp "]"
   45       | • "_lvalue" "(" "integer" ")"
   78 typeid: • "identifier"
   79       | • "_namety" "(" "integer" ")"

    "string"      décalage et aller à l'état 1
    "identifier"  décalage et aller à l'état 2
    "integer"     décalage et aller à l'état 3
    "break"       décalage et aller à l'état 4
    "_exp"        décalage et aller à l'état 5
    "for"         décalage et aller à l'état 6
    "if"          décalage et aller à l'état 8
    "let"         décalage et aller à l'état 10
    "("           décalage et aller à l'état 11
    "-"           décalage et aller à l'état 12
    "nil"         décalage et aller à l'état 13
    "while"       décalage et aller à l'état 17
    "_lvalue"     décalage et aller à l'état 18
    "_namety"     décalage et aller à l'état 20

    exp     aller à l'état 179
    lvalue  aller à l'état 23
    typeid  aller à l'état 31


État 173

   59 fundec: "function" "identifier" "(" tyfieldsbis ")" ":" typeid • "=" exp

    "="  décalage et aller à l'état 180


État 174

   17 exp: exp • "+" exp
   18    | exp • "<=" exp
   19    | exp • ">=" exp
   20    | exp • "<>" exp
   21    | exp • "-" exp
   22    | exp • "*" exp
   23    | exp • "/" exp
   24    | exp • "=" exp
   25    | exp • "<" exp
   26    | exp • ">" exp
   27    | exp • "&" exp
   28    | exp • "|" exp
   58 fundec: "function" "identifier" "(" tyfieldsbis ")" "=" exp •  ["end of file", "function", "import", "in", "primitive", "type", "var", "_chunks"]

    "&"   décalage et aller à l'état 52
    "/"   décalage et aller à l'état 53
    "="   décalage et aller à l'état 54
    ">="  décalage et aller à l'état 55
    ">"   décalage et aller à l'état 56
    "<="  décalage et aller à l'état 57
    "<"   décalage et aller à l'état 58
    "-"   décalage et aller à l'état 59
    "<>"  décalage et aller à l'état 60
    "|"   décalage et aller à l'état 61
    "+"   décalage et aller à l'état 62
    "*"   décalage et aller à l'état 63

    $défaut  réduction par utilisation de la règle 58 (fundec)


État 175

   61 fundec: "primitive" "identifier" "(" tyfieldsbis ")" ":" typeid •

    $défaut  réduction par utilisation de la règle 61 (fundec)


État 176

   72 tyfield: "identifier" ":" typeid •

    $défaut  réduction par utilisation de la règle 72 (tyfield)


État 177

   70 tyfields.1: tyfields.1 "," tyfield •

    $défaut  réduction par utilisation de la règle 70 (tyfields.1)


État 178

   17 exp: exp • "+" exp
   18    | exp • "<=" exp
   19    | exp • ">=" exp
   20    | exp • "<>" exp
   21    | exp • "-" exp
   22    | exp • "*" exp
   23    | exp • "/" exp
   24    | exp • "=" exp
   25    | exp • "<" exp
   26    | exp • ">" exp
   27    | exp • "&" exp
   28    | exp • "|" exp
   38 record_r: record_r "," "identifier" "=" exp •  [",", "}"]

    "&"   décalage et aller à l'état 52
    "/"   décalage et aller à l'état 53
    "="   décalage et aller à l'état 54
    ">="  décalage et aller à l'état 55
    ">"   décalage et aller à l'état 56
    "<="  décalage et aller à l'état 57
    "<"   décalage et aller à l'état 58
    "-"   décalage et aller à l'état 59
    "<>"  décalage et aller à l'état 60
    "|"   décalage et aller à l'état 61
    "+"   décalage et aller à l'état 62
    "*"   décalage et aller à l'état 63

    $défaut  réduction par utilisation de la règle 38 (record_r)


État 179

   17 exp: exp • "+" exp
   18    | exp • "<=" exp
   19    | exp • ">=" exp
   20    | exp • "<>" exp
   21    | exp • "-" exp
   22    | exp • "*" exp
   23    | exp • "/" exp
   24    | exp • "=" exp
   25    | exp • "<" exp
   26    | exp • ">" exp
   27    | exp • "&" exp
   28    | exp • "|" exp
   34    | "for" "identifier" ":=" exp "to" exp "do" exp •  ["end of file", ",", "do", "else", "end", "function", "import", "in", "primitive", "}", "]", ")", ";", "then", "to", "type", "var", "_chunks"]

    "&"   décalage et aller à l'état 52
    "/"   décalage et aller à l'état 53
    "="   décalage et aller à l'état 54
    ">="  décalage et aller à l'état 55
    ">"   décalage et aller à l'état 56
    "<="  décalage et aller à l'état 57
    "<"   décalage et aller à l'état 58
    "-"   décalage et aller à l'état 59
    "<>"  décalage et aller à l'état 60
    "|"   décalage et aller à l'état 61
    "+"   décalage et aller à l'état 62
    "*"   décalage et aller à l'état 63

    $défaut  réduction par utilisation de la règle 34 (exp)

    Conflit entre la règle 34 et le jeton "&" résolu par décalage ("do" < "&").
    Conflit entre la règle 34 et le jeton "/" résolu par décalage ("do" < "/").
    Conflit entre la règle 34 et le jeton "=" résolu par décalage ("do" < "=").
    Conflit entre la règle 34 et le jeton ">=" résolu par décalage ("do" < ">=").
    Conflit entre la règle 34 et le jeton ">" résolu par décalage ("do" < ">").
    Conflit entre la règle 34 et le jeton "<=" résolu par décalage ("do" < "<=").
    Conflit entre la règle 34 et le jeton "<" résolu par décalage ("do" < "<").
    Conflit entre la règle 34 et le jeton "-" résolu par décalage ("do" < "-").
    Conflit entre la règle 34 et le jeton "<>" résolu par décalage ("do" < "<>").
    Conflit entre la règle 34 et le jeton "|" résolu par décalage ("do" < "|").
    Conflit entre la règle 34 et le jeton "+" résolu par décalage ("do" < "+").
    Conflit entre la règle 34 et le jeton "*" résolu par décalage ("do" < "*").


État 180

    7 exp: • "integer"
    8    | • "nil"
    9    | • "string"
   10    | • "identifier" "[" exp "]" "of" exp
   11    | • typeid "{" "}"
   12    | • typeid "{" record_r "}"
   13    | • lvalue
   14    | • "identifier" "(" ")"
   15    | • "identifier" "(" function_r ")"
   16    | • "-" exp
   17    | • exp "+" exp
   18    | • exp "<=" exp
   19    | • exp ">=" exp
   20    | • exp "<>" exp
   21    | • exp "-" exp
   22    | • exp "*" exp
   23    | • exp "/" exp
   24    | • exp "=" exp
   25    | • exp "<" exp
   26    | • exp ">" exp
   27    | • exp "&" exp
   28    | • exp "|" exp
   29    | • "(" exps ")"
   30    | • lvalue ":=" exp
   31    | • "if" exp "then" exp
   32    | • "if" exp "then" exp "else" exp
   33    | • "while" exp "do" exp
   34    | • "for" "identifier" ":=" exp "to" exp "do" exp
   35    | • "break"
   36    | • "let" chunks "in" exps "end"
   37    | • "_exp" "(" "integer" ")"
   42 lvalue: • "identifier"
   43       | • lvalue "." "identifier"
   44       | • lvalue "[" exp "]"
   45       | • "_lvalue" "(" "integer" ")"
   59 fundec: "function" "identifier" "(" tyfieldsbis ")" ":" typeid "=" • exp
   78 typeid: • "identifier"
   79       | • "_namety" "(" "integer" ")"

    "string"      décalage et aller à l'état 1
    "identifier"  décalage et aller à l'état 2
    "integer"     décalage et aller à l'état 3
    "break"       décalage et aller à l'état 4
    "_exp"        décalage et aller à l'état 5
    "for"         décalage et aller à l'état 6
    "if"          décalage et aller à l'état 8
    "let"         décalage et aller à l'état 10
    "("           décalage et aller à l'état 11
    "-"           décalage et aller à l'état 12
    "nil"         décalage et aller à l'état 13
    "while"       décalage et aller à l'état 17
    "_lvalue"     décalage et aller à l'état 18
    "_namety"     décalage et aller à l'état 20

    exp     aller à l'état 181
    lvalue  aller à l'état 23
    typeid  aller à l'état 31


État 181

   17 exp: exp • "+" exp
   18    | exp • "<=" exp
   19    | exp • ">=" exp
   20    | exp • "<>" exp
   21    | exp • "-" exp
   22    | exp • "*" exp
   23    | exp • "/" exp
   24    | exp • "=" exp
   25    | exp • "<" exp
   26    | exp • ">" exp
   27    | exp • "&" exp
   28    | exp • "|" exp
   59 fundec: "function" "identifier" "(" tyfieldsbis ")" ":" typeid "=" exp •  ["end of file", "function", "import", "in", "primitive", "type", "var", "_chunks"]

    "&"   décalage et aller à l'état 52
    "/"   décalage et aller à l'état 53
    "="   décalage et aller à l'état 54
    ">="  décalage et aller à l'état 55
    ">"   décalage et aller à l'état 56
    "<="  décalage et aller à l'état 57
    "<"   décalage et aller à l'état 58
    "-"   décalage et aller à l'état 59
    "<>"  décalage et aller à l'état 60
    "|"   décalage et aller à l'état 61
    "+"   décalage et aller à l'état 62
    "*"   décalage et aller à l'état 63

    $défaut  réduction par utilisation de la règle 59 (fundec)
